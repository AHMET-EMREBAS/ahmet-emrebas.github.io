@function darkColor($color) {
  @return hsl(hue($color), saturation($color), 10%);
}

@function darkerColor($color) {
  @return hsl(hue($color), saturation($color), 20%);
}

@function lightColor($color) {
  @return hsl(hue($color), saturation($color) + 5%, lightness($color) + 10%);
}

@function lighterColor($color) {
  @return hsl(hue($color), saturation($color) + 10%, lightness($color) + 20%);
}

@function isDarkHue($color) {
  $hue: hue($color);
  @if $hue <=25 or $hue >190 {
    @return true;
  } @else {
    @return false;
  }
}

@function faceColor($color) {
  $light: lightness($color);
  $saturation: saturation($color);
  $hue: hue($color);
  @if isDarkHue($color) ==true {
    @if $light >65 {
      @return var(--black);
    } @else {
      @return var(--white);
    }
  } @else {
    @if $light >40 {
      @return var(--black);
    } @else {
      @return var(--white);
    }
  }
}

@mixin createColorGlobals($name, $color) {
  --#{$name}: #{$color};
  --#{$name}-complement: hsl(#{complement($color)});
  --#{$name}-dark: #{darkColor($color)};
  --#{$name}-darker: #{darkerColor($color)};
  --#{$name}-light: #{lightColor($color)};
  --#{$name}-lighter: #{lighterColor($color)};
  --#{$name}-face: #{faceColor($color)};
}

$commonColors: (
  black: hsl(0, 2%, 12%),
  white: hsl(0, 0%, 95%),
  red: hsl(348, 83%, 47%),
  green: hsl(120, 100%, 49%),
);

$themes: (
  pastel: (
    primary: hsl(0, 97%, 77%),
    secondary: hsl(65, 80%, 84%),
    accent: hsl(180, 31%, 74%),
    warn: #9ea1d4,
  ),
  vintage: (
    primary: hsl(44, 39%, 87%),
    secondary: hsl(60, 1%, 70%),
    accent: hsl(206, 53%, 32%),
    warn: hsl(22, 97%, 46%),
  ),
  retro: (
    primary: hsl(200, 61%, 29%),
    secondary: hsl(189, 37%, 43%),
    accent: hsl(0, 82%, 66%),
    warn: hsl(30, 86%, 66%),
  ),
  neon: (
    primary: hsl(210, 69%, 25%),
    secondary: hsl(0, 89%, 64%),
    accent: hsl(37, 99%, 61%),
    warn: hsl(60, 90%, 63%),
  ),
  gold: (
    primary: hsl(14, 100%, 66%),
    secondary: hsl(29, 100%, 71%),
    accent: hsl(43, 100%, 72%),
    warn: hsl(68, 23%, 51%),
  ),
  light: (
    primary: hsl(170, 54%, 87%),
    secondary: #f9f9f9,
    accent: #ecc5fb,
    warn: #faf4b7,
  ),
  dark: (
    primary: #040d12,
    secondary: #183d3d,
    accent: #5c8374,
    warn: #93b1a6,
  ),
  warm: (
    primary: #454545,
    secondary: #ff6000,
    accent: #ffa559,
    warn: #ffe6c7,
  ),
  cold: (
    primary: #f1f6f9,
    secondary: #394867,
    accent: #212a3e,
    warn: #9ba4b5,
  ),
  summer: (
    primary: #1d5d9b,
    secondary: #75c2f6,
    accent: #f4d160,
    warn: #fbeeac,
  ),
);

// Select theme by name
@mixin selectTheme($themeName) {
  $theme: map-get($themes, $themeName);
  :root {
    @each $name, $color in map-merge($theme, $commonColors) {
      @include createColorGlobals($name, $color);
    }
  }
}

@each $colorName, $__ in $commonColors {
  .#{$colorName} {
    color: var(--#{$colorName});
  }
  .bg-#{$colorName} {
    background-color: var(--#{$colorName});
  }
  @each $variant in (complement, dark, darker, light, lighter, face) {
    .bg-#{$colorName}-#{$variant} {
      background-color: var(--#{$colorName}-#{$variant});
    }

    .#{$colorName}-#{$variant} {
      color: var(--#{$colorName}-#{$variant});
    }
  }
}

// Color classes
@each $colorName in (primary, secondary, accent, warn, error, success) {
  .#{$colorName} {
    color: var(--#{$colorName});
  }
  .bg-#{$colorName} {
    background-color: var(--#{$colorName});
  }

  @each $variant in (complement, dark, darker, light, lighter, face) {
    .bg-#{$colorName}-#{$variant} {
      background-color: var(--#{$colorName}-#{$variant});
    }

    .#{$colorName}-#{$variant} {
      color: var(--#{$colorName}-#{$variant});
    }
  }
}
