@use '../colors' as colors;

.tabs-container {
  position: relative;
}

.tabs-container > .tab {
  position: absolute;
  width: 100%;
  left: 0px;
  top: 0px;
}

.tabs-header {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
}

@mixin tabbutton() {
  box-sizing: border-box;
  cursor: pointer;
  background-color: transparent;
  color: var(--primary);
  padding: 0px;
  padding-left: 1em;
  padding-right: 1em;
  margin: 0px;
  height: 3em;

  width: 100%;
  text-wrap: nowrap;

  border-bottom: 0.3em solid var(--primary);
  border-radius: 0px;
  outline-color: transparent;
  outline-width: 0.3em;

  font-family: var(--font-button);
  font-size: 1em;
  font-weight: bolder;
  letter-spacing: 0.1em;
  text-transform: capitalize;

  user-select: none;
  text-align: center;
  vertical-align: middle;

  border: none;
  transition: border-color 200ms ease-in-out, outline-color 200ms ease-in-out,
    color 200ms ease-in-out;
}

.tab-button {
  @include tabbutton();
  // border-bottom: 0.3em solid var(--primary);
}
// tab-button  primary bottom
@each $colorName in colors.$colorNames {
  @each $side in (top, right, bottom, left) {
    .#{$colorName}.#{$side}.tab-button {
      border-#{$side}: 0.3em solid var(--#{$colorName}-3);
    }
    .#{$colorName}.#{$side}.tab-button:hover {
      border-#{$side}: 0.3em solid var(--#{$colorName}-5);
    }
    .#{$colorName}.#{$side}.tab-button:active {
      border-#{$side}: 0.3em solid var(--#{$colorName}-7);
    }
    .#{$colorName}.#{$side}.tab-button:focus,
    .#{$colorName}.#{$side}.tab-button[data-active='true'] {
      border-#{$side}: 0.3em solid var(--#{$colorName});
    }
  }
}
