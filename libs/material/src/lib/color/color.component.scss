@import '../vars/vars.component.scss';
@import '../flexbox/flexbox.component.scss';
@import '../sizing/sizing.component.scss';
@import '../fonts//fonts.component.scss';

@function isDarkHue($color) {
  $hue: hue($color);
  @if $hue <=25 or $hue >190 {
    @return true;
  } @else {
    @return false;
  }
}

@function faceColor($themeName, $color) {
  $light: lightness($color);
  $saturation: saturation($color);
  $hue: hue($color);
  @if isDarkHue($color) ==true {
    @if $light >65 {
      @return var(--#{$themeName}-black);
    } @else {
      @return var(--#{$themeName}-white);
    }
  } @else {
    @if $light >40 {
      @return var(--#{$themeName}-black);
    } @else {
      @return var(--#{$themeName}-white);
    }
  }
}

@mixin createColorGlobals($themeName, $name, $color) {
  --#{$themeName}-#{$name}: #{$color};
  --#{$themeName}-#{$name}-face: #{faceColor($themeName, $color)};

  --#{$themeName}-#{$name}-dark: #{darken($color, 10%)};
  --#{$themeName}-#{$name}-dark-face: #{faceColor(
      $themeName,
      darken($color, 10%)
    )};

  --#{$themeName}-#{$name}-darker: #{darken($color, 20%)};
  --#{$themeName}-#{$name}-darker-face: #{faceColor(
      $themeName,
      darken($color, 20%)
    )};

  --#{$themeName}-#{$name}-light: #{lighten($color, 10%)};
  --#{$themeName}-#{$name}-light-face: #{faceColor(
      $themeName,
      lighten($color, 10%)
    )};

  --#{$themeName}-#{$name}-lighter: #{lighten($color, 20%)};
  --#{$themeName}-#{$name}-lighter-face: #{faceColor(
      $themeName,
      lighten($color, 20%)
    )};

  @for $opacity from 1 to 11 {
    --#{$themeName}-#{$name}-opacity-#{$opacity}: #{rgba(
        $color,
        $opacity * 0.1
      )};
    --#{$themeName}-bg-#{$name}-opacity-#{$opacity}: #{rgba(
        $color,
        $opacity * 0.1
      )};
  }
}

// Select theme by name
@mixin addTheme($themeName, $theme) {
  :root {
    @each $name, $color in map-merge($theme, $commonColors) {
      @include createColorGlobals($themeName, $name, $color);
    }
  }
}

// Common color classes

@each $themeName, $___ in $themes {
  @each $colorName, $__ in $commonColors {
    .#{$themeName} .#{$colorName} {
      color: var(--#{$themeName}-#{$colorName});
    }
    .#{$themeName} .bg-#{$colorName} {
      background-color: var(--#{$themeName}-#{$colorName});
    }
    @each $variant in (dark, darker, light, lighter, face) {
      .#{$themeName} .bg-#{$colorName}-#{$variant} {
        background-color: var(--#{$themeName}-#{$colorName}-#{$variant});
      }

      .#{$themeName} .#{$colorName}-#{$variant} {
        color: var(--#{$themeName}-#{$colorName}-#{$variant});
      }
    }
    @for $opacity from 1 to 11 {
      .#{$themeName} .#{$colorName}-opacity-#{$opacity} {
        color: var(--#{$themeName}-#{$colorName}-opacity-#{$opacity});
      }
      .#{$themeName} .bg-#{$colorName}-opacity-#{$opacity} {
        background-color: var(
          --#{$themeName}-bg-#{$colorName}-opacity-#{$opacity}
        );
      }
    }
  }
}

@each $themeName, $___ in $themes {
  // Color classes
  @each $colorName in $colorNames {
    .#{$themeName} .#{$colorName} {
      color: var(--#{$themeName}-#{$colorName});
    }
    .#{$themeName} .bg-#{$colorName} {
      background-color: var(--#{$themeName}-#{$colorName});
    }

    @each $variant in (dark, darker, light, lighter, face) {
      .#{$themeName} .bg-#{$colorName}-#{$variant} {
        background-color: var(--#{$themeName}-#{$colorName}-#{$variant});
      }

      .#{$themeName} .#{$colorName}-#{$variant} {
        color: var(--#{$themeName}-#{$colorName}-#{$variant});
      }
    }

    @for $opacity from 1 to 11 {
      .#{$themeName} .#{$colorName}-opacity-#{$opacity} {
        color: var(--#{$themeName}-#{$colorName}-opacity-#{$opacity});
      }
      .#{$themeName} .bg-#{$colorName}-opacity-#{$opacity} {
        background-color: var(
          --#{$themeName}-bg-#{$colorName}-opacity-#{$opacity}
        );
      }
    }
  }
}

@each $themeName, $theme in $themes {
  @include addTheme($themeName, $theme);
}
