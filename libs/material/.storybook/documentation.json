{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "BaseNgrxService",
            "id": "class-BaseNgrxService-f56c0eae463aea4dab4eee54e07b84ea0797c49ecc0344fd70c8b6df8d7f11fa1dea6844c3dbe8a921256678267a55c088e9c153fa63c3a3a5011c1becdbddf9",
            "file": "libs/material/src/api/base-ngrx-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from '@ngrx/data';\r\nimport { PageEvent, SearchEvent, SortEvent } from './types';\r\n\r\nexport class BaseNgrxService<T> extends EntityCollectionServiceBase<T> {\r\n  __columns: (keyof T)[] = [];\r\n  __visibleColumns: (keyof T)[] = [];\r\n\r\n  constructor(\r\n    entityName: string,\r\n    serviceElementsFactory: EntityCollectionServiceElementsFactory\r\n  ) {\r\n    super(entityName, serviceElementsFactory);\r\n  }\r\n\r\n  columns() {\r\n    return this.__columns;\r\n  }\r\n  visibleColumns() {\r\n    return this.__visibleColumns;\r\n  }\r\n\r\n  handleSortEvent(event: SortEvent) {\r\n    console.log('handleSortEvent', event);\r\n  }\r\n\r\n  handlePageEvent(event: PageEvent) {\r\n    console.log('handlePageEvent', event);\r\n  }\r\n\r\n  handleSearchEvent(event: SearchEvent) {\r\n    console.log('handleSearchEvent', event);\r\n  }\r\n\r\n  handleRowClick(event: any) {\r\n    console.log('handleRowClick', event);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "serviceElementsFactory",
                        "type": "EntityCollectionServiceElementsFactory",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "serviceElementsFactory",
                        "type": "EntityCollectionServiceElementsFactory",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "__columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "()[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "__visibleColumns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "()[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "columns",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handlePageEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleRowClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSearchEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "SearchEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "SearchEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSortEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "SortEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "SortEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "visibleColumns",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "extends": "EntityCollectionServiceBase",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FormValue",
            "id": "class-FormValue-ad373ed9fd08eb8178db9f1df24bd631ce6f00cf32442098e307a047c3d76fcc160cf3813b024cf442cc35219b933a41fa322da64080649dc5da03e94cd84462",
            "file": "libs/material/src/api/form-value.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class FormValue<T = Record<string, any>, K extends keyof T = keyof T> {\r\n  private readonly value = new Map<K, T[K] | undefined>();\r\n\r\n  set(key: K, value: T[K]) {\r\n    this.value.set(key, value);\r\n  }\r\n\r\n  get(key: K): T[K] | undefined {\r\n    return this.value.get(key);\r\n  }\r\n\r\n  reset() {\r\n    this.value.clear();\r\n  }\r\n\r\n  formValue() {\r\n    const result: Partial<Record<K, T[K]>> = {};\r\n\r\n    for (const [key, value] of this.value) result[key] = value;\r\n\r\n    return result;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "value",
                    "defaultValue": "new Map<K, T[K] | undefined>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        121,
                        146
                    ]
                }
            ],
            "methods": [
                {
                    "name": "formValue",
                    "args": [],
                    "optional": false,
                    "returnType": "Partial<Record<K, T[K]>>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "key",
                            "type": "K",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": " | undefined",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "K",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "key",
                            "type": "K",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "K",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "BadgeDirective",
            "id": "directive-BadgeDirective-a4548d6faceb238271f7227e0fdd0887c9d0fd8a10d784dc21d61fa29edbf6f9729ba7d7fd9cce9600a00de41c2392a78b8775d38658f22616dce2a09c44de40",
            "file": "libs/material/src/micro/badge/badge.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\r\nimport { Color, BadgePosition } from './../../api';\r\n\r\n@Directive({ selector: '[tbBadge]', standalone: true })\r\nexport class BadgeDirective implements AfterViewInit {\r\n  @Input() tbBadge? = '';\r\n  @Input() tbBadgePosition?: BadgePosition = 'top-right';\r\n  @Input() tbBadgeColor?: Color = 'primary';\r\n  constructor(public readonly elementRef: ElementRef<HTMLElement>) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      if (this.tbBadge) {\r\n        this.elementRef.nativeElement.setAttribute('data-badge', this.tbBadge);\r\n        this.elementRef.nativeElement.setAttribute(\r\n          'data-badge-position',\r\n          this.tbBadgePosition!\r\n        );\r\n        this.elementRef.nativeElement.setAttribute(\r\n          'data-badge-color',\r\n          this.tbBadgeColor!\r\n        );\r\n      }\r\n    }, 200);\r\n  }\r\n}\r\n",
            "selector": "[tbBadge]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbBadge",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 6,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tbBadgeColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "tbBadgePosition",
                    "defaultValue": "'top-right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "BadgePosition",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ClassListDirective",
            "id": "directive-ClassListDirective-57dd1e92434993d0822815924018be2bee75d6466592dff3b2a5bce4bcbb04f14e6423b854f3567ecbfce434bd2ffee02a4fb0c2a91bb6f7570cc2b9a2729f94",
            "file": "libs/material/src/micro/class-list/class-list.directive.ts",
            "type": "directive",
            "description": "<p>Class list items whose name either not starts with &quot;__&quot; nor ends with &quot;Event&quot;</p>\n",
            "rawdescription": "\n\nClass list items whose name either not starts with \"__\" nor ends with \"Event\"\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\r\n\r\n/**\r\n * Class list items whose name either not starts with \"__\" nor ends with \"Event\"\r\n */\r\n@Directive({\r\n  selector: '[tbClassList]',\r\n  standalone: true,\r\n})\r\nexport class ClassListDirective implements AfterViewInit {\r\n  @Input() tbClassList?: Record<string, any>;\r\n  constructor(public readonly elementRef: ElementRef<HTMLElement>) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    console.log(this.tbClassList);\r\n    if (this.tbClassList) {\r\n      console.log('Adding classes');\r\n      const entries = Object.entries(this.tbClassList);\r\n      console.log(entries);\r\n      for (const [key, value] of entries) {\r\n        if (\r\n          value === '' ||\r\n          key.startsWith('tooltip') ||\r\n          key.startsWith('__') ||\r\n          key.startsWith('native') ||\r\n          key.startsWith('ng') ||\r\n          key.startsWith('can') ||\r\n          key.startsWith('emit') ||\r\n          key.startsWith('handle') ||\r\n          key.startsWith('children') ||\r\n          key.startsWith('child') ||\r\n          key.endsWith('Event') ||\r\n          key.endsWith('Ref')\r\n        ) {\r\n          continue;\r\n        }\r\n        console.log('adding the class:', key, value);\r\n        this.elementRef.nativeElement.classList.add(value);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[tbClassList]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbClassList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Record<string | any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "FocusDirective",
            "id": "directive-FocusDirective-6048d61e138955c81c831d0121bfdd38a1a19dd17ef51ebd796ece6a655f4b477a9a1922961c4f657ff643c65117282d053daad39601ad1a797b041af4f2e8ac",
            "file": "libs/material/src/micro/focus/focus.directive.ts",
            "type": "directive",
            "description": "<p>Focus element after view init.</p>\n",
            "rawdescription": "\n\nFocus element after view init.\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef } from '@angular/core';\r\n\r\n/**\r\n * Focus element after view init.\r\n */\r\n@Directive({\r\n  selector: '[tbFocus]',\r\n  standalone: true,\r\n})\r\nexport class FocusDirective implements AfterViewInit {\r\n  constructor(private readonly elementRef: ElementRef<HTMLElement>) {}\r\n  ngAfterViewInit(): void {\r\n    this.elementRef.nativeElement.focus();\r\n  }\r\n}\r\n",
            "selector": "[tbFocus]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "FormActionsDirective",
            "id": "directive-FormActionsDirective-145e0575314535f39f0f1cdea52b36934a10943f85da2b262e5789c2fba59890ec5137aaff0b534ad5973b5ab2a83ebd04a08b9d3c704464e5bfe52073e22254",
            "file": "libs/material/src/form/form-actions/form-actions.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[tbFormActions]',\r\n  standalone: true,\r\n})\r\nexport class FormActionsDirective {\r\n  constructor(public readonly templateRef: TemplateRef<unknown>) {}\r\n}\r\n",
            "selector": "[tbFormActions]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "HasValueDirective",
            "id": "directive-HasValueDirective-2da97885725678c39d7d7e06da7001103a836ade2696729179154c0956801abb2c90d6178c81e5e0d1f87cde7214e25e1025b2fdacb0e2158613290b3189573f",
            "file": "libs/material/src/micro/has-value/has-value.directive.ts",
            "type": "directive",
            "description": "<p>If input has value then add &quot;has-value&quot; attribute to input element.</p>\n",
            "rawdescription": "\n\nIf input has value then add \"has-value\" attribute to input element.\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef } from '@angular/core';\r\n\r\n/**\r\n * If input has value then add \"has-value\" attribute to input element.\r\n */\r\n@Directive({\r\n  selector: '[tbHasValue]',\r\n  standalone: true,\r\n})\r\nexport class HasValueDirective implements AfterViewInit {\r\n  constructor(private readonly elementRef: ElementRef<HTMLInputElement>) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.elementRef.nativeElement.addEventListener(\r\n      'input',\r\n      (event: InputEvent | any) => {\r\n        console.log('Input Event: ', event.data);\r\n        const data = event.data;\r\n        if (data?.length > 0) {\r\n          this.markAsHasValue();\r\n        } else {\r\n          this.markAsHasNovalue();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private markAsHasValue() {\r\n    this.elementRef.nativeElement.setAttribute('has-value', 'true');\r\n  }\r\n  private markAsHasNovalue() {\r\n    this.elementRef.nativeElement.setAttribute('has-value', 'false');\r\n  }\r\n}\r\n",
            "selector": "[tbHasValue]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "markAsHasNovalue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "markAsHasValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLInputElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLInputElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ScrollDirectionDirective",
            "id": "directive-ScrollDirectionDirective-fb71703a7056f99e030595d8b1277f5560c9dd5a76bd07b82d270e03eddd60724c17387e9b25cb3e172013399c8c8131d829ab3ac39e7c1be3a801847dc3924a",
            "file": "libs/material/src/micro/scroll-direction/scroll-direction.directive.ts",
            "type": "directive",
            "description": "<p>Change scroll direction to x axis</p>\n",
            "rawdescription": "\n\nChange scroll direction to x axis\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, OnDestroy } from '@angular/core';\r\nimport { Subscription, debounceTime, fromEvent } from 'rxjs';\r\n\r\n/**\r\n * Change scroll direction to x axis\r\n */\r\n@Directive({\r\n  selector: '[tbScrollX]',\r\n  standalone: true,\r\n})\r\nexport class ScrollDirectionDirective implements AfterViewInit, OnDestroy {\r\n  subscription?: Subscription;\r\n\r\n  constructor(private readonly elementRef: ElementRef<HTMLDivElement>) {}\r\n  ngOnDestroy(): void {\r\n    this.subscription?.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.elementRef.nativeElement.onwheel = (event) => {\r\n      if (!event.shiftKey) {\r\n        event.preventDefault();\r\n      }\r\n    };\r\n    this.subscription = fromEvent<WheelEvent>(\r\n      this.elementRef.nativeElement,\r\n      'wheel'\r\n    )\r\n      .pipe(debounceTime(100))\r\n      .subscribe((e) => {\r\n        if (!e.shiftKey)\r\n          this.elementRef.nativeElement.scrollBy({\r\n            left: e.deltaY * 2,\r\n            behavior: 'smooth',\r\n          });\r\n      });\r\n  }\r\n}\r\n",
            "selector": "[tbScrollX]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLDivElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLDivElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SetAttributeDirective",
            "id": "directive-SetAttributeDirective-731266eef8ce36f6915feb6aea3943a0dba07c26ff96685a73f1d5ece40242a014d50d2be8d901103681aceb02e200ca1cb97d182ebefb23c480ccf0b1ade536",
            "file": "libs/material/src/micro/set-attribute/set-attribute.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n} from '@angular/core';\r\n\r\n@Directive({ selector: '[tbSetAttribute]', standalone: true })\r\nexport class SetAttributeDirective implements AfterViewInit {\r\n  @Input() tbSetAttribute?: Record<string, any>;\r\n  constructor(public readonly elementRef: ElementRef<HTMLElement>) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.tbSetAttribute) {\r\n      const entries = Object.entries(this.tbSetAttribute);\r\n      for (const [key, value] of entries) {\r\n        if (key.startsWith('__')) {\r\n          return;\r\n        }\r\n        this.elementRef.nativeElement.setAttribute(key, value);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[tbSetAttribute]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbSetAttribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Record<string | any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SetComponentAttributeDirective",
            "id": "directive-SetComponentAttributeDirective-9be5cd873f1156ff43092d89535c736c04ca074c9da86a56b4841f3b4cdcc7ce4e7ca945d319e925cdb93b744a6741245f95e2879d845bb8e8e8c0954df6bec5",
            "file": "libs/material/src/micro/set-component-attribute/set-component-attribute.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  ComponentRef,\r\n  Directive,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[tbSetComponentAttribute]',\r\n  standalone: true,\r\n})\r\nexport class SetComponentAttributeDirective implements OnInit {\r\n  @Input() componentRef?: ComponentRef<any>;\r\n  @Input() tbSetComponentAttribute?: Record<string, any>;\r\n\r\n  ngOnInit(): void {\r\n    if (this.tbSetComponentAttribute) {\r\n      console.log(this.componentRef);\r\n      const attributes = Object.entries(this.tbSetComponentAttribute);\r\n      for (const [key, value] of attributes) {\r\n        if (key.startsWith('__')) {\r\n          continue;\r\n        }\r\n        console.log(`Adding input : ${key}  : ${value}`);\r\n        this.componentRef?.setInput(key, value);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[tbSetComponentAttribute]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "componentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "ComponentRef<any>",
                    "decorators": []
                },
                {
                    "name": "tbSetComponentAttribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Record<string | any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "TabDirective",
            "id": "directive-TabDirective-04a9e00225aa2772d61923b028bcb9ab927375dfd2d705336ff6b89ef41a387d619ee0a1c7086cd84eeb33b193c6700bb674517445b144a6913a1b98f7e710c8",
            "file": "libs/material/src/tab/tab.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, Input, TemplateRef } from '@angular/core';\r\nimport {\r\n  Color,\r\n  Icon,\r\n  Direction,\r\n  ButtonSize,\r\n  ButttonVariant,\r\n  BadgePosition,\r\n} from '../api';\r\nimport { NavListItemComponent } from '../nav-list/nav-list-item/nav-list-item.component';\r\n\r\n@Directive({ selector: '[tbTab]' })\r\nexport class TabDirective implements NavListItemComponent {\r\n  @Input() clickEvent: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input() __ngContext__ = '';\r\n\r\n  @Input() borderPosition?: Direction = 'bottom';\r\n  @Input() color?: Color = 'primary';\r\n  @Input() icon?: Icon = 'info';\r\n  @Input() label?: string = '';\r\n  @Input() nativeType: 'submit' | 'reset' | 'button' = 'button';\r\n  @Input() size?: ButtonSize | undefined = 'regular';\r\n  @Input() variant?: ButttonVariant | undefined = 'tab';\r\n\r\n  constructor(public templateRef: TemplateRef<TabDirective>) {}\r\n  emit(): void {\r\n    this.clickEvent.emit();\r\n  }\r\n}\r\n",
            "selector": "[tbTab]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": []
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<any>",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"submit\" | \"reset\" | \"button\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize | undefined",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'tab'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<TabDirective>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "NavListItemComponent"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<TabDirective>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<TabDirective>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TooltipDirective",
            "id": "directive-TooltipDirective-434a61ef6c2e848007c915bc75080385158a43b0ab1986d3480ba02dc60e334c0eb7e462740df138182df7793f4acc762dc0eed1d1a5d5cd5e14e2760da08849",
            "file": "libs/material/src/micro/tooltip/tooltip.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n} from '@angular/core';\r\nimport { Direction } from './../../api';\r\n\r\n@Directive({\r\n  selector: '[tbTooltip]',\r\n  standalone: true,\r\n})\r\nexport class TooltipDirective implements AfterViewChecked {\r\n  @Input() tbTooltip?: string = '';\r\n  @Input() tbTooltipPosition?: Direction = 'bottom';\r\n  constructor(private readonly elementRef: ElementRef<HTMLButtonElement>) {}\r\n\r\n  private setTooltip() {\r\n    const e = this.elementRef.nativeElement;\r\n    e.setAttribute('aria-label', this.tbTooltip || '');\r\n    e.setAttribute('tooltip-position', this.tbTooltipPosition || 'bottom');\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.setTooltip();\r\n  }\r\n}\r\n",
            "selector": "[tbTooltip]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbTooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tbTooltipPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Direction",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "implements": [
                "AfterViewChecked"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLButtonElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLButtonElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AlertComponent",
            "id": "component-AlertComponent-67144c9db430a1929ed480a014cfc72ab505e15066ffdef714f3ae27ef7f37a7565bea18562274af9b6a7e3dc29111c79de287d3f43a28a412e830016527509a",
            "file": "libs/material/src/alert/alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-alert",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\" {{ color }}\" role=\"alert\">    <span class=\"icon\">{{ icon }}</span>\n    <span>{{ message }}</span>\n    <div class=\"grow-1\"></div>\n    <tb-icon-button\n      [color]=\"color\"\n      icon=\"close\"\n      variant=\"inbox\"\n      size=\"small\"\n      (click)=\"emitCloseEvent()\"\n    ></tb-icon-button>\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "'Message'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closeEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emitCloseEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "IconButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Color, Icon } from '../api';\r\nimport { IconButtonComponent } from '../button';\r\nimport { MicroModule } from '../micro/micro.module';\r\n\r\n@Component({\r\n  selector: 'tb-alert',\r\n  standalone: true,\r\n  imports: [MicroModule, IconButtonComponent],\r\n  template: `<div class=\" {{ color }}\" role=\"alert\">\r\n    <span class=\"icon\">{{ icon }}</span>\r\n    <span>{{ message }}</span>\r\n    <div class=\"grow-1\"></div>\r\n    <tb-icon-button\r\n      [color]=\"color\"\r\n      icon=\"close\"\r\n      variant=\"inbox\"\r\n      size=\"small\"\r\n      (click)=\"emitCloseEvent()\"\r\n    ></tb-icon-button>\r\n  </div>`,\r\n})\r\nexport class AlertComponent {\r\n  @Output() closeEvent = new EventEmitter();\r\n  @Input() color: Color = 'primary';\r\n  @Input() icon: Icon = 'info';\r\n  @Input() message = 'Message';\r\n  @Input() closable = true;\r\n\r\n  emitCloseEvent() {\r\n    this.closeEvent.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AppAuthComponent",
            "id": "component-AppAuthComponent-362d7292947fe2e6b9833d28e9b05112c96f1a32fec54bbb4a7af5ad0f77b2ab491221c8fce895273823b2dd9faffa341a63ee0380b467f3932a1997c7299f28",
            "file": "libs/material/src/app-auth/app-auth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-app-auth",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-auth.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "forgotPasswordEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                },
                {
                    "name": "loginEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "secureEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "signupEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "submitForgotForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitLoginForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitSecureForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitSignupForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "TabModule",
                    "type": "module"
                },
                {
                    "name": "FormModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { TabModule } from '../tab/tab.module';\r\nimport { ButtonComponent } from '../button';\r\nimport { FormModule } from '../form/form.module';\r\nimport { MicroModule } from '../micro/micro.module';\r\n\r\n@Component({\r\n  selector: 'tb-app-auth',\r\n  standalone: true,\r\n  imports: [MicroModule, TabModule, FormModule, ButtonComponent],\r\n  templateUrl: './app-auth.component.html',\r\n})\r\nexport class AppAuthComponent {\r\n  @Output() loginEvent = new EventEmitter();\r\n  @Output() forgotPasswordEvent = new EventEmitter();\r\n  @Output() secureEvent = new EventEmitter();\r\n  @Output() signupEvent = new EventEmitter();\r\n\r\n  submitLoginForm(formValue: Record<string, unknown>) {\r\n    this.loginEvent.emit(formValue);\r\n  }\r\n  submitForgotForm(formValue: Record<string, unknown>) {\r\n    this.forgotPasswordEvent.emit(formValue);\r\n  }\r\n  submitSecureForm(formValue: Record<string, unknown>) {\r\n    this.secureEvent.emit(formValue);\r\n  }\r\n  submitSignupForm(formValue: Record<string, unknown>) {\r\n    this.signupEvent.emit(formValue);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<tb-tab-container>\r\n  <!-- Login form -->\r\n  <ng-template\r\n    tbTab\r\n    label=\"Login\"\r\n    icon=\"login\"\r\n    color=\"primary\"\r\n    badge=\"100\"\r\n    badgePosition=\"bottom-right\"\r\n    borderPosition=\"bottom\"\r\n  >\r\n    <tb-form\r\n      (submitEvent)=\"submitLoginForm($event)\"\r\n      name=\"login\"\r\n      title=\"Login\"\r\n      subtitle=\"With Credentials\"\r\n      ><tb-input\r\n        name=\"name\"\r\n        autocomplete=\"username\"\r\n        label=\"Username\"\r\n        icon=\"person\"\r\n      ></tb-input>\r\n      <tb-input\r\n        name=\"password\"\r\n        label=\"Input label\"\r\n        icon=\"password\"\r\n        color=\"accent\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n      ></tb-input>\r\n\r\n      <ng-template tbFormActions>\r\n        <tb-button\r\n          nativeType=\"submit\"\r\n          icon=\"login\"\r\n          label=\"Login\"\r\n          variant=\"raised\"\r\n        ></tb-button>\r\n        <tb-button\r\n          nativeType=\"reset\"\r\n          icon=\"refresh\"\r\n          label=\"Reset\"\r\n          variant=\"stroked\"\r\n        ></tb-button>\r\n      </ng-template>\r\n    </tb-form>\r\n  </ng-template>\r\n\r\n  <!-- Forgot password form -->\r\n  <ng-template\r\n    tbTab\r\n    label=\"Forgot Password\"\r\n    icon=\"password\"\r\n    color=\"primary\"\r\n    borderPosition=\"bottom\"\r\n  >\r\n    <tb-form\r\n      (submitEvent)=\"submitForgotForm($event)\"\r\n      name=\"forgot-password\"\r\n      title=\"Forgot Password\"\r\n      subtitle=\"Update your password\"\r\n    >\r\n      <tb-input\r\n        name=\"username\"\r\n        label=\"Input label\"\r\n        icon=\"person\"\r\n        color=\"primary\"\r\n        label=\"Username\"\r\n        type=\"text\"\r\n      ></tb-input>\r\n\r\n      <ng-template tbFormActions>\r\n        <tb-button\r\n          nativeType=\"submit\"\r\n          icon=\"login\"\r\n          label=\"Get Key\"\r\n          variant=\"raised\"\r\n        ></tb-button>\r\n        <tb-button\r\n          nativeType=\"reset\"\r\n          icon=\"refresh\"\r\n          label=\"Reset\"\r\n          variant=\"stroked\"\r\n        ></tb-button>\r\n      </ng-template>\r\n    </tb-form>\r\n  </ng-template>\r\n\r\n  <!-- Secure login form -->\r\n  <ng-template\r\n    tbTab\r\n    label=\"Secure Login\"\r\n    icon=\"key\"\r\n    color=\"primary\"\r\n    borderPosition=\"bottom\"\r\n  >\r\n    <tb-form\r\n      (submitEvent)=\"submitSecureForm($event)\"\r\n      name=\"secure-login\"\r\n      title=\"Login\"\r\n      subtitle=\"With key\"\r\n    >\r\n      <tb-input\r\n        name=\"key\"\r\n        label=\"Input label\"\r\n        icon=\"key\"\r\n        color=\"primary\"\r\n        label=\"Keylo\"\r\n        type=\"text\"\r\n      ></tb-input>\r\n\r\n      <ng-template tbFormActions>\r\n        <tb-button\r\n          nativeType=\"submit\"\r\n          icon=\"login\"\r\n          label=\"Verify\"\r\n          variant=\"raised\"\r\n        ></tb-button>\r\n        <tb-button\r\n          nativeType=\"reset\"\r\n          icon=\"refresh\"\r\n          label=\"Reset\"\r\n          variant=\"stroked\"\r\n        ></tb-button>\r\n      </ng-template>\r\n    </tb-form>\r\n  </ng-template>\r\n\r\n  <!-- Signup form -->\r\n  <ng-template\r\n    tbTab\r\n    label=\"Signup\"\r\n    icon=\"house\"\r\n    color=\"accent\"\r\n    borderPosition=\"bottom\"\r\n  >\r\n    <tb-form\r\n      (submitEvent)=\"submitSignupForm($event)\"\r\n      name=\"signup\"\r\n      title=\"Signup\"\r\n      subtitle=\"Welcome\"\r\n    >\r\n      <tb-input\r\n        name=\"username\"\r\n        label=\"Input label\"\r\n        name=\"username\"\r\n        label=\"Input label\"\r\n        icon=\"person\"\r\n        color=\"primary\"\r\n        label=\"Username\"\r\n        type=\"text\"\r\n      ></tb-input>\r\n      <tb-input\r\n        name=\"password\"\r\n        label=\"Input label\"\r\n        icon=\"password\"\r\n        color=\"accent\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n      ></tb-input>\r\n\r\n      <ng-template tbFormActions>\r\n        <tb-button\r\n          nativeType=\"submit\"\r\n          icon=\"signature\"\r\n          label=\"Signup\"\r\n          color=\"red\"\r\n          variant=\"raised\"\r\n        ></tb-button>\r\n        <tb-button\r\n          nativeType=\"reset\"\r\n          icon=\"refresh\"\r\n          label=\"Reset\"\r\n          variant=\"stroked\"\r\n        ></tb-button>\r\n      </ng-template>\r\n    </tb-form>\r\n  </ng-template>\r\n</tb-tab-container>\r\n"
        },
        {
            "name": "BooleanInputComponent",
            "id": "component-BooleanInputComponent-802c93430059c9180db234ddf739503b39b44574c1c326b2d22283c537f9b1d6e243ffff2c575d203bb94daf0cced8a467e3d398ebe0c6364a3b2c7166d9f0a4",
            "file": "libs/material/src/form/boolean-input/boolean-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-boolean-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex row align-center gap-2em \">\n  <input\n    class=\"input\"\n    [(ngModel)]=\"value\"\n    [id]=\"id()\"\n    type=\"checkbox\"\n    class=\"w-20px h-20px\"\n  />\n  <label class=\"label\" [for]=\"id()\">{{ label }}</label>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonInputComponent } from '../common-input/common-input.component';\r\nimport { MicroModule } from '../../micro/micro.module';\r\n\r\n@Component({\r\n  selector: 'tb-boolean-input',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n  template: `\r\n    <div class=\"flex row align-center gap-2em \">\r\n      <input\r\n        class=\"input\"\r\n        [(ngModel)]=\"value\"\r\n        [id]=\"id()\"\r\n        type=\"checkbox\"\r\n        class=\"w-20px h-20px\"\r\n      />\r\n      <label class=\"label\" [for]=\"id()\">{{ label }}</label>\r\n    </div>\r\n  `,\r\n})\r\nexport class BooleanInputComponent extends CommonInputComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-17aac7651800949585bb9079283bed6111331d32a9b3c58c8a27cb0f8cb76772088ce079aaa6f206e79b4f289e2fc3902487e9934b8ac312cd453aa031f0a90f",
            "file": "libs/material/src/button/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button   class=\"button {{ color }} {{ variant }} {{ size }} {{ borderPosition }}\"\n   [type]=\"nativeType\"\n   (click)=\"emit()\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonButtonComponent } from '../common-button';\r\nimport { MicroModule } from '../../micro/micro.module';\r\n\r\n@Component({\r\n  selector: 'tb-button',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n  template: ` <button\r\n    class=\"button {{ color }} {{ variant }} {{ size }} {{ borderPosition }}\"\r\n    [type]=\"nativeType\"\r\n    (click)=\"emit()\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styles: [],\r\n})\r\nexport class ButtonComponent extends CommonButtonComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonButtonComponent"
        },
        {
            "name": "ColorsComponent",
            "id": "component-ColorsComponent-7a0afc720745a2ba15d608e1f34da306de7052e55d507fc46f4d4a74c6258f873a8ec7fdcaf765f6d11bb64b304972a48e7bc90cfb950cac1a16f62b3f94d690",
            "file": "libs/material/src/colors/colors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-colors",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./colors.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'tb-colors',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './colors.component.html',\r\n  styles: [],\r\n})\r\nexport class ColorsComponent {\r\n  /** @ignore */\r\n  colors = [\r\n    'primary',\r\n    'secondary',\r\n    'accent',\r\n    'warn',\r\n    'red',\r\n    'green',\r\n    'black',\r\n    'white',\r\n  ];\r\n\r\n  /** @ignore */\r\n  colorVariants = this.colors.map((e) => [\r\n    e,\r\n    ...[\r\n      'light',\r\n      'lighter',\r\n      'dark',\r\n      'darker',\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5,\r\n      6,\r\n      7,\r\n      8,\r\n      9,\r\n      10,\r\n    ].map((v) => e + '-' + v),\r\n  ]);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"flex column gap-3 center\">\r\n  <div class=\"flex gap-3 wrap\" *ngFor=\"let variants of colorVariants\">\r\n    <div\r\n      class=\"flex text-center center\"\r\n      style=\"\r\n      background-color: var(--{{ color }}); \r\n      color:var(--{{ color }}-face)\r\n      \"\r\n      *ngFor=\"let color of variants\"\r\n      style=\"width: 100px; height: 100px\"\r\n    >\r\n      <span> .{{ color }} </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CombinedButtonComponent",
            "id": "component-CombinedButtonComponent-e6477d3f2b208069debc905f18d587dfe7d39e1551708742c9985bba51094e530c867c551a50fc66bfa14aabaa04476278f387699064878cd1f516ac356b91fb",
            "file": "libs/material/src/button/combined-button/combined-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-combined-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button   #button\n   class=\"button combined-button  {{ color }} {{ variant }} {{ size }} {{\n     borderPosition\n   }}\"\n   (click)=\"emit()\"\n   [type]=\"nativeType\"\n >\n   <span class=\"icon\" *ngIf=\"icon\">{{ icon }}</span>\n   <span *ngIf=\"label\">{{ label }}</span>\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nimport { CommonButtonComponent } from '../common-button';\r\n\r\nimport { MicroModule } from '../../micro/micro.module';\r\n\r\n@Component({\r\n  selector: 'tb-combined-button',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n\r\n  template: ` <button\r\n    #button\r\n    class=\"button combined-button  {{ color }} {{ variant }} {{ size }} {{\r\n      borderPosition\r\n    }}\"\r\n    (click)=\"emit()\"\r\n    [type]=\"nativeType\"\r\n  >\r\n    <span class=\"icon\" *ngIf=\"icon\">{{ icon }}</span>\r\n    <span *ngIf=\"label\">{{ label }}</span>\r\n  </button>`,\r\n})\r\nexport class CombinedButtonComponent extends CommonButtonComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonButtonComponent"
        },
        {
            "name": "CommonButtonComponent",
            "id": "component-CommonButtonComponent-eec870115281b9348dfaedfa9c6c6329b15003da77996d3eeb5ee0e134600240735624d52b29c5a814c5b7d0349d800ad1ace6e15b86c91c3c99c1d4e36a5f64",
            "file": "libs/material/src/button/common-button/common-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": []
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ButtonSize, ButttonVariant, Color, Direction } from '../../api';\r\n\r\n@Component({ template: '' })\r\nexport class CommonButtonComponent {\r\n  /** @ignore */\r\n\r\n  @ViewChild('button') ref?: ElementRef<HTMLButtonElement>;\r\n\r\n  @Input() __ngContext__ = '';\r\n\r\n  @Input() borderPosition?: Direction;\r\n  @Input() color?: Color = 'primary';\r\n  @Input() icon?: string;\r\n  @Input() label?: string;\r\n  @Input() nativeType: HTMLButtonElement['type'] = 'button';\r\n  @Input() size?: ButtonSize = 'regular';\r\n  @Input() variant?: ButttonVariant = 'basic';\r\n  /** Only supported by tab variant */\r\n\r\n  @Input()\r\n  @Output()\r\n  clickEvent = new EventEmitter();\r\n\r\n  emit() {\r\n    this.clickEvent.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CommonFormComponent",
            "id": "component-CommonFormComponent-3f955beddb11157320d272c8bb406b0d07d6d3da3b959661a2c47d0c3e499dac04474ee1424b089b0174fd2eb7a5e64547b73b33cff65f68efe57fb08111dc5a",
            "file": "libs/material/src/api/common-form-component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "errors",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Optional,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { validateFormDto } from '@techbir/common';\r\nimport { ClassConstructor } from '@techbir/utils';\r\nimport { BaseNgrxService } from './base-ngrx-service';\r\nimport { catchError, tap } from 'rxjs';\r\n\r\n@Component({ template: '' })\r\nexport class CommonFormComponent implements AfterViewInit {\r\n  id?: string | undefined;\r\n  defaultValue: any;\r\n\r\n  errors = {};\r\n  @Output() submitEvent = new EventEmitter();\r\n\r\n  constructor(\r\n    protected readonly service: BaseNgrxService<any>,\r\n    @Optional() @Inject('none') protected readonly dto: ClassConstructor<any>,\r\n    protected readonly activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  async submit(event: any) {\r\n    if (this.id) {\r\n      this.service.update({ id: this.id, ...event });\r\n    } else {\r\n      console.log('Adding to remove', event);\r\n      await this.service.add({ id: 90000, ...event });\r\n    }\r\n\r\n    this.submitEvent.emit(event);\r\n  }\r\n\r\n  validate(event: any) {\r\n    const error = validateFormDto(this.dto, event);\r\n    if (error) {\r\n      Object.assign(this.errors, error);\r\n      return false;\r\n    } else {\r\n      this.errors = {};\r\n      return true;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.id = this.activatedRoute.snapshot.queryParamMap.get('id') || undefined;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "BaseNgrxService<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dto",
                        "type": "ClassConstructor<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "BaseNgrxService<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dto",
                        "type": "ClassConstructor<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "CommonInputComponent",
            "id": "component-CommonInputComponent-1f07e4043b9015d2284542872c4bbf739c8155cee424e0e564c4ab80ed33112ec6b197ca20736b5bdf8e56f7822df8b6ee41b96a31fe988c2693e7c74afb7352",
            "file": "libs/material/src/form/common-input/common-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Direction",
                    "decorators": []
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"row\" | \"column\"",
                    "decorators": []
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "FormValue",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "InputType",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "SelectOption[]",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "InputVariant",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  Color,\r\n  Direction,\r\n  Icon,\r\n  InputType,\r\n  InputVariant,\r\n  SelectOption,\r\n} from '../../api';\r\n\r\nimport { FormValue } from '../../api/form-value';\r\n\r\n@Component({ standalone: true, template: `` })\r\nexport class CommonInputComponent<T = any> {\r\n  @Input() formValue?: FormValue;\r\n\r\n  @Optional()\r\n  @ViewChild('input')\r\n  inputRef!: ElementRef<HTMLInputElement>;\r\n\r\n  @Output() inputEvent = new EventEmitter<T>();\r\n\r\n  @Input() __ngContext__ = '';\r\n\r\n  @Input() formName?: string;\r\n  @Input() inputType?: InputType = 'text';\r\n  @Input() value?: any;\r\n  @Input() name!: string;\r\n  @Input() type?: HTMLInputElement['type'];\r\n  @Input() autocomplete?: HTMLInputElement['autocomplete'];\r\n  @Input() color?: Color = 'primary';\r\n  @Input() label?: string = 'Not set';\r\n  @Input() variant?: InputVariant = 'basic';\r\n  @Input() icon?: Icon = 'info';\r\n  @Input() error?: string;\r\n\r\n  @Input() options?: SelectOption[];\r\n  @Input() direction?: Direction = 'bottom';\r\n  @Input() distribution?: 'row' | 'column' = 'column';\r\n\r\n  emit() {\r\n    this.formValue?.set(this.name, this.value);\r\n    this.inputEvent.emit(this.value);\r\n  }\r\n\r\n  id() {\r\n    return `${this.formName}-${this.name}-${this.inputType}`;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CommonTableComponent",
            "id": "component-CommonTableComponent-37a8ab4f7e94ebf5e599ae43f2348614bd83e808c21c10785d3bd05bb2e9ba14ef449c9f6c07c8622d6b65f0f07dd0b79c2ac9af8d63493375afbd29b23d3bc2",
            "file": "libs/material/src/api/common-table-component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "this.service.columns()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "()[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "count$",
                    "defaultValue": "this.service.count$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "data$",
                    "defaultValue": "this.service.entities$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<T[]>",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "visibleColumns",
                    "defaultValue": "this.service.visibleColumns()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "()[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "handlePageEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleRowClickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSearchEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "SearchEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "SearchEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSortEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "SortEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "SortEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseNgrxService } from './base-ngrx-service';\r\nimport { PageEvent, SearchEvent, SortEvent } from './types';\r\n\r\n@Component({ template: '' })\r\nexport class CommonTableComponent<T> {\r\n  data$: Observable<T[]> = this.service.entities$;\r\n  count$: Observable<number> = this.service.count$;\r\n  columns: (keyof T)[] = this.service.columns();\r\n  visibleColumns: (keyof T)[] = this.service.visibleColumns();\r\n\r\n  constructor(protected service: BaseNgrxService<T>) {\r\n    this.service.getAll();\r\n  }\r\n\r\n  handleSortEvent(event: SortEvent) {\r\n    this.service.handleSortEvent(event);\r\n  }\r\n\r\n  handlePageEvent(event: PageEvent) {\r\n    this.service.handlePageEvent(event);\r\n  }\r\n\r\n  handleSearchEvent(event: SearchEvent) {\r\n    this.service.handleSearchEvent(event);\r\n  }\r\n\r\n  handleRowClickEvent(event: any) {\r\n    this.service.handleRowClick(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "BaseNgrxService<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "BaseNgrxService<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "DateInputComponent",
            "id": "component-DateInputComponent-bbba7c561e2e3c9ba5186505cccc3aa6e52323232ea823bfcfe20bacb25783c9693b2057ecd15c0b4fe3ebcdb597d0a6ae4dd843f082025c96821d50ea0a599f",
            "file": "libs/material/src/form/date-input/date-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-date-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  class=\"input-container {{ color }} {{ variant }} \"\n  [tbTooltip]=\"error\"\n  tbTooltipPosition=\"bottom\"\n  [class.red]=\"error\"\n>\n  <span class=\"icon\">{{ icon }}</span>\n  <label class=\"label\" [for]=\"id()\">\n    {{ label }}\n    <span class=\"input-error\" *ngIf=\"error\">{{ error }}</span>\n  </label>\n  <input\n    class=\"input\"\n    #input\n    [(ngModel)]=\"value\"\n    [id]=\"id()\"\n    type=\"date\"\n    (input)=\"emit()\"\n  />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component } from '@angular/core';\r\nimport { CommonInputComponent } from '../common-input/common-input.component';\r\nimport { MicroModule } from '../../micro/micro.module';\r\n\r\n@Component({\r\n  selector: 'tb-date-input',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n  template: `\r\n    <div\r\n      class=\"input-container {{ color }} {{ variant }} \"\r\n      [tbTooltip]=\"error\"\r\n      tbTooltipPosition=\"bottom\"\r\n      [class.red]=\"error\"\r\n    >\r\n      <span class=\"icon\">{{ icon }}</span>\r\n      <label class=\"label\" [for]=\"id()\">\r\n        {{ label }}\r\n        <span class=\"input-error\" *ngIf=\"error\">{{ error }}</span>\r\n      </label>\r\n      <input\r\n        class=\"input\"\r\n        #input\r\n        [(ngModel)]=\"value\"\r\n        [id]=\"id()\"\r\n        type=\"date\"\r\n        (input)=\"emit()\"\r\n      />\r\n    </div>\r\n  `,\r\n})\r\nexport class DateInputComponent\r\n  extends CommonInputComponent\r\n  implements AfterViewInit\r\n{\r\n  ngAfterViewInit(): void {\r\n    this.inputRef.nativeElement.setAttribute('has-value', 'true');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "DatePickerComponent",
            "id": "component-DatePickerComponent-6fe35fc7a7305b02ac93fa5dd752a1a20bc75ab68b515b14914a4ab0bc6677dcbf37dac7847db91115de3151e1c4a890155ae64a3f4c7bfcb0532057036543d4",
            "file": "libs/material/src/form/date-picker/date-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-date-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"date-picker \">\n  <div class=\"years\">\n    <span>Year</span>\n    <input\n      type=\"number\"\n      min=\"1\"\n      max=\"4000\"\n      maxlength=\"4\"\n      [(ngModel)]=\"year\"\n    />\n    <span>Month</span>\n    <input\n      class=\"input\"\n      type=\"number\"\n      min=\"1\"\n      max=\"12\"\n      maxlength=\"2\"\n      [(ngModel)]=\"month\"\n    />\n    <span>Range</span>\n    <input\n      class=\"input\"\n      type=\"number\"\n      min=\"1\"\n      max=\"31\"\n      maxlength=\"2\"\n      [(ngModel)]=\"selectRange\"\n    />\n  </div>\n  <div class=\"month select-range-{{ selectRange }}\">\n    <div class=\"dayname bold\" *ngFor=\"let dayName of listOfDays()\">\n      {{ dayName | slice: 0:1 }}\n    </div>\n    <div\n      class=\"day {{ color }} day-{{ date.day }}\"\n      *ngFor=\"let date of getDaysInMonth(year, month)\"\n      [class.current-date]=\"isCurrentDate(date)\"\n      [class.in-month]=\"date.month + 1 === month\"\n    >\n      {{ date.day }}\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "date",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "day",
                    "defaultValue": "this.date.getDate() + 1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "month",
                    "defaultValue": "this.date.getMonth() + 1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "selectRange",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "year",
                    "defaultValue": "this.date.getFullYear()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getDaysInMonth",
                    "args": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "month",
                            "type": "MonthNum",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "month",
                            "type": "MonthNum",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isCurrentDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listOfDays",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\nimport { CommonInputComponent } from '../common-input/common-input.component';\r\nimport { MicroModule } from '../../micro/micro.module';\r\nimport { ListOfDays, MonthNum } from '../../api';\r\n\r\n@Component({\r\n  selector: 'tb-date-input',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n  template: `\r\n    <div class=\"date-picker \">\r\n      <div class=\"years\">\r\n        <span>Year</span>\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"4000\"\r\n          maxlength=\"4\"\r\n          [(ngModel)]=\"year\"\r\n        />\r\n        <span>Month</span>\r\n        <input\r\n          class=\"input\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"12\"\r\n          maxlength=\"2\"\r\n          [(ngModel)]=\"month\"\r\n        />\r\n        <span>Range</span>\r\n        <input\r\n          class=\"input\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"31\"\r\n          maxlength=\"2\"\r\n          [(ngModel)]=\"selectRange\"\r\n        />\r\n      </div>\r\n      <div class=\"month select-range-{{ selectRange }}\">\r\n        <div class=\"dayname bold\" *ngFor=\"let dayName of listOfDays()\">\r\n          {{ dayName | slice: 0:1 }}\r\n        </div>\r\n        <div\r\n          class=\"day {{ color }} day-{{ date.day }}\"\r\n          *ngFor=\"let date of getDaysInMonth(year, month)\"\r\n          [class.current-date]=\"isCurrentDate(date)\"\r\n          [class.in-month]=\"date.month + 1 === month\"\r\n        >\r\n          {{ date.day }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport class DatePickerComponent extends CommonInputComponent {\r\n  @Input() date = new Date();\r\n  @Input() year = this.date.getFullYear();\r\n  @Input() month = this.date.getMonth() + 1;\r\n  @Input() day = this.date.getDate() + 1;\r\n  @Input() selectRange = 3;\r\n\r\n  openDate() {\r\n    this.inputRef.nativeElement.focus();\r\n    this.inputRef.nativeElement.dispatchEvent(\r\n      new InputEvent('input', {\r\n        bubbles: true,\r\n        cancelable: true,\r\n        composed: true,\r\n      })\r\n    );\r\n  }\r\n\r\n  getDaysInMonth(year: number, month: MonthNum) {\r\n    month -= 1;\r\n\r\n    const list42 = [];\r\n\r\n    // 0 to 6\r\n    const startDayOfweek = new Date(year, month).getDay();\r\n    const thisMonthsLength = new Date(year, month + 1, 0).getDate();\r\n    const previousMonthsLegth = new Date(year, month, 0).getDate();\r\n\r\n    let daysFromPreviousMonth = previousMonthsLegth;\r\n\r\n    for (let i = 1; i <= thisMonthsLength; i++) {\r\n      list42.push({\r\n        day: i,\r\n        month,\r\n        year,\r\n      });\r\n    }\r\n\r\n    // 0 to 6\r\n    // 1 --> 30  1 2 3 4 5 6\r\n    // 2 --> 29 30 1 2 3 4 5\r\n    // 3 --> 28 29 30 1 2 3 4\r\n    // Add days from previous month\r\n    for (let i = 0; i < startDayOfweek; i++) {\r\n      list42.unshift({\r\n        day: daysFromPreviousMonth--,\r\n        month: month - 1,\r\n        year,\r\n      });\r\n    }\r\n    // Add days from next month\r\n    const currentLength = list42.length;\r\n    for (let i = 1; i <= 42 - currentLength; i++) {\r\n      list42.push({\r\n        day: i,\r\n        month: month + 1,\r\n        year,\r\n      });\r\n    }\r\n\r\n    return list42;\r\n  }\r\n\r\n  listOfDays() {\r\n    return ListOfDays;\r\n  }\r\n\r\n  isCurrentDate(date: { day: number; year: number; month: number }) {\r\n    return (\r\n      new Date(date.year, date.month, date.day).toLocaleDateString() ===\r\n      new Date(Date.now()).toLocaleDateString()\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "FontsComponent",
            "id": "component-FontsComponent-cfe1ce160c336839a776da7f80891c351ab267daafbd2e0b6d798dde0903223a76dd4e36fae0c2ec1fc393aae2d2bea579f6853f38a539e016547aae4901116f",
            "file": "libs/material/src/fonts/fonts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-fonts",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fonts.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'tb-fonts',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './fonts.component.html',\r\n  styles: [],\r\n})\r\nexport class FontsComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<article style=\"font-size: 16px\">\r\n  <h1 class=\"title-1\" substring=\"Built by Ahmet Emrebas\">\r\n    Welcome to techbir angular material\r\n  </h1>\r\n\r\n  <div class=\"subtitle-1\">Let's learn how to structure our project.</div>\r\n\r\n  <div class=\"content-1\">\r\n    First is first. Let's install required tools and configure them. First is\r\n    first. Let's install required tools and configure them. First is first.\r\n    Let's install required tools and configure them. First is first. Let's\r\n    install required tools and configure them. First is first. Let's install\r\n    required tools and configure them.\r\n  </div>\r\n\r\n  <hr />\r\n  <h1 class=\"title-2\" substring=\"Built by Ahmet Emrebas\">\r\n    Welcome to techbir angular material\r\n  </h1>\r\n\r\n  <div class=\"subtitle-2\">Let's learn how to structure our project.</div>\r\n\r\n  <div class=\"content-2\">\r\n    First is first. Let's install required tools and configure them. First is\r\n    first. Let's install required tools and configure them. First is first.\r\n    Let's install required tools and configure them. First is first. Let's\r\n    install required tools and configure them. First is first. Let's install\r\n    required tools and configure them.\r\n  </div>\r\n</article>\r\n"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-c71cf832d5122f397ab7e827db2db2a0023756b070d4951897793160179d542dea2d96b86560ac6b2c33cdd0b48082bf8837fa263d4679f05aded001085ab2ec",
            "file": "libs/material/src/form/form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "errors",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Record<string | string>",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'form'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter<Record<string, unknown>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<FormActionsDirective>",
                    "optional": true,
                    "description": "<p>Form action container marked by FormActionDirective</p>\n",
                    "line": 29,
                    "rawdescription": "\nForm action container marked by FormActionDirective",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "FormActionsDirective"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<InputComponent>",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "InputComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "componentType",
                    "defaultValue": "InputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "formValue",
                    "defaultValue": "new FormValue()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "childValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "InputComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "InputComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "preventDefault",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "InputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n} from '@angular/core';\r\nimport { InputComponent } from './input/input.component';\r\nimport { FormActionsDirective } from './form-actions/form-actions.directive';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MicroModule } from '../micro/micro.module';\r\nimport { FormValue } from '../api/form-value';\r\n\r\n@Component({\r\n  selector: 'tb-form',\r\n  standalone: true,\r\n  imports: [MicroModule, FormsModule, ReactiveFormsModule, InputComponent],\r\n  templateUrl: './form.component.html',\r\n})\r\nexport class FormComponent {\r\n  @Input() errors: Record<string, string> = {};\r\n\r\n  componentType = InputComponent;\r\n\r\n  /** Form action container marked by FormActionDirective  */\r\n  @ContentChildren(FormActionsDirective)\r\n  actions?: QueryList<FormActionsDirective>;\r\n\r\n  @ContentChildren(InputComponent) children!: QueryList<InputComponent>;\r\n\r\n  @Output() submitEvent = new EventEmitter<Record<string, unknown>>();\r\n  @Input() title = '';\r\n  @Input() subtitle = '';\r\n  @Input() name = 'form';\r\n\r\n  @Input() defaultValue?: any;\r\n  \r\n\r\n  readonly formValue = new FormValue();\r\n\r\n  preventDefault(event: Event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  childValue(value: InputComponent) {\r\n    return value.inputs({\r\n      formName: this.name,\r\n      formValue: this.formValue,\r\n      error: this.errors[value.name],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.submitEvent.emit(this.formValue.formValue());\r\n  }\r\n\r\n  reset() {\r\n    this.formValue.reset();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<form\r\n  #form=\"ngForm\"\r\n  ngForm\r\n  class=\"form-container primary\"\r\n  autocomplete=\"on\"\r\n  (ngSubmit)=\"submit()\"\r\n  (submit)=\"preventDefault($event)\"\r\n  (reset)=\"reset()\"\r\n  novalidate\r\n>\r\n  <h1 class=\"title-1 form-title\" [attr.substring]=\"subtitle\" *ngIf=\"title\">\r\n    {{ title }}\r\n  </h1>\r\n\r\n  <ng-container *ngFor=\"let child of children\">\r\n    <ng-container\r\n      *ngComponentOutlet=\"componentType; inputs: childValue(child)\"\r\n    ></ng-container>\r\n  </ng-container>\r\n\r\n  <div class=\"form-actions\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"actions?.first?.templateRef!\"\r\n    ></ng-container>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "IconButtonComponent",
            "id": "component-IconButtonComponent-8fae858ac3da5f7a2c567218b84f07793101f443bbc405378618f20b061eeb1df1457447b3733b8852bf4e8729b6211d7f6da0773a862c58b22ba97d5114191c",
            "file": "libs/material/src/button/icon-button/icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-icon-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button    class=\"icon-button  {{ color }} {{ variant }} {{ size }} {{\n      borderPosition\n    }}\"\n    (click)=\"emit()\"\n    [type]=\"nativeType\"\n  >\n    <span class=\"icon\">{{ icon }}</span>\n  </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonButtonComponent } from '../common-button';\r\nimport { MicroModule } from '../../micro/micro.module';\r\n\r\n@Component({\r\n  selector: 'tb-icon-button',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n  template: `<button\r\n    class=\"icon-button  {{ color }} {{ variant }} {{ size }} {{\r\n      borderPosition\r\n    }}\"\r\n    (click)=\"emit()\"\r\n    [type]=\"nativeType\"\r\n  >\r\n    <span class=\"icon\">{{ icon }}</span>\r\n  </button>`,\r\n})\r\nexport class IconButtonComponent extends CommonButtonComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonButtonComponent"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-3a89e846f0a41a92d8d6959fec2f0c94bfb1a9ba02ea7b5ae7b9c1549506617ce035d927c0e6a8870db509fb8e8d3730e7f0afd81ad57ef30834cfd061bca1ba",
            "file": "libs/material/src/micro/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-icon",
            "styleUrls": [],
            "styles": [],
            "template": "<span class=\"icon {{ fill }}\" *ngIf=\"icon\">{{ icon }}</span>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "fill",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"fill\" | string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Icon",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Color, Icon } from '../../api';\r\n\r\n@Component({\r\n  selector: 'tb-icon',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `<span class=\"icon {{ fill }}\" *ngIf=\"icon\">{{ icon }}</span>`,\r\n})\r\nexport class IconComponent {\r\n  @Input() icon?: Icon;\r\n  @Input() color?: Color;\r\n  @Input() fill?: 'fill' | '' = '';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-ba553ce83d857405305de089be605d9b6585ed6ea1a0858786b7340acc9c23de7719827f5ee48959390f42bf2b2f98307018150e63a2f2a14637974aedb60dd9",
            "file": "libs/material/src/form/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-input",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngComponentOutlet=\"componentType(); inputs: inputs()\">\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "__boolean",
                    "defaultValue": "BooleanInputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "__date",
                    "defaultValue": "DatePickerComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "__number",
                    "defaultValue": "NumberInputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "__select",
                    "defaultValue": "SelectInputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "__text",
                    "defaultValue": "TextInputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "__textarea",
                    "defaultValue": "TextareaComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "componentType",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "inputs",
                    "args": [
                        {
                            "name": "extras",
                            "type": "Record<string | any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Record<string, any>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "extras",
                            "type": "Record<string | any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { TextInputComponent } from '../text-input/text-input.component';\r\nimport { CommonInputComponent } from '../common-input/common-input.component';\r\nimport { DatePickerComponent } from '../date-picker/date-picker.component';\r\nimport { NumberInputComponent } from '../number-input/number-input.component';\r\nimport { BooleanInputComponent } from '../boolean-input/boolean-input.component';\r\nimport { SelectInputComponent } from '../select-input/select-input.component';\r\n\r\nimport { MicroModule } from '../../micro/micro.module';\r\nimport { TextareaComponent } from '../textarea/textarea.component';\r\n\r\n@Component({\r\n  selector: 'tb-input',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n  template: `\r\n    <ng-container *ngComponentOutlet=\"componentType(); inputs: inputs()\">\r\n    </ng-container>\r\n  `,\r\n})\r\nexport class InputComponent extends CommonInputComponent {\r\n  __text = TextInputComponent;\r\n  __textarea = TextareaComponent;\r\n  __date = DatePickerComponent;\r\n  __number = NumberInputComponent;\r\n  __select = SelectInputComponent;\r\n  __boolean = BooleanInputComponent;\r\n\r\n  inputs(extras?: Record<string, any>): Record<string, any> {\r\n    const {\r\n      inputRef,\r\n      __text,\r\n      __textarea,\r\n      __date,\r\n      __boolean,\r\n      __select,\r\n      __number,\r\n      inputEvent,\r\n      ...rest\r\n    } = this;\r\n    return { ...rest, ...extras };\r\n  }\r\n\r\n  componentType() {\r\n    if (this.inputType === 'text') {\r\n      return this.__text;\r\n    } else if (this.inputType == 'textarea') {\r\n      return this.__textarea;\r\n    } else if (this.inputType === 'number') {\r\n      return this.__number;\r\n    } else if (this.inputType === 'date') {\r\n      return this.__date;\r\n    } else if (this.inputType === 'select') {\r\n      return this.__select;\r\n    } else if (this.inputType === 'boolean') {\r\n      return this.__boolean;\r\n    }\r\n\r\n    return this.__text;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-43dadab75794752d4b6a299d19400dd5f29c7e051f37fe0a901ad3585b2b94460acb339dad7c5d8d055d230e89c3195aa6882f98999eeb01cdb421a90d02f90a",
            "file": "libs/material/src/layout/layout.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMobile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "leftOpen",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "leftPrimaryMenu",
                    "defaultValue": "[\r\n    { label: 'First ', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Last', icon: 'info', route: ['route'] },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "leftSecondaryMenu",
                    "defaultValue": "[\r\n    { label: 'First ', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Last', icon: 'info', route: ['route'] },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "rightOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "rightPrimaryMenu",
                    "defaultValue": "[\r\n    { label: 'First', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Last', icon: 'task', route: ['route'] },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "rightSecondaryMenu",
                    "defaultValue": "[\r\n    { label: 'Fist', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Last', icon: 'task', route: ['route'] },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Title",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "ToolbarComponent",
                    "type": "component"
                },
                {
                    "name": "NavListModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n} from '@angular/core';\r\nimport { ToolbarComponent } from '../toolbar/toolbar.component';\r\nimport { NavListModule } from '../nav-list/nav-list.component';\r\nimport { ButtonModule } from '../button';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { MicroModule } from '../micro/micro.module';\r\nimport {\r\n  fadeInOnEnterAnimation,\r\n  fadeOutOnLeaveAnimation,\r\n} from 'angular-animations';\r\nimport { NavItem } from '../api';\r\n\r\n@Component({\r\n  selector: 'tb-layout',\r\n  standalone: true,\r\n  imports: [MicroModule, ToolbarComponent, NavListModule, ButtonModule],\r\n  templateUrl: './layout.component.html',\r\n  animations: [\r\n    fadeInOnEnterAnimation({ anchor: 'enter', duration: 400 }),\r\n    fadeOutOnLeaveAnimation({ anchor: 'leave', duration: 400 }),\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LayoutComponent implements AfterViewInit {\r\n  leftOpen = true;\r\n  rightOpen = false;\r\n  isMobile?: boolean;\r\n\r\n  leftPrimaryMenu: NavItem[] = [\r\n    { label: 'First ', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Last', icon: 'info', route: ['route'] },\r\n  ];\r\n  leftSecondaryMenu: NavItem[] = [\r\n    { label: 'First ', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Left menu item', icon: 'info', route: ['route'] },\r\n    { label: 'Last', icon: 'info', route: ['route'] },\r\n  ];\r\n\r\n  rightPrimaryMenu: NavItem[] = [\r\n    { label: 'First', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Last', icon: 'task', route: ['route'] },\r\n  ];\r\n  rightSecondaryMenu: NavItem[] = [\r\n    { label: 'Fist', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Right menu item', icon: 'task', route: ['route'] },\r\n    { label: 'Last', icon: 'task', route: ['route'] },\r\n  ];\r\n\r\n  constructor(public readonly title: Title) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    const html = document.querySelector('html');\r\n    console.log(html?.clientWidth);\r\n    if (html && html.clientWidth < 500) {\r\n      console.log('Is Mobile');\r\n      this.isMobile = true;\r\n      this.leftOpen = false;\r\n      this.rightOpen = false;\r\n    } else {\r\n      console.log('Is Desktop');\r\n      this.isMobile = false;\r\n      this.leftOpen = true;\r\n      this.rightOpen = false;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 130,
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"flex column w-100per h-100vh relative\">\r\n  <tb-toolbar>\r\n    <img\r\n      src=\"/assets/icons/icon-72x72.png\"\r\n      alt=\"Logo\"\r\n      style=\"width: 30px; height: 30px; margin-right: 1em\"\r\n    />\r\n\r\n    <tb-icon-button\r\n      [icon]=\"leftOpen ? 'menu_open' : 'menu'\"\r\n      color=\"white\"\r\n      (clickEvent)=\"leftOpen = !leftOpen\"\r\n    ></tb-icon-button>\r\n\r\n    <span style=\"color: #ffffff\">{{ title.getTitle() }}</span>\r\n\r\n    <div class=\"grow-1\"></div>\r\n\r\n    <tb-icon-button\r\n      icon=\"settings\"\r\n      color=\"white\"\r\n      (clickEvent)=\"rightOpen = !rightOpen\"\r\n    ></tb-icon-button>\r\n  </tb-toolbar>\r\n  <div class=\"flex row w-100per\"></div>\r\n\r\n  <div class=\"flex row w-100per grow-1 relative\" style=\"max-height: 100%\">\r\n    <div\r\n      class=\"flex column h-100% gap-2em\"\r\n      style=\"\r\n        background-color: var(--primary);\r\n        min-width: 200px;\r\n        max-height: 100%;\r\n        overflow: hidden;\r\n        overflow-y: auto;\r\n      \"\r\n      *ngIf=\"leftOpen\"\r\n      [class.absolute]=\"isMobile\"\r\n      (click)=\"leftOpen = false\"\r\n      [@enter]\r\n      [@leave]\r\n    >\r\n      <tb-nav-list>\r\n        <tb-nav-list-item\r\n          [label]=\"item.label\"\r\n          [icon]=\"item.icon\"\r\n          [route]=\"item.route\"\r\n          *ngFor=\"let item of leftPrimaryMenu\"\r\n        ></tb-nav-list-item>\r\n      </tb-nav-list>\r\n      <tb-nav-list>\r\n        <tb-nav-list-item\r\n          [label]=\"item.label\"\r\n          [icon]=\"item.icon\"\r\n          [route]=\"item.route\"\r\n          *ngFor=\"let item of leftSecondaryMenu\"\r\n        ></tb-nav-list-item>\r\n      </tb-nav-list>\r\n    </div>\r\n    <div class=\"flex column grow-1\" style=\"border: 5px dashed var(--primary-5)\">\r\n      Content\r\n    </div>\r\n    <div\r\n      class=\"flex column h-100per r-0 gap-2em oy-auto\"\r\n      style=\"\r\n        background-color: var(--primary);\r\n        min-width: 200px;\r\n        max-height: 100%;\r\n        overflow: hidden;\r\n        overflow-y: auto;\r\n      \"\r\n      *ngIf=\"rightOpen\"\r\n      [class.absolute]=\"isMobile\"\r\n      (click)=\"rightOpen = false\"\r\n      [@enter]\r\n      [@leave]\r\n    >\r\n      <tb-nav-list>\r\n        <tb-nav-list-item\r\n          [label]=\"item.label\"\r\n          [icon]=\"item.icon\"\r\n          [route]=\"item.route\"\r\n          *ngFor=\"let item of rightPrimaryMenu\"\r\n        ></tb-nav-list-item>\r\n      </tb-nav-list>\r\n      <tb-nav-list>\r\n        <tb-nav-list-item\r\n          [label]=\"item.label\"\r\n          [icon]=\"item.icon\"\r\n          [route]=\"item.route\"\r\n          *ngFor=\"let item of rightSecondaryMenu\"\r\n        ></tb-nav-list-item>\r\n      </tb-nav-list>\r\n    </div>\r\n  </div>\r\n\r\n  <tb-toolbar>\r\n    <ng-content select=\"[statusbar]\"></ng-content>\r\n  </tb-toolbar>\r\n</div>\r\n"
        },
        {
            "name": "ListComponent",
            "id": "component-ListComponent-98ac6af0a9a12449d481b52800c64d63910271c679a987da21f3f155641982797bce02b89e8da21bcaa47b7fd84fa7c7d2e0c030ce9edf01f0d17f3fbfa6e982",
            "file": "libs/material/src/list/list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-list",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"list\">\n  <ng-container\n    [ngComponentOutlet]=\"componentType\"\n    [ngComponentOutletInputs]=\"{\n      label: child.label,\n      icon: child.icon || icon,\n      color: child.color || color\n    }\"\n    *ngFor=\"let child of children\"\n  ></ng-container>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Icon",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ListItemComponent>",
                    "optional": true,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ListItemComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "componentType",
                    "defaultValue": "ListItemComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ListItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChildren, Input, QueryList } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ListItemComponent } from './list-item/list-item.component';\r\nimport { Color, Icon } from '../api';\r\n\r\n@Component({\r\n  selector: 'tb-list',\r\n  standalone: true,\r\n  imports: [CommonModule, ListItemComponent],\r\n  template: `\r\n    <div class=\"list\">\r\n      <ng-container\r\n        [ngComponentOutlet]=\"componentType\"\r\n        [ngComponentOutletInputs]=\"{\r\n          label: child.label,\r\n          icon: child.icon || icon,\r\n          color: child.color || color\r\n        }\"\r\n        *ngFor=\"let child of children\"\r\n      ></ng-container>\r\n    </div>\r\n  `,\r\n})\r\nexport class ListComponent {\r\n  componentType = ListItemComponent;\r\n  @ContentChildren(ListItemComponent) children?: QueryList<ListItemComponent>;\r\n\r\n  @Input() color: Color = 'primary';\r\n  @Input() icon: Icon = 'info';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ListItemComponent",
            "id": "component-ListItemComponent-ea032162d6f2dec54317bd12cbcf75434ea3080f1af091ff3d293a2ec171cf908bb2996ae1e723084ba461aacc26ece72ff23c5b1ff72c3e9d8195c9ea4e79b9",
            "file": "libs/material/src/list/list-item/list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-list-item",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"list-item {{ color }}\">\n  <span class=\"icon\">{{ icon }}</span>\n  <span>{{ label }}</span>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Color, Icon } from '../../api';\r\n\r\n@Component({\r\n  selector: 'tb-list-item',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div class=\"list-item {{ color }}\">\r\n      <span class=\"icon\">{{ icon }}</span>\r\n      <span>{{ label }}</span>\r\n    </div>\r\n  `,\r\n})\r\nexport class ListItemComponent {\r\n  @Input() label = '';\r\n  @Input() color: Color = 'primary';\r\n  @Input() icon?: Icon = 'info';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-8d1a1720701039822c84c909c05011fff02aa5958a0a4a2a9f0cf244098bea9ad968737a73b8ea651de8b48a79061cf8302364e49f373f801f52097ff9095a62",
            "file": "libs/material/src/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "containerView",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"row\" | \"column\"",
                    "decorators": []
                },
                {
                    "name": "openDirection",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Direction",
                    "decorators": []
                },
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, any>[]",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "MenuComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChildren, Input } from '@angular/core';\r\nimport { ButtonModule, CombinedButtonComponent } from '../button';\r\nimport { Direction } from '../api';\r\nimport { MicroModule } from '../micro/micro.module';\r\n\r\n@Component({\r\n  selector: 'tb-menu',\r\n  standalone: true,\r\n  imports: [MicroModule, ButtonModule],\r\n  templateUrl: './menu.component.html',\r\n})\r\nexport class MenuComponent extends CombinedButtonComponent {\r\n  /** @ignore */\r\n  readonly __componentType = MenuComponent;\r\n  @ContentChildren(MenuComponent) children?: Record<string, any>[];\r\n\r\n  @Input() openDirection: Direction = 'bottom';\r\n  @Input() containerView: 'row' | 'column' = 'column';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CombinedButtonComponent",
            "templateData": "<div class=\"dropdown {{ openDirection }} {{ color }}\">\r\n  <tb-combined-button\r\n    [color]=\"color\"\r\n    [label]=\"label\"\r\n    [variant]=\"variant\"\r\n    (clickEvent)=\"emit()\"\r\n    [size]=\"size\"\r\n    [icon]=\"icon\"\r\n  ></tb-combined-button>\r\n\r\n  <div\r\n    class=\"dropdown-items {{ containerView }}\"\r\n    *ngIf=\"children && children.length > 0\"\r\n  >\r\n    <ng-container *ngFor=\"let child of children\">\r\n      <ng-container\r\n        [ngComponentOutletInputs]=\"child\"\r\n        [ngComponentOutlet]=\"__componentType\"\r\n      ></ng-container>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "NavListComponent",
            "id": "component-NavListComponent-dcdc468d9da2c9387ed76a402acd0ca6fc308cf991131dab1e40a91b5b96cd5ec4f85881f59f5adccc44b4b44230082d4072d010aaf69304121d30a44100cdba",
            "file": "libs/material/src/nav-list/nav-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-nav-list",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"nav-list\">\n  <ng-container *ngFor=\"let child of children\">\n    <ng-container\n      *ngComponentOutlet=\"componentType; inputs: childValue(child)\"\n    ></ng-container>\n  </ng-container>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "componentType",
                    "defaultValue": "NavListItemComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Icon",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<NavListItemComponent>",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "NavListItemComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "childValue",
                    "args": [
                        {
                            "name": "child",
                            "type": "NavListItemComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Record<string, any>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "child",
                            "type": "NavListItemComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ContentChildren,\r\n  Input,\r\n  NgModule,\r\n  QueryList,\r\n} from '@angular/core';\r\n\r\nimport { NavListItemComponent } from './nav-list-item/nav-list-item.component';\r\nimport { Color, Icon } from '../api';\r\nimport { MicroModule } from '../micro/micro.module';\r\nimport { RouterModule } from '@angular/router';\r\n@Component({\r\n  selector: 'tb-nav-list',\r\n  standalone: true,\r\n  imports: [MicroModule, RouterModule],\r\n  template: `\r\n    <div class=\"nav-list\">\r\n      <ng-container *ngFor=\"let child of children\">\r\n        <ng-container\r\n          *ngComponentOutlet=\"componentType; inputs: childValue(child)\"\r\n        ></ng-container>\r\n      </ng-container>\r\n    </div>\r\n  `,\r\n})\r\nexport class NavListComponent {\r\n  @Input() __ngContext__ = '';\r\n  @Input() componentType = NavListItemComponent;\r\n\r\n  @ContentChildren(NavListItemComponent)\r\n  children?: QueryList<NavListItemComponent>;\r\n\r\n  @Input() color: Color = 'primary';\r\n  @Input() icon: Icon = 'info';\r\n\r\n  childValue(child: NavListItemComponent): Record<string, any> {\r\n    const { ref, ...rest } = child;\r\n    return rest;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [NavListComponent, NavListItemComponent],\r\n  exports: [NavListComponent, NavListItemComponent],\r\n})\r\nexport class NavListModule {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "NavListItemComponent",
            "id": "component-NavListItemComponent-6bde54e196d0d6d6a38e3925229ac1595801e6c199c48812fd1e830e8613d1210528b98a4c5f13dd5646c52e68b78ad928802fa87d44bb0378bf36c57a8cf8ee",
            "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-nav-list-item",
            "styleUrls": [],
            "styles": [],
            "template": "<button\n  class=\"nav-list-item {{ color }} {{ variant }} {{ borderPosition }} \"\n  (click)=\"emit()\"\n  [attr.routerLink]=\"route ? route : undefined\"\n>\n  <span class=\"icon\">{{ icon }}</span>\n  <span>{{ label }}</span>\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string | string[]",
                    "decorators": []
                },
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { MicroModule } from '../../micro/micro.module';\r\nimport { CombinedButtonComponent } from '../../button';\r\n\r\n@Component({\r\n  selector: 'tb-nav-list-item',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n  template: `\r\n    <button\r\n      class=\"nav-list-item {{ color }} {{ variant }} {{ borderPosition }} \"\r\n      (click)=\"emit()\"\r\n      [attr.routerLink]=\"route ? route : undefined\"\r\n    >\r\n      <span class=\"icon\">{{ icon }}</span>\r\n      <span>{{ label }}</span>\r\n    </button>\r\n  `,\r\n})\r\nexport class NavListItemComponent extends CombinedButtonComponent {\r\n  @Input() route?: string | string[];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CombinedButtonComponent"
        },
        {
            "name": "NotificationComponent",
            "id": "component-NotificationComponent-d04595ff2a324d19105ffb6bbe3df020dfd20c65d9288659086704e841c8a45657d11692e65f58660cf28df98744550b32182a088cebe9d8145b528547c3c655",
            "file": "libs/material/src/notification/notification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-notification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notification.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'tb-notification',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './notification.component.html',\r\n  styles: [],\r\n})\r\nexport class NotificationComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>notification works!</p>\r\n"
        },
        {
            "name": "NumberInputComponent",
            "id": "component-NumberInputComponent-2cbc37b823ede75fc7df6f226cc4ab4cb2c89aa3a2a87533fd5a39f901b0e307b9a3675c14150ef291046ab26d09430ca2776970426682721b58d69ddbb504d4",
            "file": "libs/material/src/form/number-input/number-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-number-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  class=\"input-container {{ color }} {{ variant }}\"\n  [tbTooltip]=\"error\"\n  tbTooltipPosition=\"bottom\"\n  [class.red]=\"error\"\n>\n  <span class=\"icon\"> {{ icon }}</span>\n  <label class=\"label\" [for]=\"id()\">\n    {{ label }} <span class=\"input-error\" *ngIf=\"error\">{{ error }}</span>\n  </label>\n  <input\n    class=\"input\"\n    (input)=\"emit()\"\n    [(ngModel)]=\"value\"\n    [attr.data-testid]=\"name\"\n    [id]=\"id()\"\n    [name]=\"name\"\n    tbHasValue\n    type=\"number\"\n  />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonInputComponent } from '../common-input/common-input.component';\r\nimport { MicroModule } from '../../micro/micro.module';\r\n\r\n@Component({\r\n  selector: 'tb-number-input',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n  template: `\r\n    <div\r\n      class=\"input-container {{ color }} {{ variant }}\"\r\n      [tbTooltip]=\"error\"\r\n      tbTooltipPosition=\"bottom\"\r\n      [class.red]=\"error\"\r\n    >\r\n      <span class=\"icon\"> {{ icon }}</span>\r\n      <label class=\"label\" [for]=\"id()\">\r\n        {{ label }} <span class=\"input-error\" *ngIf=\"error\">{{ error }}</span>\r\n      </label>\r\n      <input\r\n        class=\"input\"\r\n        (input)=\"emit()\"\r\n        [(ngModel)]=\"value\"\r\n        [attr.data-testid]=\"name\"\r\n        [id]=\"id()\"\r\n        [name]=\"name\"\r\n        tbHasValue\r\n        type=\"number\"\r\n      />\r\n    </div>\r\n  `,\r\n})\r\nexport class NumberInputComponent extends CommonInputComponent<number> {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "PaginatorComponent",
            "id": "component-PaginatorComponent-7d945eb4e71af8ccc54d1ed6a6680d84aa1fe2f898a16e29fc4a567cadcdf8522523c96b80935c0b9cd180e8ef3ea0958b734d7efbed73cbcc3758e59cf3a7a7",
            "file": "libs/material/src/table/paginator/paginator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-paginator",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex row justify-space-between align-center gap-4em p-1em\">\n  <span>Showing {{ pageLength }} of {{ itemCount }} items</span>\n  <div class=\"flex row gap-1em center border-1\">\n    <span>Page length</span>\n    <tb-button\n      size=\"small\"\n      [label]=\"pl + ''\"\n      (click)=\"setPageLength(pl)\"\n      [variant]=\"pageLength === pl ? 'stroked' : 'basic'\"\n      *ngFor=\"let pl of pageLengthOptions\"\n    ></tb-button>\n  </div>\n  <div class=\"flex row gap-1em p-1em align-center \">\n    <tb-icon-button\n      size=\"small\"\n      icon=\"first_page\"\n      (clickEvent)=\"firstPage()\"\n    ></tb-icon-button>\n\n    <tb-icon-button\n      size=\"small\"\n      variant=\"stroked\"\n      icon=\"navigate_before\"\n      (clickEvent)=\"previous()\"\n    ></tb-icon-button>\n\n    <div class=\"flex row gap-1em \">\n      <tb-button\n        size=\"small\"\n        [label]=\"b + ''\"\n        [variant]=\"currentPage === b ? 'stroked' : 'basic'\"\n        *ngFor=\"let b of getPageButtons()\"\n        (click)=\"selectPage(b)\"\n      ></tb-button>\n    </div>\n    <tb-icon-button\n      size=\"small\"\n      variant=\"stroked\"\n      icon=\"navigate_next\"\n      (clickEvent)=\"next()\"\n    ></tb-icon-button>\n\n    <tb-icon-button\n      size=\"small\"\n      icon=\"last_page\"\n      (clickEvent)=\"lastPage()\"\n    ></tb-icon-button>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "itemCount",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pageLength",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pageLengthOptions",
                    "defaultValue": "[4, 10, 20, 50, 100]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "{}",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "pageEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "emitPageEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "firstPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPageButtons",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPageLengthOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "SelectOption[]",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "lastPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "next",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previous",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectPage",
                    "args": [
                        {
                            "name": "pn",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pn",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setPageLength",
                    "args": [
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MicroModule } from '../../micro/micro.module';\r\nimport { ButtonModule } from '../../button';\r\nimport { SelectOption } from '../../api';\r\n\r\n@Component({\r\n  selector: 'tb-paginator',\r\n  standalone: true,\r\n  imports: [MicroModule, ButtonModule],\r\n  template: `\r\n    <div class=\"flex row justify-space-between align-center gap-4em p-1em\">\r\n      <span>Showing {{ pageLength }} of {{ itemCount }} items</span>\r\n      <div class=\"flex row gap-1em center border-1\">\r\n        <span>Page length</span>\r\n        <tb-button\r\n          size=\"small\"\r\n          [label]=\"pl + ''\"\r\n          (click)=\"setPageLength(pl)\"\r\n          [variant]=\"pageLength === pl ? 'stroked' : 'basic'\"\r\n          *ngFor=\"let pl of pageLengthOptions\"\r\n        ></tb-button>\r\n      </div>\r\n      <div class=\"flex row gap-1em p-1em align-center \">\r\n        <tb-icon-button\r\n          size=\"small\"\r\n          icon=\"first_page\"\r\n          (clickEvent)=\"firstPage()\"\r\n        ></tb-icon-button>\r\n\r\n        <tb-icon-button\r\n          size=\"small\"\r\n          variant=\"stroked\"\r\n          icon=\"navigate_before\"\r\n          (clickEvent)=\"previous()\"\r\n        ></tb-icon-button>\r\n\r\n        <div class=\"flex row gap-1em \">\r\n          <tb-button\r\n            size=\"small\"\r\n            [label]=\"b + ''\"\r\n            [variant]=\"currentPage === b ? 'stroked' : 'basic'\"\r\n            *ngFor=\"let b of getPageButtons()\"\r\n            (click)=\"selectPage(b)\"\r\n          ></tb-button>\r\n        </div>\r\n        <tb-icon-button\r\n          size=\"small\"\r\n          variant=\"stroked\"\r\n          icon=\"navigate_next\"\r\n          (clickEvent)=\"next()\"\r\n        ></tb-icon-button>\r\n\r\n        <tb-icon-button\r\n          size=\"small\"\r\n          icon=\"last_page\"\r\n          (clickEvent)=\"lastPage()\"\r\n        ></tb-icon-button>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [],\r\n})\r\nexport class PaginatorComponent {\r\n  currentPage = 1;\r\n\r\n  @Input() pageLength = 10;\r\n  @Input() pageLengthOptions = [4, 10, 20, 50, 100];\r\n  @Input() itemCount = 100;\r\n  @Output() pageEvent = new EventEmitter();\r\n\r\n  setPageLength(length: number) {\r\n    this.pageLength = length;\r\n    this.currentPage = 1;\r\n    this.emitPageEvent();\r\n  }\r\n\r\n  selectPage(pn: number) {\r\n    this.currentPage = pn;\r\n    this.emitPageEvent();\r\n  }\r\n  next() {\r\n    if (this.currentPage * this.pageLength < this.itemCount) {\r\n      this.currentPage++;\r\n    }\r\n    this.emitPageEvent();\r\n  }\r\n  previous() {\r\n    if (this.currentPage >= 2) {\r\n      this.currentPage--;\r\n    }\r\n    this.emitPageEvent();\r\n  }\r\n\r\n  getPageButtons() {\r\n    if (this.currentPage <= 1) {\r\n      return [1, 2, 3];\r\n    }\r\n    if (this.pageLength * (this.currentPage + 1) <= this.itemCount) {\r\n      return [this.currentPage - 1, this.currentPage, this.currentPage + 1];\r\n    }\r\n\r\n    return [this.currentPage - 2, this.currentPage - 1, this.currentPage];\r\n  }\r\n\r\n  firstPage() {\r\n    this.currentPage = 1;\r\n    this.emitPageEvent();\r\n  }\r\n\r\n  lastPage() {\r\n    this.currentPage = Math.ceil(this.itemCount / this.pageLength);\r\n    this.emitPageEvent();\r\n  }\r\n\r\n  emitPageEvent() {\r\n    this.pageEvent.emit({\r\n      pageLength: this.pageLength,\r\n      page: this.currentPage,\r\n    });\r\n  }\r\n\r\n  getPageLengthOptions(): SelectOption[] {\r\n    return this.pageLengthOptions.map((e) => {\r\n      return {\r\n        value: e.toString(),\r\n        icon: 'table_chart',\r\n      };\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SampleButtonsComponent",
            "id": "component-SampleButtonsComponent-788e7d668e3e9b025476d658197830cf3e723b3efa23c81aee1714eff73b8c370591796e56468feb78f6fa8a115e055150a188f39dde26db5318383b7209e5c1",
            "file": "libs/material/src/button/sample-buttons/sample-buttons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  class=\"flex  gap-2em p-2em wrap justify-flex-start\"\n  *ngFor=\"let variant of variants\"\n>\n  <tb-button\n    [label]=\"variant + ' ' + 'Button'\"\n    [variant]=\"variant\"\n    [color]=\"color\"\n    *ngFor=\"let color of colors\"\n  ></tb-button>\n</div>\n<div\n  class=\"flex row gap-2em p-2em wrap justify-flex-start\"\n  *ngFor=\"let variant of variants\"\n>\n  <tb-icon-button\n    icon=\"info\"\n    [variant]=\"variant\"\n    [color]=\"color\"\n    *ngFor=\"let color of colors\"\n  ></tb-icon-button>\n</div>\n<div\n  class=\"flex row gap-2em p-2em wrap justify-flex-start\"\n  *ngFor=\"let variant of variants\"\n>\n  <tb-combined-button\n    icon=\"info\"\n    [label]=\"variant + ' Combined'\"\n    [variant]=\"variant\"\n    [color]=\"color\"\n    *ngFor=\"let color of colors\"\n  ></tb-combined-button>\n</div>\n<div class=\"flex row gap-2em p-2em wrap justify-flex-start\">\n  <tb-button\n    label=\"tab button {{ position }} \"\n    color=\"primary\"\n    variant=\"tab\"\n    [borderPosition]=\"position\"\n    *ngFor=\"let position of positions\"\n  ></tb-button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttons",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "buttonTypes",
                    "defaultValue": "['button', 'combined-button', 'icon-button']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonType[]",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "colors",
                    "defaultValue": "[\r\n    'primary',\r\n    'secondary',\r\n    'accent',\r\n    'warn',\r\n    'red',\r\n    'green',\r\n    'white',\r\n    'black',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "positions",
                    "defaultValue": "['bottom', 'left', 'top', 'right']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Direction[]",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "variants",
                    "defaultValue": "['basic', 'flat', 'inbox', 'raised', 'stroked']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButttonVariant[]",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ButtonModule } from '../button.module';\r\nimport { MicroModule } from '../../micro/micro.module';\r\nimport { ButtonType, ButttonVariant, Color, Direction } from '../../api';\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports: [MicroModule, ButtonModule],\r\n  template: `\r\n    <div\r\n      class=\"flex  gap-2em p-2em wrap justify-flex-start\"\r\n      *ngFor=\"let variant of variants\"\r\n    >\r\n      <tb-button\r\n        [label]=\"variant + ' ' + 'Button'\"\r\n        [variant]=\"variant\"\r\n        [color]=\"color\"\r\n        *ngFor=\"let color of colors\"\r\n      ></tb-button>\r\n    </div>\r\n    <div\r\n      class=\"flex row gap-2em p-2em wrap justify-flex-start\"\r\n      *ngFor=\"let variant of variants\"\r\n    >\r\n      <tb-icon-button\r\n        icon=\"info\"\r\n        [variant]=\"variant\"\r\n        [color]=\"color\"\r\n        *ngFor=\"let color of colors\"\r\n      ></tb-icon-button>\r\n    </div>\r\n    <div\r\n      class=\"flex row gap-2em p-2em wrap justify-flex-start\"\r\n      *ngFor=\"let variant of variants\"\r\n    >\r\n      <tb-combined-button\r\n        icon=\"info\"\r\n        [label]=\"variant + ' Combined'\"\r\n        [variant]=\"variant\"\r\n        [color]=\"color\"\r\n        *ngFor=\"let color of colors\"\r\n      ></tb-combined-button>\r\n    </div>\r\n    <div class=\"flex row gap-2em p-2em wrap justify-flex-start\">\r\n      <tb-button\r\n        label=\"tab button {{ position }} \"\r\n        color=\"primary\"\r\n        variant=\"tab\"\r\n        [borderPosition]=\"position\"\r\n        *ngFor=\"let position of positions\"\r\n      ></tb-button>\r\n    </div>\r\n  `,\r\n})\r\nexport class SampleButtonsComponent {\r\n  buttons: any[] = [];\r\n\r\n  buttonTypes: ButtonType[] = ['button', 'combined-button', 'icon-button'];\r\n  positions: Direction[] = ['bottom', 'left', 'top', 'right'];\r\n\r\n  variants: ButttonVariant[] = ['basic', 'flat', 'inbox', 'raised', 'stroked'];\r\n\r\n  colors: Color[] = [\r\n    'primary',\r\n    'secondary',\r\n    'accent',\r\n    'warn',\r\n    'red',\r\n    'green',\r\n    'white',\r\n    'black',\r\n  ];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SearchInputComponent",
            "id": "component-SearchInputComponent-3ebbed1e0f953b8d27df3dd440a6556edbe3ce27f2890ad5b93e60ba38d0f5566ece64570b6a32299f9e93072f442b20b3870f5c3206f5cb5612557b0d929c11",
            "file": "libs/material/src/form/search-input/search-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-search-input",
            "styleUrls": [],
            "styles": [],
            "template": "<p>search-input works!</p>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'tb-search-input',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `<p>search-input works!</p>`,\r\n  styles: [],\r\n})\r\nexport class SearchInputComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectInputComponent",
            "id": "component-SelectInputComponent-582a8c43877a15243c405ad05e0ad210d90c4343e75db23bfaee22ccb0f26dcd97e3624f6b801f122ea8a65e173790b7851bd73fecf20aa520cacf44d72fa8a3",
            "file": "libs/material/src/form/select-input/select-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-select-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"dropdown input-dropdown {{ direction }}  {{ color }}\">\n  <div class=\"input-container {{ color }} {{ variant }}\">\n    <label class=\"label\" [for]=\"id()\"></label>\n    <span class=\"icon\">{{ icon }}</span>\n    <input\n      class=\"input\"\n      #input\n      [(ngModel)]=\"value\"\n      [id]=\"id()\"\n      type=\"text\"\n      autocomplete=\"off\"\n      (input)=\"inputHandler()\"\n      (keydown)=\"keydownHandler($event)\"\n    />\n  </div>\n\n  <div class=\"dropdown-items {{ distribution }}  w-full h-10em oy-auto \">\n    <div\n      class=\"list-item {{ color }}\"\n      *ngFor=\"let option of filteredOptions\"\n      (click)=\"selectOption(option)\"\n    >\n      <span\n        class=\"icon\"\n        *ngIf=\"option.icon\"\n        [class.accent]=\"option.selected\"\n        >{{ option.icon }}</span\n      >\n      <span> {{ option.label || option.value }}</span>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "filteredOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "backspaceHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        161
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "enterHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "inputHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "keydownHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectOption",
                    "args": [
                        {
                            "name": "option",
                            "type": "SelectOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "SelectOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component } from '@angular/core';\r\nimport { CommonInputComponent } from '../common-input/common-input.component';\r\nimport { MicroModule } from '../../micro/micro.module';\r\nimport { SelectOption } from '../../api';\r\n\r\n@Component({\r\n  selector: 'tb-select-input',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n  template: `\r\n    <div class=\"dropdown input-dropdown {{ direction }}  {{ color }}\">\r\n      <div class=\"input-container {{ color }} {{ variant }}\">\r\n        <label class=\"label\" [for]=\"id()\"></label>\r\n        <span class=\"icon\">{{ icon }}</span>\r\n        <input\r\n          class=\"input\"\r\n          #input\r\n          [(ngModel)]=\"value\"\r\n          [id]=\"id()\"\r\n          type=\"text\"\r\n          autocomplete=\"off\"\r\n          (input)=\"inputHandler()\"\r\n          (keydown)=\"keydownHandler($event)\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"dropdown-items {{ distribution }}  w-full h-10em oy-auto \">\r\n        <div\r\n          class=\"list-item {{ color }}\"\r\n          *ngFor=\"let option of filteredOptions\"\r\n          (click)=\"selectOption(option)\"\r\n        >\r\n          <span\r\n            class=\"icon\"\r\n            *ngIf=\"option.icon\"\r\n            [class.accent]=\"option.selected\"\r\n            >{{ option.icon }}</span\r\n          >\r\n          <span> {{ option.label || option.value }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport class SelectInputComponent\r\n  extends CommonInputComponent\r\n  implements AfterViewInit\r\n{\r\n  multiple = false;\r\n  filteredOptions: SelectOption[] = [];\r\n\r\n  ngAfterViewInit(): void {\r\n    this.filteredOptions = [...(this.options || [])];\r\n  }\r\n\r\n  inputHandler() {\r\n    const lastText = this.value?.split(',').pop()?.toLowerCase() || '';\r\n\r\n    if (lastText?.length > 0) {\r\n      this.filteredOptions = [\r\n        ...(this.options?.filter((e) => {\r\n          return e.value.toLowerCase().includes(lastText.toLowerCase());\r\n        }) || []),\r\n      ];\r\n    } else {\r\n      this.filteredOptions = this.options || [];\r\n    }\r\n  }\r\n\r\n  backspaceHandler(event: KeyboardEvent) {\r\n    if (this.multiple == false) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    const values = this.value?.split(',');\r\n    values?.splice(-1, 1);\r\n    this.value = values?.join(',');\r\n\r\n    this.options?.forEach((e) => {\r\n      if (this.value?.includes(e.value)) {\r\n        e.selected = true;\r\n      } else {\r\n        e.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  enterHandler(event: KeyboardEvent) {\r\n    const option = this.filteredOptions[0];\r\n    this.selectOption(option);\r\n  }\r\n\r\n  keydownHandler(event: KeyboardEvent) {\r\n    if (event.key === 'Enter') {\r\n      this.enterHandler(event);\r\n    } else if (event.key === 'Backspace') {\r\n      this.backspaceHandler(event);\r\n    }\r\n  }\r\n\r\n  selectOption(option: SelectOption) {\r\n    if (this.multiple === false) {\r\n      this.options?.forEach((e) => (e.selected = false));\r\n    }\r\n    const found = this.options?.find((e) => e.value === option.value);\r\n    if (found) {\r\n      found.selected = !found.selected;\r\n    }\r\n    this.value =\r\n      this.options\r\n        ?.filter((e) => e.selected)\r\n        .map((e) => e.value)\r\n        .join(',') + ',';\r\n\r\n    this.filteredOptions = [...(this.options || [])];\r\n    this.emit();\r\n  }\r\n\r\n  override emit(): void {\r\n    this.inputEvent.emit(this.options?.filter((e) => e.selected));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-f546895a53af34a5070153939af0782b463015d2d3a32246e674c64dc3e1bda6a41a6db0df69b512bc4e84a2b1c82d363522cfc90fb8f62c71061d88c22dfe2f",
            "file": "libs/material/src/stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-stepper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'tb-stepper',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './stepper.component.html',\r\n  styles: [],\r\n})\r\nexport class StepperComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>stepper works!</p>\r\n"
        },
        {
            "name": "StickyNotesComponent",
            "id": "component-StickyNotesComponent-775dc57447563ecdb61982b81ee3e661255ab58b3f2874b268c08516b18573f81d1714471de6439849e256777d7b94a054b97a4e647d6a10f4d33a1882eab1a3",
            "file": "libs/material/src/sticky-notes/sticky-notes.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-sticky-notes",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sticky-notes.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'tb-sticky-notes',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './sticky-notes.component.html',\r\n  styles: [],\r\n})\r\nexport class StickyNotesComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>sticky-notes works!</p>\r\n"
        },
        {
            "name": "TabButtonComponent",
            "id": "component-TabButtonComponent-2645e0f10b35052e7e9c9ea4df325161a19a271ae50342610c99db959b9f1fb6b7b5357ddb83a8eda86b742424773ddc004601db05b0d7184ac5a659306a4d18",
            "file": "libs/material/src/tab/tab-button/tab-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-tab-button",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container\n  *ngComponentOutlet=\"componentType; inputs: inputs()\"\n></ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "borderPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Direction | undefined",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'tab'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ButttonVariant | undefined",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "componentType",
                    "defaultValue": "CombinedButtonComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "inputs",
                    "args": [],
                    "optional": false,
                    "returnType": "Record<string, any>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { ButtonModule, CombinedButtonComponent } from '../../button';\r\nimport { MicroModule } from '../../micro/micro.module';\r\nimport { ButttonVariant, Direction } from '../../api';\r\n\r\n@Component({\r\n  selector: 'tb-tab-button',\r\n  standalone: true,\r\n  imports: [MicroModule, ButtonModule],\r\n  template: `\r\n    <ng-container\r\n      *ngComponentOutlet=\"componentType; inputs: inputs()\"\r\n    ></ng-container>\r\n  `,\r\n})\r\nexport class TabButtonComponent extends CombinedButtonComponent {\r\n  @Input() override variant?: ButttonVariant | undefined = 'tab';\r\n  @Input() override borderPosition?: Direction | undefined = 'bottom';\r\n\r\n  componentType = CombinedButtonComponent;\r\n\r\n  inputs(): Record<string, any> {\r\n    return this;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CombinedButtonComponent"
        },
        {
            "name": "TabContainerComponent",
            "id": "component-TabContainerComponent-23d1ad213e109574f3307922eaf0ca939e7c82ecce6dd499375358bceb77da32cdab69abfcbf589a57f7efd839c62dd765d8a6d8620dbc2b4d87fd624b89a84d",
            "file": "libs/material/src/tab/tab-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-tab-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tab-container.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'tab'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "TabContainerType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeChild$",
                    "defaultValue": "new BehaviorSubject<TabDirective | undefined>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<TabDirective>",
                    "optional": true,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "TabDirective"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "container",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLDivElement>",
                    "optional": true,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "delayedChild$",
                    "defaultValue": "this.activeChild$.pipe(debounceTime(200))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "tabComponentType",
                    "defaultValue": "CombinedButtonComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "activateChild",
                    "args": [
                        {
                            "name": "child",
                            "type": "TabDirective",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "child",
                            "type": "TabDirective",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "scroll",
                    "args": [
                        {
                            "name": "event",
                            "type": "WheelEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "WheelEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "NavListModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  Input,\r\n  QueryList,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { BehaviorSubject, debounceTime } from 'rxjs';\r\nimport { TabDirective } from './tab.directive';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { NavListModule } from './../nav-list/nav-list.component';\r\nimport { MicroModule } from './../micro/micro.module';\r\nimport { ButtonModule, CombinedButtonComponent } from './../button';\r\n\r\nexport type TabContainerType = 'sidenav' | 'tab';\r\n@Component({\r\n  selector: 'tb-tab-container',\r\n  standalone: true,\r\n  imports: [MicroModule, NavListModule, ButtonModule],\r\n  templateUrl: './tab-container.component.html',\r\n  animations: [fadeInOnEnterAnimation({ anchor: 'enter', duration: 1000 })],\r\n})\r\nexport class TabContainerComponent implements AfterViewInit {\r\n  tabComponentType = CombinedButtonComponent;\r\n  @ViewChild('container') container?: ElementRef<HTMLDivElement>;\r\n  @ContentChildren(TabDirective) children?: QueryList<TabDirective>;\r\n\r\n  @Input() type: TabContainerType = 'tab';\r\n\r\n  activeChild$ = new BehaviorSubject<TabDirective | undefined>(undefined);\r\n  delayedChild$ = this.activeChild$.pipe(debounceTime(200));\r\n\r\n  activateChild(child: TabDirective) {\r\n    this.activeChild$.next(undefined);\r\n    setTimeout(() => {\r\n      this.activeChild$.next(child);\r\n    }, 200);\r\n  }\r\n\r\n  scroll(event: WheelEvent) {\r\n    event.preventDefault();\r\n    this.container?.nativeElement.scrollBy({ left: event.deltaY });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.children?.first) {\r\n      this.activateChild(this.children.first);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<ng-container *ngIf=\"type === 'tab'\">\r\n  <div #container class=\"flex justify-stretch relative p-1em\" tbScrollX>\r\n    <tb-combined-button\r\n      (clickEvent)=\"activateChild(child)\"\r\n      [color]=\"child.color\"\r\n      [icon]=\"child.icon\"\r\n      [label]=\"child.label\"\r\n      *ngFor=\"let child of children\"\r\n      borderPosition=\"bottom\"\r\n      class=\"w-100per\"\r\n      variant=\"tab\"\r\n      ></tb-combined-button>\r\n  </div>\r\n\r\n  <div *ngIf=\"delayedChild$ | async as delayedChild\" [@enter]>\r\n    <ng-container *ngTemplateOutlet=\"delayedChild.templateRef\">\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n  </div>\r\n</ng-container>\r\n\r\n<!-- Sidenav -->\r\n<ng-container *ngIf=\"type === 'sidenav'\">\r\n  <div class=\"flex row gap-1em\">\r\n    <tb-nav-list>\r\n      <tb-nav-list-item\r\n        *ngFor=\"let child of children\"\r\n        [icon]=\"child.icon\"\r\n        [label]=\"child.label\"\r\n        [color]=\"child.color\"\r\n        (clickEvent)=\"activateChild(child)\"\r\n      ></tb-nav-list-item>\r\n    </tb-nav-list>\r\n\r\n    <div *ngIf=\"delayedChild$ | async as delayedChild\" [@enter]>\r\n      <ng-container *ngTemplateOutlet=\"delayedChild.templateRef\">\r\n        <ng-content></ng-content>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-29484dd4dc300d1e8fba6d817322559210607353a623be2421d06d3210baeb3c2b9d35d21be257cbe7adcdb62f502d702d8a431e72bdf9b3c586474d0ea2c436",
            "file": "libs/material/src/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-table",
            "styleUrls": [],
            "styles": [],
            "template": "<tb-text-input\n  label=\"Search\"\n  (inputEvent)=\"emitSearchEvent($event)\"\n  icon=\"search\"\n></tb-text-input>\n<table class=\"table\" border=\"0\">\n  <thead class=\"table-header\">\n    <tr class=\"table-header-row\">\n      <th *ngFor=\"let col of columns\" (click)=\"sort(col)\">{{ col }}</th>\n    </tr>\n  </thead>\n\n  <tbody class=\"table-body\">\n    <tr\n      *ngFor=\"let item of data\"\n      class=\"table-body-row\"\n      (click)=\"emitRowClick(item)\"\n    >\n      <td *ngFor=\"let col of columns\">{{ item[col] }}</td>\n    </tr>\n  </tbody>\n</table>\n<tb-paginator\n  [itemCount]=\"count\"\n  (pageEvent)=\"emitPageEvent($event)\"\n></tb-paginator>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "columns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "count",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "data",
                    "defaultValue": "[\r\n    { id: 1, name: 'Apple' },\r\n    { id: 2, name: 'Orange' },\r\n    { id: 3, name: 'Orange' },\r\n    { id: 4, name: 'Orange' },\r\n    { id: 5, name: 'Orange' },\r\n    { id: 6, name: 'Orange' },\r\n    { id: 7, name: 'Orange' },\r\n    { id: 8, name: 'Orange' },\r\n    { id: 9, name: 'Orange' },\r\n    { id: 10, name: 'Orange' },\r\n    { id: 11, name: 'Orange' },\r\n    { id: 12, name: 'Orange' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "sortBy",
                    "defaultValue": "'id'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "sortDir",
                    "defaultValue": "'asc'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "\"asc\" | \"desc\"",
                    "decorators": []
                },
                {
                    "name": "visibleColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "pageEvent",
                    "defaultValue": "new EventEmitter<PageEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowClickEvent",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "EventEmitter"
                },
                {
                    "name": "searchEvent",
                    "defaultValue": "new EventEmitter<SearchEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "EventEmitter"
                },
                {
                    "name": "sortEvent",
                    "defaultValue": "new EventEmitter<SortEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "filteredData",
                    "defaultValue": "this.data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methodsClass": [
                {
                    "name": "emitPageEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitRowClick",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitSearchEvent",
                    "args": [
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitSortEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "SortEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "SortEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sort",
                    "args": [
                        {
                            "name": "col",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "col",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "PaginatorComponent",
                    "type": "component"
                },
                {
                    "name": "TextInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MicroModule } from '../micro/micro.module';\r\nimport { PaginatorComponent } from './paginator/paginator.component';\r\nimport { PageEvent, SearchEvent, SortEvent } from '../api';\r\nimport { TextInputComponent } from '../form/text-input/text-input.component';\r\n\r\n@Component({\r\n  selector: 'tb-table',\r\n  standalone: true,\r\n  imports: [MicroModule, PaginatorComponent, TextInputComponent],\r\n  template: `\r\n    <tb-text-input\r\n      label=\"Search\"\r\n      (inputEvent)=\"emitSearchEvent($event)\"\r\n      icon=\"search\"\r\n    ></tb-text-input>\r\n    <table class=\"table\" border=\"0\">\r\n      <thead class=\"table-header\">\r\n        <tr class=\"table-header-row\">\r\n          <th *ngFor=\"let col of columns\" (click)=\"sort(col)\">{{ col }}</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody class=\"table-body\">\r\n        <tr\r\n          *ngFor=\"let item of data\"\r\n          class=\"table-body-row\"\r\n          (click)=\"emitRowClick(item)\"\r\n        >\r\n          <td *ngFor=\"let col of columns\">{{ item[col] }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <tb-paginator\r\n      [itemCount]=\"count\"\r\n      (pageEvent)=\"emitPageEvent($event)\"\r\n    ></tb-paginator>\r\n  `,\r\n})\r\nexport class TableComponent {\r\n  @Input() sortBy = 'id';\r\n  @Input() sortDir: 'asc' | 'desc' = 'asc';\r\n\r\n  @Input() count = 100;\r\n\r\n  @Input() columns: string[] = ['id', 'name'];\r\n  @Input() visibleColumns: string[] = ['id', 'name'];\r\n  @Input() data: any[] = [\r\n    { id: 1, name: 'Apple' },\r\n    { id: 2, name: 'Orange' },\r\n    { id: 3, name: 'Orange' },\r\n    { id: 4, name: 'Orange' },\r\n    { id: 5, name: 'Orange' },\r\n    { id: 6, name: 'Orange' },\r\n    { id: 7, name: 'Orange' },\r\n    { id: 8, name: 'Orange' },\r\n    { id: 9, name: 'Orange' },\r\n    { id: 10, name: 'Orange' },\r\n    { id: 11, name: 'Orange' },\r\n    { id: 12, name: 'Orange' },\r\n  ];\r\n\r\n  @Output() sortEvent = new EventEmitter<SortEvent>();\r\n  @Output() pageEvent = new EventEmitter<PageEvent>();\r\n  @Output() searchEvent = new EventEmitter<SearchEvent>();\r\n  @Output() rowClickEvent = new EventEmitter<any>();\r\n\r\n  filteredData = this.data;\r\n\r\n  sort(col: string) {\r\n    this.sortBy = col;\r\n    this.sortDir = 'asc';\r\n    this.emitSortEvent({ orderDir: this.sortDir, orderBy: this.sortBy });\r\n  }\r\n\r\n  emitSortEvent(event: SortEvent) {\r\n    this.sortEvent.emit(event);\r\n  }\r\n\r\n  emitPageEvent(event: PageEvent) {\r\n    this.pageEvent.emit(event);\r\n  }\r\n\r\n  emitRowClick(rowData: any) {\r\n    this.rowClickEvent.emit(rowData);\r\n  }\r\n\r\n  emitSearchEvent(search: string) {\r\n    this.searchEvent.emit({ search });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-543b733bfbcd38f6a13d20e1c01609e23d604cd5db19236f82cfb28ee0de275553ebe40889326932f1b9472d31ecf2db8368a8177af58d19bdea2d22d2506eac",
            "file": "libs/material/src/form/textarea/textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-textarea",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  class=\"input-container {{ color }} {{ variant }}\"\n  [tbTooltip]=\"error\"\n  tbTooltipPosition=\"bottom\"\n  [class.red]=\"error\"\n>\n  <span class=\"icon\"> {{ icon }}</span>\n  <label class=\"label\" [for]=\"name\">\n    {{ label }}\n    <span class=\"input-error\" *ngIf=\"error\">{{ error }}</span>\n  </label>\n  <textarea\n    class=\"input\"\n    [(ngModel)]=\"value\"\n    [id]=\"id()\"\n    [attr.data-testid]=\"name\"\n    [name]=\"name\"\n    [autocomplete]=\"autocomplete\"\n    (input)=\"emit()\"\n    tbHasValue\n  ></textarea>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { MicroModule } from '../../micro/micro.module';\r\nimport { CommonInputComponent } from '../common-input/common-input.component';\r\n\r\n@Component({\r\n  selector: 'tb-textarea',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n  template: `\r\n    <div\r\n      class=\"input-container {{ color }} {{ variant }}\"\r\n      [tbTooltip]=\"error\"\r\n      tbTooltipPosition=\"bottom\"\r\n      [class.red]=\"error\"\r\n    >\r\n      <span class=\"icon\"> {{ icon }}</span>\r\n      <label class=\"label\" [for]=\"name\">\r\n        {{ label }}\r\n        <span class=\"input-error\" *ngIf=\"error\">{{ error }}</span>\r\n      </label>\r\n      <textarea\r\n        class=\"input\"\r\n        [(ngModel)]=\"value\"\r\n        [id]=\"id()\"\r\n        [attr.data-testid]=\"name\"\r\n        [name]=\"name\"\r\n        [autocomplete]=\"autocomplete\"\r\n        (input)=\"emit()\"\r\n        tbHasValue\r\n      ></textarea>\r\n    </div>\r\n  `,\r\n})\r\nexport class TextareaComponent extends CommonInputComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "TextInputComponent",
            "id": "component-TextInputComponent-733668a1cde83ac048d180392f044ad39e4128cee08cfe7f5e6a8b0009871ea544c9f22216d74053a0b8192fcc294619620f81fb2548286d19d19fccce8e7df9",
            "file": "libs/material/src/form/text-input/text-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-text-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  class=\"input-container {{ color }} {{ variant }}\"\n  [tbTooltip]=\"error\"\n  tbTooltipPosition=\"bottom\"\n  [class.red]=\"error\"\n>\n  <span class=\"icon\"> {{ icon }}</span>\n  <label class=\"label\" [for]=\"name\">\n    {{ label }}\n  </label>\n  <input\n    class=\"input\"\n    [(ngModel)]=\"value\"\n    [id]=\"id()\"\n    [attr.data-testid]=\"name\"\n    [type]=\"type\"\n    [name]=\"name\"\n    [autocomplete]=\"autocomplete\"\n    (input)=\"emit()\"\n    tbHasValue\n  />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonInputComponent } from '../common-input/common-input.component';\r\nimport { MicroModule } from '../../micro/micro.module';\r\n\r\n@Component({\r\n  selector: 'tb-text-input',\r\n  standalone: true,\r\n  imports: [MicroModule],\r\n  template: `\r\n    <div\r\n      class=\"input-container {{ color }} {{ variant }}\"\r\n      [tbTooltip]=\"error\"\r\n      tbTooltipPosition=\"bottom\"\r\n      [class.red]=\"error\"\r\n    >\r\n      <span class=\"icon\"> {{ icon }}</span>\r\n      <label class=\"label\" [for]=\"name\">\r\n        {{ label }}\r\n      </label>\r\n      <input\r\n        class=\"input\"\r\n        [(ngModel)]=\"value\"\r\n        [id]=\"id()\"\r\n        [attr.data-testid]=\"name\"\r\n        [type]=\"type\"\r\n        [name]=\"name\"\r\n        [autocomplete]=\"autocomplete\"\r\n        (input)=\"emit()\"\r\n        tbHasValue\r\n      />\r\n    </div>\r\n  `,\r\n})\r\nexport class TextInputComponent extends CommonInputComponent<string> {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "ToolbarComponent",
            "id": "component-ToolbarComponent-b510e5d1c530c5fd79bbe9932c348dd76973ad31bbe8a2b5da688c7c6d5bd136ebfc68fe2269b84a48fecde19cc1a6b14317e27b2968ebb5b7bbe2fd4fc4f4b6",
            "file": "libs/material/src/toolbar/toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-toolbar",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"toolbar {{ color }} w-100per\">\n  <ng-content></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Color",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Color } from '../api';\r\n\r\n@Component({\r\n  selector: 'tb-toolbar',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div class=\"toolbar {{ color }} w-100per\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  \r\n})\r\nexport class ToolbarComponent {\r\n  @Input() color: Color = 'primary';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "ButtonModule",
            "id": "module-ButtonModule-9c0f95182e8776b599874db4765bcc545aed9916882d7c20bee274023f88e3939fe18f88922a02262b4425cdb5906fda62ce369d4a5d3b4890704b1e16895ee4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ButtonComponent } from './button';\r\nimport { CombinedButtonComponent } from './combined-button';\r\nimport { IconButtonComponent } from './icon-button';\r\n\r\n@NgModule({\r\n  imports: [ButtonComponent, CombinedButtonComponent, IconButtonComponent],\r\n  exports: [ButtonComponent, CombinedButtonComponent, IconButtonComponent],\r\n})\r\nexport class ButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CombinedButtonComponent"
                        },
                        {
                            "name": "IconButtonComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CombinedButtonComponent"
                        },
                        {
                            "name": "IconButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FormModule",
            "id": "module-FormModule-489fbacb04f2a8ad3d0e63c0a14959349814a90208cc5c1c861c5bf90f263002c962ddf0bdb74e4f3034fc4e28d2ea63caa4d447f4d18f6dd107d9b0f4915bef",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/form/form.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { FormComponent } from './form.component';\r\nimport { InputComponent } from './input/input.component';\r\nimport { FormActionsDirective } from './form-actions/form-actions.directive';\r\nimport { TextInputComponent } from './text-input/text-input.component';\r\nimport { DatePickerComponent } from './date-picker/date-picker.component';\r\nimport { BooleanInputComponent } from './boolean-input/boolean-input.component';\r\nimport { TextareaComponent } from './textarea/textarea.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormComponent,\r\n    InputComponent,\r\n    TextInputComponent,\r\n    DatePickerComponent,\r\n    TextareaComponent,\r\n    BooleanInputComponent,\r\n    FormActionsDirective,\r\n  ],\r\n  exports: [\r\n    FormComponent,\r\n    InputComponent,\r\n    TextInputComponent,\r\n    DatePickerComponent,\r\n    BooleanInputComponent,\r\n    TextareaComponent,\r\n    FormActionsDirective,\r\n  ],\r\n})\r\nexport class FormModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BooleanInputComponent"
                        },
                        {
                            "name": "DatePickerComponent"
                        },
                        {
                            "name": "FormActionsDirective"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "TextInputComponent"
                        },
                        {
                            "name": "TextareaComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BooleanInputComponent"
                        },
                        {
                            "name": "DatePickerComponent"
                        },
                        {
                            "name": "FormActionsDirective"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "TextInputComponent"
                        },
                        {
                            "name": "TextareaComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MicroModule",
            "id": "module-MicroModule-d9506c36a63e1e92ba967cf4be2e77a9d87af0d4efc7823e8f3691ac82052ec2456922d5ec902f2e674e733de4317dd6ae06c15bceb11cd74acb8cf4954a6e79",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/micro/micro.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BadgeDirective } from './badge/badge.directive';\r\nimport { FocusDirective } from './focus/focus.directive';\r\nimport { ScrollDirectionDirective } from './scroll-direction/scroll-direction.directive';\r\nimport { SetAttributeDirective } from './set-attribute/set-attribute.directive';\r\nimport { TooltipDirective } from './tooltip/tooltip.directive';\r\nimport { SetComponentAttributeDirective } from './set-component-attribute/set-component-attribute.directive';\r\nimport { ClassListDirective } from './class-list/class-list.directive';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IconComponent } from './icon/icon.component';\r\nimport { HasValueDirective } from './has-value/has-value.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BadgeDirective,\r\n    FocusDirective,\r\n    ScrollDirectionDirective,\r\n    SetAttributeDirective,\r\n    TooltipDirective,\r\n    SetComponentAttributeDirective,\r\n    ClassListDirective,\r\n    IconComponent,\r\n    HasValueDirective,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    BadgeDirective,\r\n    FocusDirective,\r\n    ScrollDirectionDirective,\r\n    SetAttributeDirective,\r\n    SetComponentAttributeDirective,\r\n    TooltipDirective,\r\n    ClassListDirective,\r\n    IconComponent,\r\n    HasValueDirective,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n})\r\nexport class MicroModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BadgeDirective"
                        },
                        {
                            "name": "ClassListDirective"
                        },
                        {
                            "name": "FocusDirective"
                        },
                        {
                            "name": "HasValueDirective"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "ScrollDirectionDirective"
                        },
                        {
                            "name": "SetAttributeDirective"
                        },
                        {
                            "name": "TooltipDirective"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BadgeDirective"
                        },
                        {
                            "name": "ClassListDirective"
                        },
                        {
                            "name": "FocusDirective"
                        },
                        {
                            "name": "HasValueDirective"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "ScrollDirectionDirective"
                        },
                        {
                            "name": "SetAttributeDirective"
                        },
                        {
                            "name": "SetComponentAttributeDirective"
                        },
                        {
                            "name": "TooltipDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NavListModule",
            "id": "module-NavListModule-dcdc468d9da2c9387ed76a402acd0ca6fc308cf991131dab1e40a91b5b96cd5ec4f85881f59f5adccc44b4b44230082d4072d010aaf69304121d30a44100cdba",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/nav-list/nav-list.component.ts",
            "methods": [],
            "sourceCode": "import {\r\n  Component,\r\n  ContentChildren,\r\n  Input,\r\n  NgModule,\r\n  QueryList,\r\n} from '@angular/core';\r\n\r\nimport { NavListItemComponent } from './nav-list-item/nav-list-item.component';\r\nimport { Color, Icon } from '../api';\r\nimport { MicroModule } from '../micro/micro.module';\r\nimport { RouterModule } from '@angular/router';\r\n@Component({\r\n  selector: 'tb-nav-list',\r\n  standalone: true,\r\n  imports: [MicroModule, RouterModule],\r\n  template: `\r\n    <div class=\"nav-list\">\r\n      <ng-container *ngFor=\"let child of children\">\r\n        <ng-container\r\n          *ngComponentOutlet=\"componentType; inputs: childValue(child)\"\r\n        ></ng-container>\r\n      </ng-container>\r\n    </div>\r\n  `,\r\n})\r\nexport class NavListComponent {\r\n  @Input() __ngContext__ = '';\r\n  @Input() componentType = NavListItemComponent;\r\n\r\n  @ContentChildren(NavListItemComponent)\r\n  children?: QueryList<NavListItemComponent>;\r\n\r\n  @Input() color: Color = 'primary';\r\n  @Input() icon: Icon = 'info';\r\n\r\n  childValue(child: NavListItemComponent): Record<string, any> {\r\n    const { ref, ...rest } = child;\r\n    return rest;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [NavListComponent, NavListItemComponent],\r\n  exports: [NavListComponent, NavListItemComponent],\r\n})\r\nexport class NavListModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "NavListComponent"
                        },
                        {
                            "name": "NavListItemComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NavListComponent"
                        },
                        {
                            "name": "NavListItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabModule",
            "id": "module-TabModule-9dee7ebf27e96733407d4e5d905bc5522a1764a6ee10787f4b77391aed2ce716f73113fd5c3654f897a10ca40192aa893fcd66d15b1b695425571b7607accc48",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/tab/tab.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { TabDirective } from './tab.directive';\r\nimport { TabContainerComponent } from './tab-container.component';\r\n\r\n@NgModule({\r\n  declarations: [TabDirective],\r\n  imports: [TabContainerComponent],\r\n  exports: [TabContainerComponent, TabDirective],\r\n})\r\nexport class TabModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TabContainerComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabContainerComponent"
                        },
                        {
                            "name": "TabDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    color: 'red',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/alert works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/app-auth works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/colors works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/fonts works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    children: [\r\n      {\r\n        inputs() {\r\n          return {\r\n            label: 'Username',\r\n            type: 'text',\r\n            name: 'username',\r\n            icon: 'person',\r\n          };\r\n        },\r\n      },\r\n    ],\r\n  } as any,\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/layout/layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/layout works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/list works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: { label: 'Triger 1' },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/Triger 1/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    color: 'primary',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/nav-list works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/notification works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/stepper works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/sticky-notes works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/tab-container works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/table works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/toolbar works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Raised Button',\r\n    variant: 'raised',\r\n    color: 'secondary',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/Raised Button/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Combined',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n    color: 'primary',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/Combined/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: 'info',\r\n    color: 'secondary',\r\n    variant: 'stroked',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/icon-button works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/sample-buttons works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/boolean-input works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: '',\r\n    label: '',\r\n    error: '',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/common-input works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/date-input works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/date-input works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: '',\r\n    value: '',\r\n    type: 'text',\r\n    autocomplete: 'on',\r\n    color: 'primary',\r\n    label: 'Input Label',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/input works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    autocomplete: 'off',\r\n    color: 'primary',\r\n    label: 'Age',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const inputElement = canvas.getByLabelText(/Age/gi);\r\n    expect(inputElement).toBeTruthy();\r\n    userEvent.type(inputElement, '12345');\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/search-input works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    name: 'category',\r\n    autocomplete: 'off',\r\n    color: 'primary',\r\n    label: 'category',\r\n    variant: 'basic',\r\n    icon: 'category',\r\n    options: [\r\n      { icon: 'info', value: 'A 1' },\r\n      { icon: 'info', value: 'B 1' },\r\n      { icon: 'info', value: 'C 1' },\r\n      { icon: 'info', value: 'D 1' },\r\n      { icon: 'info', value: 'E 1' },\r\n      { icon: 'info', value: 'F 1' },\r\n      { icon: 'info', value: 'G 1' },\r\n      { icon: 'info', value: 'H 1' },\r\n      {\r\n        icon: 'info',\r\n        value: 'Very long option. Very long option . Very long option',\r\n      },\r\n      { icon: 'info', value: 'I 1' },\r\n      { icon: 'info', value: 'J 1' },\r\n      { icon: 'info', value: 'K 1 ' },\r\n      { icon: 'info', value: 'K 1' },\r\n    ],\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByLabelText(/Category/gi)).toBeTruthy();\r\n    const elem = canvas.getByLabelText(/Category/gi);\r\n    userEvent.click(elem);\r\n\r\n    const option1 = canvas.getByTestId('B 1');\r\n\r\n    userEvent.click(option1, { delay: 200 });\r\n\r\n    // userEvent.selectOptions(elem, 'Option 1');\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    name: 'name',\r\n    autocomplete: 'off',\r\n    color: 'primary',\r\n    label: 'Name',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const inputElement = canvas.getByLabelText(/Name/gi);\r\n\r\n    expect(inputElement).toBeTruthy();\r\n\r\n    userEvent.type(inputElement, 'How you doing');\r\n    expect(canvas.getByText(/info/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/textarea works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: '',\r\n    color: 'primary',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/list-item works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    fill: '',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/icon works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: '',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/nav-list-item works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'tab',\r\n    borderPosition: 'bottom',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/tab-button works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    pageLengthOptions: [10, 20, 30],\r\n    itemCount: 100,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/Showing 10 of 100 items/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "ListOfDays",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n]"
            },
            {
                "name": "ListOfMonths",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n]"
            },
            {
                "name": "LoginForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    children: [\r\n      {\r\n        inputs() {\r\n          return {\r\n            label: 'Username',\r\n            type: 'text',\r\n            name: 'username',\r\n            icon: 'person',\r\n          };\r\n        },\r\n      },\r\n      {\r\n        inputs() {\r\n          return {\r\n            label: 'Password',\r\n            type: 'password',\r\n            name: 'password',\r\n            icon: 'password',\r\n          };\r\n        },\r\n      },\r\n    ],\r\n  } as any,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AlertComponent>",
                "defaultValue": "{\r\n  component: AlertComponent,\r\n  title: 'AlertComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppAuthComponent>",
                "defaultValue": "{\r\n  component: AppAuthComponent,\r\n  title: 'App Auth',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [BrowserAnimationsModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorsComponent>",
                "defaultValue": "{\r\n  component: ColorsComponent,\r\n  title: 'ColorsComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FontsComponent>",
                "defaultValue": "{\r\n  component: FontsComponent,\r\n  title: 'FontsComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormComponent>",
                "defaultValue": "{\r\n  component: FormComponent,\r\n  title: 'FormComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/layout/layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LayoutComponent>",
                "defaultValue": "{\r\n  component: LayoutComponent,\r\n  title: 'A Layout',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [BrowserAnimationsModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ListComponent>",
                "defaultValue": "{\r\n  component: ListComponent,\r\n  title: 'ListComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MenuComponent>",
                "defaultValue": "{\r\n  component: MenuComponent,\r\n  title: 'MenuComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavListComponent>",
                "defaultValue": "{\r\n  component: NavListComponent,\r\n  title: 'NavListComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NotificationComponent>",
                "defaultValue": "{\r\n  component: NotificationComponent,\r\n  title: 'NotificationComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StepperComponent>",
                "defaultValue": "{\r\n  component: StepperComponent,\r\n  title: 'StepperComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StickyNotesComponent>",
                "defaultValue": "{\r\n  component: StickyNotesComponent,\r\n  title: 'StickyNotesComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabContainerComponent>",
                "defaultValue": "{\r\n  component: TabContainerComponent,\r\n  title: 'TabContainerComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\r\n  component: TableComponent,\r\n  title: 'TableComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToolbarComponent>",
                "defaultValue": "{\r\n  component: ToolbarComponent,\r\n  title: 'ToolbarComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\r\n  component: ButtonComponent,\r\n  title: 'Button Regular',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CombinedButtonComponent>",
                "defaultValue": "{\r\n  component: CombinedButtonComponent,\r\n  title: 'Button Combined',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<IconButtonComponent>",
                "defaultValue": "{\r\n  component: IconButtonComponent,\r\n  title: 'Button Icon',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SampleButtonsComponent>",
                "defaultValue": "{\r\n  component: SampleButtonsComponent,\r\n  title: 'Button',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BooleanInputComponent>",
                "defaultValue": "{\r\n  component: BooleanInputComponent,\r\n  title: 'Input Boolean',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CommonInputComponent>",
                "defaultValue": "{\r\n  component: CommonInputComponent,\r\n  title: 'CommonInputComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateInputComponent>",
                "defaultValue": "{\r\n  component: DateInputComponent,\r\n  title: 'Input Date',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DatePickerComponent>",
                "defaultValue": "{\r\n  component: DatePickerComponent,\r\n  title: 'Input DatePicker',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\r\n  component: InputComponent,\r\n  title: 'Input',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NumberInputComponent>",
                "defaultValue": "{\r\n  component: NumberInputComponent,\r\n  title: 'Input Number',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SearchInputComponent>",
                "defaultValue": "{\r\n  component: SearchInputComponent,\r\n  title: 'SearchInputComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectInputComponent>",
                "defaultValue": "{\r\n  component: SelectInputComponent,\r\n  title: 'Input Select',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextInputComponent>",
                "defaultValue": "{\r\n  component: TextInputComponent,\r\n  title: 'Input Text',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextareaComponent>",
                "defaultValue": "{\r\n  component: TextareaComponent,\r\n  title: 'TextareaComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ListItemComponent>",
                "defaultValue": "{\r\n  component: ListItemComponent,\r\n  title: 'ListItemComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<IconComponent>",
                "defaultValue": "{\r\n  component: IconComponent,\r\n  title: 'IconComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavListItemComponent>",
                "defaultValue": "{\r\n  component: NavListItemComponent,\r\n  title: 'NavListItemComponent',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [RouterModule.forChild([])],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabButtonComponent>",
                "defaultValue": "{\r\n  component: TabButtonComponent,\r\n  title: 'TabButtonComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PaginatorComponent>",
                "defaultValue": "{\r\n  component: PaginatorComponent,\r\n  title: 'PaginatorComponent',\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    color: 'red',\r\n    icon: 'info',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    children: [\r\n      {\r\n        inputs() {\r\n          return {\r\n            label: 'Username',\r\n            type: 'text',\r\n            name: 'username',\r\n            icon: 'person',\r\n          };\r\n        },\r\n      },\r\n    ],\r\n  } as any,\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/layout/layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    color: 'warn',\r\n    icon: 'home',\r\n    children: [\r\n      { label: 'List 1', icon: 'apps', color: 'primary' },\r\n      { label: 'List 2' },\r\n      { label: 'List 3', color: 'primary' },\r\n      { label: 'List 4' },\r\n    ] as any,\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Triger 1',\r\n    color: 'primary',\r\n    openDirection: 'bottom',\r\n    children: [\r\n      { label: 'Label 1', icon: 'info' },\r\n      { label: 'Label 2', icon: 'info' },\r\n      { label: 'Label 3', icon: 'info' },\r\n      { label: 'Label 4', icon: 'info' },\r\n    ],\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    color: 'primary',\r\n    icon: 'info',\r\n\r\n    children: [\r\n      {\r\n        label: 'First Item',\r\n        icon: 'info',\r\n        color: 'warn',\r\n      } as NavListItemComponent,\r\n      {\r\n        label: 'Secondar Item',\r\n        icon: 'apps',\r\n        color: 'red',\r\n      } as NavListItemComponent,\r\n      {\r\n        label: 'Third Item',\r\n        icon: 'key',\r\n        color: 'secondary',\r\n      } as NavListItemComponent,\r\n    ] as any,\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Button',\r\n    variant: 'basic',\r\n    color: 'primary',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Combined',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n    color: 'primary',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: 'info',\r\n    color: 'secondary',\r\n    variant:'raised'\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: '',\r\n    label: '',\r\n    error: '',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    name: 'name',\r\n    autocomplete: 'off',\r\n    color: 'warn',\r\n    label: 'Date of birth',\r\n    icon: 'info',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: '',\r\n    value: '',\r\n    type: 'text',\r\n    autocomplete: 'on',\r\n    color: 'primary',\r\n    label: 'Input Label',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    color: 'accent',\r\n    label: 'Input Label',\r\n    variant: 'basic',\r\n    icon: '123',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    name: 'category',\r\n    autocomplete: 'off',\r\n    color: 'primary',\r\n    label: 'category',\r\n    variant: 'basic',\r\n    icon: 'category',\r\n    options: [\r\n      { icon: 'info', value: 'Option 1' },\r\n      { icon: 'info', value: 'Option 2' },\r\n      { icon: 'info', value: 'Option 3' },\r\n    ],\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    name: 'name',\r\n    autocomplete: 'off',\r\n    color: 'primary',\r\n    label: 'Input Label',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: '',\r\n    color: 'primary',\r\n    icon: 'info',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    fill: '',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: '',\r\n    icon: 'info',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    variant: 'tab',\r\n    borderPosition: 'bottom',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    pageLengthOptions: [10, 20, 30],\r\n    itemCount: 100,\r\n  },\r\n}"
            }
        ],
        "functions": [
            {
                "name": "monthTable",
                "file": "libs/material/src/api/month-table.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Return 6weeks</p>\n",
                "args": [
                    {
                        "name": "years",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "month",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 33,
                            "end": 38,
                            "flags": 8388608,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "years"
                        },
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 27,
                            "end": 32,
                            "flags": 8388608,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "name": {
                            "pos": 50,
                            "end": 55,
                            "flags": 8388608,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "month"
                        },
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 44,
                            "end": 49,
                            "flags": 8388608,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "tagName": {
                            "pos": 61,
                            "end": 68,
                            "flags": 8388608,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "returns"
                        },
                        "comment": ""
                    }
                ]
            },
            {
                "name": "slideFromRightOnEnter",
                "file": "libs/material/src/api/animations.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "BadgePosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top-right\" | \"top-left\" | \"bottom-left\" | \"bottom-right\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"regular\" | \"big\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButtonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"button\" | \"icon-button\" | \"combined-button\" | \"tab-button\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButttonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"stroked\" | \"inbox\" | \"tab\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Color",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"accent\" | \"warn\" | \"red\" | \"green\" | \"black\" | \"white\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Day",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"Sunday\" | \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "DayNum",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Direction",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top\" | \"right\" | \"bottom\" | \"left\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Hour",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"signature\" | \"10k\" | \"10mp\" | \"11mp\" | \"123\" | \"12mp\" | \"13mp\" | \"14mp\" | \"15mp\" | \"16mp\" | \"17mp\" | \"18_up_rating\" | \"18mp\" | \"19mp\" | \"1k_plus\" | \"1k\" | \"1x_mobiledata\" | \"20mp\" | \"21mp\" | \"22mp\" | \"23mp\" | \"24mp\" | \"2k_plus\" | \"2k\" | \"2mp\" | \"30fps_select\" | \"30fps\" | \"360\" | \"3d_rotation\" | \"3g_mobiledata\" | \"3k_plus\" | \"3k\" | \"3mp\" | \"3p\" | \"4g_mobiledata\" | \"4g_plus_mobiledata\" | \"4k_plus\" | \"4k\" | \"4mp\" | \"5g\" | \"5k_plus\" | \"5k\" | \"5mp\" | \"6_ft_apart\" | \"60fps_select\" | \"60fps\" | \"6k_plus\" | \"6k\" | \"6mp\" | \"7k_plus\" | \"7k\" | \"7mp\" | \"8k_plus\" | \"8k\" | \"8mp\" | \"9k_plus\" | \"9k\" | \"9mp\" | \"abc\" | \"ac_unit\" | \"access_alarm\" | \"access_alarms\" | \"access_time_filled\" | \"access_time\" | \"accessibility_new\" | \"accessibility\" | \"accessible_forward\" | \"accessible\" | \"account_balance_wallet\" | \"account_balance\" | \"account_box\" | \"account_circle\" | \"account_tree\" | \"ad_units\" | \"adb\" | \"add_a_photo\" | \"add_alarm\" | \"add_alert\" | \"add_box\" | \"add_business\" | \"add_card\" | \"add_chart\" | \"add_circle_outline\" | \"add_circle\" | \"add_comment\" | \"add_home_work\" | \"add_home\" | \"add_ic_call\" | \"add_link\" | \"add_location_alt\" | \"add_location\" | \"add_moderator\" | \"add_photo_alternate\" | \"add_reaction\" | \"add_road\" | \"add_shopping_cart\" | \"add_task\" | \"add_to_drive\" | \"add_to_home_screen\" | \"add_to_photos\" | \"add_to_queue\" | \"add\" | \"addchart\" | \"adf_scanner\" | \"adjust\" | \"admin_panel_settings\" | \"ads_click\" | \"agriculture\" | \"air\" | \"airline_seat_flat_angled\" | \"airline_seat_flat\" | \"airline_seat_individual_suite\" | \"airline_seat_legroom_extra\" | \"airline_seat_legroom_normal\" | \"airline_seat_legroom_reduced\" | \"airline_seat_recline_extra\" | \"airline_seat_recline_normal\" | \"airline_stops\" | \"airlines\" | \"airplane_ticket\" | \"airplanemode_active\" | \"airplanemode_inactive\" | \"airplay\" | \"airport_shuttle\" | \"alarm_add\" | \"alarm_off\" | \"alarm_on\" | \"alarm\" | \"album\" | \"align_horizontal_center\" | \"align_horizontal_left\" | \"align_horizontal_right\" | \"align_vertical_bottom\" | \"align_vertical_center\" | \"align_vertical_top\" | \"all_inbox\" | \"all_inclusive\" | \"all_out\" | \"alt_route\" | \"alternate_email\" | \"analytics\" | \"anchor\" | \"android\" | \"animation\" | \"announcement\" | \"aod\" | \"apartment\" | \"api\" | \"app_blocking\" | \"app_registration\" | \"app_settings_alt\" | \"app_shortcut\" | \"approval\" | \"apps_outage\" | \"apps\" | \"architecture\" | \"archive\" | \"area_chart\" | \"arrow_back_ios_new\" | \"arrow_back_ios\" | \"arrow_back\" | \"arrow_circle_down\" | \"arrow_circle_left\" | \"arrow_circle_right\" | \"arrow_circle_up\" | \"arrow_downward\" | \"arrow_drop_down_circle\" | \"arrow_drop_down\" | \"arrow_drop_up\" | \"arrow_forward_ios\" | \"arrow_forward\" | \"arrow_left\" | \"arrow_outward\" | \"arrow_right_alt\" | \"arrow_right\" | \"arrow_upward\" | \"art_track\" | \"article\" | \"aspect_ratio\" | \"assessment\" | \"assignment_ind\" | \"assignment_late\" | \"assignment_return\" | \"assignment_returned\" | \"assignment_turned_in\" | \"assignment\" | \"assist_walker\" | \"assistant_direction\" | \"assistant_photo\" | \"assistant\" | \"assured_workload\" | \"atm\" | \"attach_email\" | \"attach_file\" | \"attach_money\" | \"attachment\" | \"attractions\" | \"attribution\" | \"audio_file\" | \"audiotrack\" | \"auto_awesome_mosaic\" | \"auto_awesome_motion\" | \"auto_awesome\" | \"auto_delete\" | \"auto_fix_high\" | \"auto_fix_normal\" | \"auto_fix_off\" | \"auto_graph\" | \"auto_mode\" | \"auto_stories\" | \"autofps_select\" | \"autorenew\" | \"av_timer\" | \"baby_changing_station\" | \"back_hand\" | \"backpack\" | \"backspace\" | \"backup_table\" | \"backup\" | \"badge\" | \"bakery_dining\" | \"balance\" | \"balcony\" | \"ballot\" | \"bar_chart\" | \"batch_prediction\" | \"bathroom\" | \"bathtub\" | \"battery_0_bar\" | \"battery_1_bar\" | \"battery_2_bar\" | \"battery_3_bar\" | \"battery_4_bar\" | \"battery_5_bar\" | \"battery_6_bar\" | \"battery_alert\" | \"battery_charging_full\" | \"battery_full\" | \"battery_saver\" | \"battery_std\" | \"battery_unknown\" | \"beach_access\" | \"bed\" | \"bedroom_baby\" | \"bedroom_child\" | \"bedroom_parent\" | \"bedtime_off\" | \"bedtime\" | \"beenhere\" | \"bento\" | \"bike_scooter\" | \"biotech\" | \"blender\" | \"blind\" | \"blinds_closed\" | \"blinds\" | \"block\" | \"bloodtype\" | \"bluetooth_audio\" | \"bluetooth_connected\" | \"bluetooth_disabled\" | \"bluetooth_drive\" | \"bluetooth_searching\" | \"bluetooth\" | \"blur_circular\" | \"blur_linear\" | \"blur_off\" | \"blur_on\" | \"bolt\" | \"book_online\" | \"book\" | \"bookmark_add\" | \"bookmark_added\" | \"bookmark_border\" | \"bookmark_remove\" | \"bookmark\" | \"bookmarks\" | \"border_all\" | \"border_bottom\" | \"border_clear\" | \"border_color\" | \"border_horizontal\" | \"border_inner\" | \"border_left\" | \"border_outer\" | \"border_right\" | \"border_style\" | \"border_top\" | \"border_vertical\" | \"boy\" | \"branding_watermark\" | \"breakfast_dining\" | \"brightness_1\" | \"brightness_2\" | \"brightness_3\" | \"brightness_4\" | \"brightness_5\" | \"brightness_6\" | \"brightness_7\" | \"brightness_auto\" | \"brightness_high\" | \"brightness_low\" | \"brightness_medium\" | \"broadcast_on_home\" | \"broadcast_on_personal\" | \"broken_image\" | \"browse_gallery\" | \"browser_not_supported\" | \"browser_updated\" | \"brunch_dining\" | \"brush\" | \"bubble_chart\" | \"bug_report\" | \"build_circle\" | \"build\" | \"bungalow\" | \"burst_mode\" | \"bus_alert\" | \"business_center\" | \"business\" | \"cabin\" | \"cable\" | \"cached\" | \"cake\" | \"calculate\" | \"calendar_month\" | \"calendar_today\" | \"calendar_view_day\" | \"calendar_view_month\" | \"calendar_view_week\" | \"call_end\" | \"call_made\" | \"call_merge\" | \"call_missed_outgoing\" | \"call_missed\" | \"call_received\" | \"call_split\" | \"call_to_action\" | \"call\" | \"camera_alt\" | \"camera_enhance\" | \"camera_front\" | \"camera_indoor\" | \"camera_outdoor\" | \"camera_rear\" | \"camera_roll\" | \"camera\" | \"cameraswitch\" | \"campaign\" | \"cancel_presentation\" | \"cancel_schedule_send\" | \"cancel\" | \"candlestick_chart\" | \"car_crash\" | \"car_rental\" | \"car_repair\" | \"card_giftcard\" | \"card_membership\" | \"card_travel\" | \"carpenter\" | \"cases\" | \"casino\" | \"cast_connected\" | \"cast_for_education\" | \"cast\" | \"castle\" | \"catching_pokemon\" | \"category\" | \"celebration\" | \"cell_tower\" | \"cell_wifi\" | \"center_focus_strong\" | \"center_focus_weak\" | \"chair_alt\" | \"chair\" | \"chalet\" | \"change_circle\" | \"change_history\" | \"charging_station\" | \"chat_bubble_outline\" | \"chat_bubble\" | \"chat\" | \"check_box_outline_blank\" | \"check_box\" | \"check_circle_outline\" | \"check_circle\" | \"check\" | \"checklist_rtl\" | \"checklist\" | \"checkroom\" | \"chevron_left\" | \"chevron_right\" | \"child_care\" | \"child_friendly\" | \"chrome_reader_mode\" | \"church\" | \"circle_notifications\" | \"circle\" | \"class\" | \"clean_hands\" | \"cleaning_services\" | \"clear_all\" | \"clear\" | \"close_fullscreen\" | \"close\" | \"closed_caption_disabled\" | \"closed_caption_off\" | \"closed_caption\" | \"cloud_circle\" | \"cloud_done\" | \"cloud_download\" | \"cloud_off\" | \"cloud_queue\" | \"cloud_sync\" | \"cloud_upload\" | \"cloud\" | \"co_present\" | \"co2\" | \"code_off\" | \"code\" | \"coffee_maker\" | \"coffee\" | \"collections_bookmark\" | \"collections\" | \"color_lens\" | \"colorize\" | \"comment_bank\" | \"comment\" | \"comments_disabled\" | \"commit\" | \"commute\" | \"compare_arrows\" | \"compare\" | \"compass_calibration\" | \"compost\" | \"compress\" | \"computer\" | \"confirmation_number\" | \"connect_without_contact\" | \"connected_tv\" | \"connecting_airports\" | \"construction\" | \"contact_emergency\" | \"contact_mail\" | \"contact_page\" | \"contact_phone\" | \"contact_support\" | \"contactless\" | \"contacts\" | \"content_copy\" | \"content_cut\" | \"content_paste_go\" | \"content_paste_off\" | \"content_paste_search\" | \"content_paste\" | \"contrast\" | \"control_camera\" | \"control_point_duplicate\" | \"control_point\" | \"cookie\" | \"copy_all\" | \"copyright\" | \"coronavirus\" | \"corporate_fare\" | \"cottage\" | \"countertops\" | \"create_new_folder\" | \"create\" | \"credit_card_off\" | \"credit_card\" | \"credit_score\" | \"crib\" | \"crisis_alert\" | \"crop_16_9\" | \"crop_3_2\" | \"crop_5_4\" | \"crop_7_5\" | \"crop_din\" | \"crop_free\" | \"crop_landscape\" | \"crop_original\" | \"crop_portrait\" | \"crop_rotate\" | \"crop_square\" | \"crop\" | \"cruelty_free\" | \"css\" | \"currency_bitcoin\" | \"currency_exchange\" | \"currency_franc\" | \"currency_lira\" | \"currency_pound\" | \"currency_ruble\" | \"currency_rupee\" | \"currency_yen\" | \"currency_yuan\" | \"curtains_closed\" | \"curtains\" | \"cyclone\" | \"dangerous\" | \"dark_mode\" | \"dashboard_customize\" | \"dashboard\" | \"data_array\" | \"data_exploration\" | \"data_object\" | \"data_saver_off\" | \"data_saver_on\" | \"data_thresholding\" | \"data_usage\" | \"dataset_linked\" | \"dataset\" | \"date_range\" | \"deblur\" | \"deck\" | \"dehaze\" | \"delete_forever\" | \"delete_outline\" | \"delete_sweep\" | \"delete\" | \"delivery_dining\" | \"density_large\" | \"density_medium\" | \"density_small\" | \"departure_board\" | \"description\" | \"deselect\" | \"design_services\" | \"desk\" | \"desktop_access_disabled\" | \"desktop_mac\" | \"desktop_windows\" | \"details\" | \"developer_board_off\" | \"developer_board\" | \"developer_mode\" | \"device_hub\" | \"device_thermostat\" | \"device_unknown\" | \"devices_fold\" | \"devices_other\" | \"devices\" | \"dialer_sip\" | \"dialpad\" | \"diamond\" | \"difference\" | \"dining\" | \"dinner_dining\" | \"directions_bike\" | \"directions_boat_filled\" | \"directions_boat\" | \"directions_bus_filled\" | \"directions_bus\" | \"directions_car_filled\" | \"directions_car\" | \"directions_off\" | \"directions_railway_filled\" | \"directions_railway\" | \"directions_run\" | \"directions_subway_filled\" | \"directions_subway\" | \"directions_transit_filled\" | \"directions_transit\" | \"directions_walk\" | \"directions\" | \"dirty_lens\" | \"disabled_by_default\" | \"disabled_visible\" | \"disc_full\" | \"discount\" | \"display_settings\" | \"diversity_1\" | \"diversity_2\" | \"diversity_3\" | \"dns\" | \"do_disturb_alt\" | \"do_disturb_off\" | \"do_disturb_on\" | \"do_disturb\" | \"do_not_disturb_alt\" | \"do_not_disturb_off\" | \"do_not_disturb_on_total_silence\" | \"do_not_disturb_on\" | \"do_not_disturb\" | \"do_not_step\" | \"do_not_touch\" | \"dock\" | \"document_scanner\" | \"domain_add\" | \"domain_disabled\" | \"domain_verification\" | \"domain\" | \"done_all\" | \"done_outline\" | \"done\" | \"donut_large\" | \"donut_small\" | \"door_back\" | \"door_front\" | \"door_sliding\" | \"doorbell\" | \"double_arrow\" | \"downhill_skiing\" | \"download_done\" | \"download_for_offline\" | \"download\" | \"downloading\" | \"drafts\" | \"drag_handle\" | \"drag_indicator\" | \"draw\" | \"drive_eta\" | \"drive_file_move_rtl\" | \"drive_file_move\" | \"drive_file_rename_outline\" | \"drive_folder_upload\" | \"dry_cleaning\" | \"dry\" | \"duo\" | \"dvr\" | \"dynamic_feed\" | \"dynamic_form\" | \"e_mobiledata\" | \"earbuds_battery\" | \"earbuds\" | \"east\" | \"edgesensor_high\" | \"edgesensor_low\" | \"edit_attributes\" | \"edit_calendar\" | \"edit_location_alt\" | \"edit_location\" | \"edit_note\" | \"edit_notifications\" | \"edit_off\" | \"edit_road\" | \"edit\" | \"egg_alt\" | \"egg\" | \"eject\" | \"elderly_woman\" | \"elderly\" | \"electric_bike\" | \"electric_bolt\" | \"electric_car\" | \"electric_meter\" | \"electric_moped\" | \"electric_rickshaw\" | \"electric_scooter\" | \"electrical_services\" | \"elevator\" | \"email\" | \"emergency_recording\" | \"emergency_share\" | \"emergency\" | \"emoji_emotions\" | \"emoji_events\" | \"emoji_food_beverage\" | \"emoji_nature\" | \"emoji_objects\" | \"emoji_people\" | \"emoji_symbols\" | \"emoji_transportation\" | \"energy_savings_leaf\" | \"engineering\" | \"enhanced_encryption\" | \"equalizer\" | \"error_outline\" | \"error\" | \"escalator_warning\" | \"escalator\" | \"euro_symbol\" | \"euro\" | \"ev_station\" | \"event_available\" | \"event_busy\" | \"event_note\" | \"event_repeat\" | \"event_seat\" | \"event\" | \"exit_to_app\" | \"expand_circle_down\" | \"expand_less\" | \"expand_more\" | \"expand\" | \"explicit\" | \"explore_off\" | \"explore\" | \"exposure_neg_1\" | \"exposure_neg_2\" | \"exposure_plus_1\" | \"exposure_plus_2\" | \"exposure_zero\" | \"exposure\" | \"extension_off\" | \"extension\" | \"face_2\" | \"face_3\" | \"face_4\" | \"face_5\" | \"face_6\" | \"face_retouching_natural\" | \"face_retouching_off\" | \"face_unlock\" | \"face\" | \"fact_check\" | \"factory\" | \"family_restroom\" | \"fast_forward\" | \"fast_rewind\" | \"fastfood\" | \"favorite_border\" | \"favorite\" | \"fax\" | \"featured_play_list\" | \"featured_video\" | \"feed\" | \"feedback\" | \"female\" | \"fence\" | \"festival\" | \"fiber_dvr\" | \"fiber_manual_record\" | \"fiber_new\" | \"fiber_pin\" | \"fiber_smart_record\" | \"file_copy\" | \"file_download_done\" | \"file_download_off\" | \"file_download\" | \"file_open\" | \"file_present\" | \"file_upload\" | \"filter_1\" | \"filter_2\" | \"filter_3\" | \"filter_4\" | \"filter_5\" | \"filter_6\" | \"filter_7\" | \"filter_8\" | \"filter_9_plus\" | \"filter_9\" | \"filter_alt_off\" | \"filter_alt\" | \"filter_b_and_w\" | \"filter_center_focus\" | \"filter_drama\" | \"filter_frames\" | \"filter_hdr\" | \"filter_list_off\" | \"filter_list\" | \"filter_none\" | \"filter_tilt_shift\" | \"filter_vintage\" | \"filter\" | \"find_in_page\" | \"find_replace\" | \"fingerprint\" | \"fire_extinguisher\" | \"fire_hydrant_alt\" | \"fire_truck\" | \"fireplace\" | \"first_page\" | \"fit_screen\" | \"fitbit\" | \"fitness_center\" | \"flag_circle\" | \"flag\" | \"flaky\" | \"flare\" | \"flash_auto\" | \"flash_off\" | \"flash_on\" | \"flashlight_off\" | \"flashlight_on\" | \"flatware\" | \"flight_class\" | \"flight_land\" | \"flight_takeoff\" | \"flight\" | \"flip_camera_android\" | \"flip_camera_ios\" | \"flip_to_back\" | \"flip_to_front\" | \"flip\" | \"flood\" | \"fluorescent\" | \"flutter_dash\" | \"fmd_bad\" | \"fmd_good\" | \"folder_copy\" | \"folder_delete\" | \"folder_off\" | \"folder_open\" | \"folder_shared\" | \"folder_special\" | \"folder_zip\" | \"folder\" | \"follow_the_signs\" | \"font_download_off\" | \"font_download\" | \"food_bank\" | \"forest\" | \"fork_left\" | \"fork_right\" | \"format_align_center\" | \"format_align_justify\" | \"format_align_left\" | \"format_align_right\" | \"format_bold\" | \"format_clear\" | \"format_color_fill\" | \"format_color_reset\" | \"format_color_text\" | \"format_indent_decrease\" | \"format_indent_increase\" | \"format_italic\" | \"format_line_spacing\" | \"format_list_bulleted\" | \"format_list_numbered_rtl\" | \"format_list_numbered\" | \"format_overline\" | \"format_paint\" | \"format_quote\" | \"format_shapes\" | \"format_size\" | \"format_strikethrough\" | \"format_textdirection_l_to_r\" | \"format_textdirection_r_to_l\" | \"format_underlined\" | \"fort\" | \"forum\" | \"forward_10\" | \"forward_30\" | \"forward_5\" | \"forward_to_inbox\" | \"forward\" | \"foundation\" | \"free_breakfast\" | \"free_cancellation\" | \"front_hand\" | \"fullscreen_exit\" | \"fullscreen\" | \"functions\" | \"g_mobiledata\" | \"g_translate\" | \"gamepad\" | \"games\" | \"garage\" | \"gas_meter\" | \"gavel\" | \"generating_tokens\" | \"gesture\" | \"get_app\" | \"gif_box\" | \"gif\" | \"girl\" | \"gite\" | \"golf_course\" | \"gpp_bad\" | \"gpp_good\" | \"gpp_maybe\" | \"gps_fixed\" | \"gps_not_fixed\" | \"gps_off\" | \"grade\" | \"gradient\" | \"grading\" | \"grain\" | \"graphic_eq\" | \"grass\" | \"grid_3x3\" | \"grid_4x4\" | \"grid_goldenratio\" | \"grid_off\" | \"grid_on\" | \"grid_view\" | \"group_add\" | \"group_off\" | \"group_remove\" | \"group_work\" | \"group\" | \"groups_2\" | \"groups_3\" | \"groups\" | \"h_mobiledata\" | \"h_plus_mobiledata\" | \"hail\" | \"handshake\" | \"handyman\" | \"hardware\" | \"hd\" | \"hdr_auto_select\" | \"hdr_auto\" | \"hdr_enhanced_select\" | \"hdr_off_select\" | \"hdr_off\" | \"hdr_on_select\" | \"hdr_on\" | \"hdr_plus\" | \"hdr_strong\" | \"hdr_weak\" | \"headphones_battery\" | \"headphones\" | \"headset_mic\" | \"headset_off\" | \"headset\" | \"healing\" | \"health_and_safety\" | \"hearing_disabled\" | \"hearing\" | \"heart_broken\" | \"heat_pump\" | \"height\" | \"help_center\" | \"help_outline\" | \"help\" | \"hevc\" | \"hexagon\" | \"hide_image\" | \"hide_source\" | \"high_quality\" | \"highlight_alt\" | \"highlight_off\" | \"highlight\" | \"hiking\" | \"history_edu\" | \"history_toggle_off\" | \"history\" | \"hive\" | \"hls_off\" | \"hls\" | \"holiday_village\" | \"home_max\" | \"home_mini\" | \"home_repair_service\" | \"home_work\" | \"home\" | \"horizontal_distribute\" | \"horizontal_rule\" | \"horizontal_split\" | \"hot_tub\" | \"hotel_class\" | \"hotel\" | \"hourglass_bottom\" | \"hourglass_disabled\" | \"hourglass_empty\" | \"hourglass_full\" | \"hourglass_top\" | \"house_siding\" | \"house\" | \"houseboat\" | \"how_to_reg\" | \"how_to_vote\" | \"html\" | \"http\" | \"https\" | \"hub\" | \"hvac\" | \"ice_skating\" | \"icecream\" | \"image_aspect_ratio\" | \"image_not_supported\" | \"image_search\" | \"image\" | \"imagesearch_roller\" | \"import_contacts\" | \"import_export\" | \"important_devices\" | \"inbox\" | \"incomplete_circle\" | \"indeterminate_check_box\" | \"info_outline\" | \"info\" | \"input\" | \"insert_chart_outlined\" | \"insert_chart\" | \"insert_comment\" | \"insert_drive_file\" | \"insert_emoticon\" | \"insert_invitation\" | \"insert_link\" | \"insert_page_break\" | \"insert_photo\" | \"insights\" | \"install_desktop\" | \"install_mobile\" | \"integration_instructions\" | \"interests\" | \"interpreter_mode\" | \"inventory_2\" | \"inventory\" | \"invert_colors_off\" | \"invert_colors\" | \"ios_share\" | \"iron\" | \"iso\" | \"javascript\" | \"join_full\" | \"join_inner\" | \"join_left\" | \"join_right\" | \"kayaking\" | \"kebab_dining\" | \"key_off\" | \"key\" | \"keyboard_alt\" | \"keyboard_arrow_down\" | \"keyboard_arrow_left\" | \"keyboard_arrow_right\" | \"keyboard_arrow_up\" | \"keyboard_backspace\" | \"keyboard_capslock\" | \"keyboard_command_key\" | \"keyboard_control_key\" | \"keyboard_double_arrow_down\" | \"keyboard_double_arrow_left\" | \"keyboard_double_arrow_right\" | \"keyboard_double_arrow_up\" | \"keyboard_hide\" | \"keyboard_option_key\" | \"keyboard_return\" | \"keyboard_tab\" | \"keyboard_voice\" | \"keyboard\" | \"king_bed\" | \"kitchen\" | \"kitesurfing\" | \"label_important_outline\" | \"label_important\" | \"label_off\" | \"label\" | \"lan\" | \"landscape\" | \"landslide\" | \"language\" | \"laptop_chromebook\" | \"laptop_mac\" | \"laptop_windows\" | \"laptop\" | \"last_page\" | \"launch\" | \"layers_clear\" | \"layers\" | \"leaderboard\" | \"leak_add\" | \"leak_remove\" | \"legend_toggle\" | \"lens_blur\" | \"lens\" | \"library_add_check\" | \"library_add\" | \"library_books\" | \"library_music\" | \"light_mode\" | \"light\" | \"lightbulb_circle\" | \"lightbulb_outline\" | \"lightbulb\" | \"line_axis\" | \"line_style\" | \"line_weight\" | \"linear_scale\" | \"link_off\" | \"link\" | \"linked_camera\" | \"liquor\" | \"list_alt\" | \"list\" | \"live_help\" | \"live_tv\" | \"living\" | \"local_activity\" | \"local_airport\" | \"local_atm\" | \"local_bar\" | \"local_cafe\" | \"local_car_wash\" | \"local_convenience_store\" | \"local_dining\" | \"local_drink\" | \"local_fire_department\" | \"local_florist\" | \"local_gas_station\" | \"local_grocery_store\" | \"local_hospital\" | \"local_hotel\" | \"local_laundry_service\" | \"local_library\" | \"local_mall\" | \"local_movies\" | \"local_offer\" | \"local_parking\" | \"local_pharmacy\" | \"local_phone\" | \"local_pizza\" | \"local_play\" | \"local_police\" | \"local_post_office\" | \"local_printshop\" | \"local_see\" | \"local_shipping\" | \"local_taxi\" | \"location_city\" | \"location_disabled\" | \"location_off\" | \"location_on\" | \"location_searching\" | \"lock_clock\" | \"lock_open\" | \"lock_outline\" | \"lock_person\" | \"lock_reset\" | \"lock\" | \"login\" | \"logo_dev\" | \"logout\" | \"looks_3\" | \"looks_4\" | \"looks_5\" | \"looks_6\" | \"looks_one\" | \"looks_two\" | \"looks\" | \"loop\" | \"loupe\" | \"low_priority\" | \"loyalty\" | \"lte_mobiledata\" | \"lte_plus_mobiledata\" | \"luggage\" | \"lunch_dining\" | \"lyrics\" | \"macro_off\" | \"mail_lock\" | \"mail_outline\" | \"mail\" | \"male\" | \"man_2\" | \"man_3\" | \"man_4\" | \"man\" | \"manage_accounts\" | \"manage_history\" | \"manage_search\" | \"map\" | \"maps_home_work\" | \"maps_ugc\" | \"margin\" | \"mark_as_unread\" | \"mark_chat_read\" | \"mark_chat_unread\" | \"mark_email_read\" | \"mark_email_unread\" | \"mark_unread_chat_alt\" | \"markunread_mailbox\" | \"markunread\" | \"masks\" | \"maximize\" | \"media_bluetooth_off\" | \"media_bluetooth_on\" | \"mediation\" | \"medical_information\" | \"medical_services\" | \"medication_liquid\" | \"medication\" | \"meeting_room\" | \"memory\" | \"menu_book\" | \"menu_open\" | \"menu\" | \"merge_type\" | \"merge\" | \"message\" | \"mic_external_off\" | \"mic_external_on\" | \"mic_none\" | \"mic_off\" | \"mic\" | \"microwave\" | \"military_tech\" | \"minimize\" | \"minor_crash\" | \"miscellaneous_services\" | \"missed_video_call\" | \"mms\" | \"mobile_friendly\" | \"mobile_off\" | \"mobile_screen_share\" | \"mobiledata_off\" | \"mode_comment\" | \"mode_edit_outline\" | \"mode_edit\" | \"mode_fan_off\" | \"mode_night\" | \"mode_of_travel\" | \"mode_standby\" | \"mode\" | \"model_training\" | \"monetization_on\" | \"money_off_csred\" | \"money_off\" | \"money\" | \"monitor_heart\" | \"monitor_weight\" | \"monitor\" | \"monochrome_photos\" | \"mood_bad\" | \"mood\" | \"moped\" | \"more_horiz\" | \"more_time\" | \"more_vert\" | \"more\" | \"mosque\" | \"motion_photos_auto\" | \"motion_photos_off\" | \"motion_photos_on\" | \"motion_photos_pause\" | \"motion_photos_paused\" | \"mouse\" | \"move_down\" | \"move_to_inbox\" | \"move_up\" | \"movie_creation\" | \"movie_filter\" | \"movie\" | \"moving\" | \"mp\" | \"multiline_chart\" | \"multiple_stop\" | \"museum\" | \"music_note\" | \"music_off\" | \"music_video\" | \"my_location\" | \"nat\" | \"nature_people\" | \"nature\" | \"navigate_before\" | \"navigate_next\" | \"navigation\" | \"near_me_disabled\" | \"near_me\" | \"nearby_error\" | \"nearby_off\" | \"nest_cam_wired_stand\" | \"network_cell\" | \"network_check\" | \"network_locked\" | \"network_ping\" | \"network_wifi_1_bar\" | \"network_wifi_2_bar\" | \"network_wifi_3_bar\" | \"network_wifi\" | \"new_label\" | \"new_releases\" | \"newspaper\" | \"next_plan\" | \"next_week\" | \"nfc\" | \"night_shelter\" | \"nightlife\" | \"nightlight_round\" | \"nightlight\" | \"nights_stay\" | \"no_accounts\" | \"no_adult_content\" | \"no_backpack\" | \"no_cell\" | \"no_crash\" | \"no_drinks\" | \"no_encryption_gmailerrorred\" | \"no_encryption\" | \"no_flash\" | \"no_food\" | \"no_luggage\" | \"no_meals\" | \"no_meeting_room\" | \"no_photography\" | \"no_sim\" | \"no_stroller\" | \"no_transfer\" | \"noise_aware\" | \"noise_control_off\" | \"nordic_walking\" | \"north_east\" | \"north_west\" | \"north\" | \"not_accessible\" | \"not_interested\" | \"not_listed_location\" | \"not_started\" | \"note_add\" | \"note_alt\" | \"note\" | \"notes\" | \"notification_add\" | \"notification_important\" | \"notifications_active\" | \"notifications_none\" | \"notifications_off\" | \"notifications_paused\" | \"notifications\" | \"numbers\" | \"offline_bolt\" | \"offline_pin\" | \"offline_share\" | \"oil_barrel\" | \"on_device_training\" | \"ondemand_video\" | \"online_prediction\" | \"opacity\" | \"open_in_browser\" | \"open_in_full\" | \"open_in_new_off\" | \"open_in_new\" | \"open_with\" | \"other_houses\" | \"outbound\" | \"outbox\" | \"outdoor_grill\" | \"outlet\" | \"outlined_flag\" | \"output\" | \"padding\" | \"pages\" | \"pageview\" | \"paid\" | \"palette\" | \"pan_tool_alt\" | \"pan_tool\" | \"panorama_fish_eye\" | \"panorama_horizontal_select\" | \"panorama_horizontal\" | \"panorama_photosphere_select\" | \"panorama_photosphere\" | \"panorama_vertical_select\" | \"panorama_vertical\" | \"panorama_wide_angle_select\" | \"panorama_wide_angle\" | \"panorama\" | \"paragliding\" | \"park\" | \"party_mode\" | \"password\" | \"pattern\" | \"pause_circle_filled\" | \"pause_circle_outline\" | \"pause_circle\" | \"pause_presentation\" | \"pause\" | \"payment\" | \"payments\" | \"pedal_bike\" | \"pending_actions\" | \"pending\" | \"pentagon\" | \"people_alt\" | \"people_outline\" | \"people\" | \"percent\" | \"perm_camera_mic\" | \"perm_contact_calendar\" | \"perm_data_setting\" | \"perm_device_information\" | \"perm_identity\" | \"perm_media\" | \"perm_phone_msg\" | \"perm_scan_wifi\" | \"person_2\" | \"person_3\" | \"person_4\" | \"person_add_alt_1\" | \"person_add_alt\" | \"person_add_disabled\" | \"person_add\" | \"person_off\" | \"person_outline\" | \"person_pin_circle\" | \"person_pin\" | \"person_remove_alt_1\" | \"person_remove\" | \"person_search\" | \"person\" | \"personal_injury\" | \"personal_video\" | \"pest_control_rodent\" | \"pest_control\" | \"pets\" | \"phishing\" | \"phone_android\" | \"phone_bluetooth_speaker\" | \"phone_callback\" | \"phone_disabled\" | \"phone_enabled\" | \"phone_forwarded\" | \"phone_iphone\" | \"phone_locked\" | \"phone_missed\" | \"phone_paused\" | \"phone\" | \"phonelink_erase\" | \"phonelink_lock\" | \"phonelink_off\" | \"phonelink_ring\" | \"phonelink_setup\" | \"phonelink\" | \"photo_album\" | \"photo_camera_back\" | \"photo_camera_front\" | \"photo_camera\" | \"photo_filter\" | \"photo_library\" | \"photo_size_select_actual\" | \"photo_size_select_large\" | \"photo_size_select_small\" | \"photo\" | \"php\" | \"piano_off\" | \"piano\" | \"picture_as_pdf\" | \"picture_in_picture_alt\" | \"picture_in_picture\" | \"pie_chart_outline\" | \"pie_chart\" | \"pin_drop\" | \"pin_end\" | \"pin_invoke\" | \"pin\" | \"pinch\" | \"pivot_table_chart\" | \"pix\" | \"place\" | \"plagiarism\" | \"play_arrow\" | \"play_circle_filled\" | \"play_circle_outline\" | \"play_circle\" | \"play_disabled\" | \"play_for_work\" | \"play_lesson\" | \"playlist_add_check_circle\" | \"playlist_add_check\" | \"playlist_add_circle\" | \"playlist_add\" | \"playlist_play\" | \"playlist_remove\" | \"plumbing\" | \"plus_one\" | \"podcasts\" | \"point_of_sale\" | \"policy\" | \"poll\" | \"polyline\" | \"polymer\" | \"pool\" | \"portable_wifi_off\" | \"portrait\" | \"post_add\" | \"power_input\" | \"power_off\" | \"power_settings_new\" | \"power\" | \"precision_manufacturing\" | \"pregnant_woman\" | \"present_to_all\" | \"preview\" | \"price_change\" | \"price_check\" | \"print_disabled\" | \"print\" | \"priority_high\" | \"privacy_tip\" | \"private_connectivity\" | \"production_quantity_limits\" | \"propane_tank\" | \"propane\" | \"psychology_alt\" | \"psychology\" | \"public_off\" | \"public\" | \"publish\" | \"published_with_changes\" | \"punch_clock\" | \"push_pin\" | \"qr_code_2\" | \"qr_code_scanner\" | \"qr_code\" | \"query_builder\" | \"query_stats\" | \"question_answer\" | \"question_mark\" | \"queue_music\" | \"queue_play_next\" | \"queue\" | \"quickreply\" | \"quiz\" | \"r_mobiledata\" | \"radar\" | \"radio_button_checked\" | \"radio_button_unchecked\" | \"radio\" | \"railway_alert\" | \"ramen_dining\" | \"ramp_left\" | \"ramp_right\" | \"rate_review\" | \"raw_off\" | \"raw_on\" | \"read_more\" | \"real_estate_agent\" | \"receipt_long\" | \"receipt\" | \"recent_actors\" | \"recommend\" | \"record_voice_over\" | \"rectangle\" | \"recycling\" | \"redeem\" | \"redo\" | \"reduce_capacity\" | \"refresh\" | \"remember_me\" | \"remove_circle_outline\" | \"remove_circle\" | \"remove_done\" | \"remove_from_queue\" | \"remove_moderator\" | \"remove_red_eye\" | \"remove_road\" | \"remove_shopping_cart\" | \"remove\" | \"reorder\" | \"repartition\" | \"repeat_on\" | \"repeat_one_on\" | \"repeat_one\" | \"repeat\" | \"replay_10\" | \"replay_30\" | \"replay_5\" | \"replay_circle_filled\" | \"replay\" | \"reply_all\" | \"reply\" | \"report_gmailerrorred\" | \"report_off\" | \"report_problem\" | \"report\" | \"request_page\" | \"request_quote\" | \"reset_tv\" | \"restart_alt\" | \"restaurant_menu\" | \"restaurant\" | \"restore_from_trash\" | \"restore_page\" | \"restore\" | \"reviews\" | \"rice_bowl\" | \"ring_volume\" | \"rocket_launch\" | \"rocket\" | \"roller_shades_closed\" | \"roller_shades\" | \"roller_skating\" | \"roofing\" | \"room_preferences\" | \"room_service\" | \"room\" | \"rotate_90_degrees_ccw\" | \"rotate_90_degrees_cw\" | \"rotate_left\" | \"rotate_right\" | \"roundabout_left\" | \"roundabout_right\" | \"rounded_corner\" | \"route\" | \"router\" | \"rowing\" | \"rss_feed\" | \"rsvp\" | \"rtt\" | \"rule_folder\" | \"rule\" | \"run_circle\" | \"running_with_errors\" | \"rv_hookup\" | \"safety_check\" | \"safety_divider\" | \"sailing\" | \"sanitizer\" | \"satellite_alt\" | \"satellite\" | \"save_alt\" | \"save_as\" | \"save\" | \"saved_search\" | \"savings\" | \"scale\" | \"scanner\" | \"scatter_plot\" | \"schedule_send\" | \"schedule\" | \"schema\" | \"school\" | \"science\" | \"score\" | \"scoreboard\" | \"screen_lock_landscape\" | \"screen_lock_portrait\" | \"screen_lock_rotation\" | \"screen_rotation_alt\" | \"screen_rotation\" | \"screen_search_desktop\" | \"screen_share\" | \"screenshot_monitor\" | \"screenshot\" | \"scuba_diving\" | \"sd_card_alert\" | \"sd_card\" | \"sd_storage\" | \"sd\" | \"search_off\" | \"search\" | \"security_update_good\" | \"security_update_warning\" | \"security_update\" | \"security\" | \"segment\" | \"select_all\" | \"self_improvement\" | \"sell\" | \"send_and_archive\" | \"send_time_extension\" | \"send_to_mobile\" | \"send\" | \"sensor_door\" | \"sensor_occupied\" | \"sensor_window\" | \"sensors_off\" | \"sensors\" | \"sentiment_dissatisfied\" | \"sentiment_neutral\" | \"sentiment_satisfied_alt\" | \"sentiment_satisfied\" | \"sentiment_very_dissatisfied\" | \"sentiment_very_satisfied\" | \"set_meal\" | \"settings_accessibility\" | \"settings_applications\" | \"settings_backup_restore\" | \"settings_bluetooth\" | \"settings_brightness\" | \"settings_cell\" | \"settings_ethernet\" | \"settings_input_antenna\" | \"settings_input_component\" | \"settings_input_composite\" | \"settings_input_hdmi\" | \"settings_input_svideo\" | \"settings_overscan\" | \"settings_phone\" | \"settings_power\" | \"settings_remote\" | \"settings_suggest\" | \"settings_system_daydream\" | \"settings_voice\" | \"settings\" | \"severe_cold\" | \"shape_line\" | \"share_location\" | \"share\" | \"shield_moon\" | \"shield\" | \"shop_2\" | \"shop_two\" | \"shop\" | \"shopping_bag\" | \"shopping_basket\" | \"shopping_cart_checkout\" | \"shopping_cart\" | \"short_text\" | \"shortcut\" | \"show_chart\" | \"shower\" | \"shuffle_on\" | \"shuffle\" | \"shutter_speed\" | \"sick\" | \"sign_language\" | \"signal_cellular_0_bar\" | \"signal_cellular_4_bar\" | \"signal_cellular_alt_1_bar\" | \"signal_cellular_alt_2_bar\" | \"signal_cellular_alt\" | \"signal_cellular_connected_no_internet_0_bar\" | \"signal_cellular_connected_no_internet_4_bar\" | \"signal_cellular_no_sim\" | \"signal_cellular_nodata\" | \"signal_cellular_null\" | \"signal_cellular_off\" | \"signal_wifi_0_bar\" | \"signal_wifi_4_bar_lock\" | \"signal_wifi_4_bar\" | \"signal_wifi_bad\" | \"signal_wifi_connected_no_internet_4\" | \"signal_wifi_off\" | \"signal_wifi_statusbar_4_bar\" | \"signal_wifi_statusbar_connected_no_internet_4\" | \"signal_wifi_statusbar_null\" | \"signpost\" | \"sim_card_alert\" | \"sim_card_download\" | \"sim_card\" | \"single_bed\" | \"sip\" | \"skateboarding\" | \"skip_next\" | \"skip_previous\" | \"sledding\" | \"slideshow\" | \"slow_motion_video\" | \"smart_button\" | \"smart_display\" | \"smart_screen\" | \"smart_toy\" | \"smartphone\" | \"smoke_free\" | \"smoking_rooms\" | \"sms_failed\" | \"sms\" | \"snippet_folder\" | \"snooze\" | \"snowboarding\" | \"snowmobile\" | \"snowshoeing\" | \"soap\" | \"social_distance\" | \"solar_power\" | \"sort_by_alpha\" | \"sort\" | \"sos\" | \"soup_kitchen\" | \"source\" | \"south_america\" | \"south_east\" | \"south_west\" | \"south\" | \"spa\" | \"space_bar\" | \"space_dashboard\" | \"spatial_audio_off\" | \"spatial_audio\" | \"spatial_tracking\" | \"speaker_group\" | \"speaker_notes_off\" | \"speaker_notes\" | \"speaker_phone\" | \"speaker\" | \"speed\" | \"spellcheck\" | \"splitscreen\" | \"spoke\" | \"sports_bar\" | \"sports_baseball\" | \"sports_basketball\" | \"sports_cricket\" | \"sports_esports\" | \"sports_football\" | \"sports_golf\" | \"sports_gymnastics\" | \"sports_handball\" | \"sports_hockey\" | \"sports_kabaddi\" | \"sports_martial_arts\" | \"sports_mma\" | \"sports_motorsports\" | \"sports_rugby\" | \"sports_score\" | \"sports_soccer\" | \"sports_tennis\" | \"sports_volleyball\" | \"sports\" | \"square_foot\" | \"square\" | \"ssid_chart\" | \"stacked_bar_chart\" | \"stacked_line_chart\" | \"stadium\" | \"stairs\" | \"star_border_purple500\" | \"star_border\" | \"star_half\" | \"star_outline\" | \"star_purple500\" | \"star_rate\" | \"star\" | \"stars\" | \"start\" | \"stay_current_landscape\" | \"stay_current_portrait\" | \"stay_primary_landscape\" | \"stay_primary_portrait\" | \"sticky_note_2\" | \"stop_circle\" | \"stop_screen_share\" | \"stop\" | \"storage\" | \"store_mall_directory\" | \"store\" | \"storefront\" | \"storm\" | \"straight\" | \"straighten\" | \"stream\" | \"streetview\" | \"strikethrough_s\" | \"stroller\" | \"style\" | \"subdirectory_arrow_left\" | \"subdirectory_arrow_right\" | \"subject\" | \"subscript\" | \"subscriptions\" | \"subtitles_off\" | \"subtitles\" | \"subway\" | \"summarize\" | \"superscript\" | \"supervised_user_circle\" | \"supervisor_account\" | \"support_agent\" | \"support\" | \"surfing\" | \"surround_sound\" | \"swap_calls\" | \"swap_horiz\" | \"swap_horizontal_circle\" | \"swap_vert\" | \"swap_vertical_circle\" | \"swipe_down_alt\" | \"swipe_down\" | \"swipe_left_alt\" | \"swipe_left\" | \"swipe_right_alt\" | \"swipe_right\" | \"swipe_up_alt\" | \"swipe_up\" | \"swipe_vertical\" | \"swipe\" | \"switch_access_shortcut_add\" | \"switch_access_shortcut\" | \"switch_account\" | \"switch_camera\" | \"switch_left\" | \"switch_right\" | \"switch_video\" | \"synagogue\" | \"sync_alt\" | \"sync_disabled\" | \"sync_lock\" | \"sync_problem\" | \"sync\" | \"system_security_update_good\" | \"system_security_update_warning\" | \"system_security_update\" | \"system_update_alt\" | \"system_update\" | \"tab_unselected\" | \"tab\" | \"table_bar\" | \"table_chart\" | \"table_restaurant\" | \"table_rows\" | \"table_view\" | \"tablet_android\" | \"tablet_mac\" | \"tablet\" | \"tag_faces\" | \"tag\" | \"takeout_dining\" | \"tap_and_play\" | \"tapas\" | \"task_alt\" | \"task\" | \"taxi_alert\" | \"temple_buddhist\" | \"temple_hindu\" | \"terminal\" | \"terrain\" | \"text_decrease\" | \"text_fields\" | \"text_format\" | \"text_increase\" | \"text_rotate_up\" | \"text_rotate_vertical\" | \"text_rotation_angledown\" | \"text_rotation_angleup\" | \"text_rotation_down\" | \"text_rotation_none\" | \"text_snippet\" | \"textsms\" | \"texture\" | \"theater_comedy\" | \"theaters\" | \"thermostat_auto\" | \"thermostat\" | \"thumb_down_alt\" | \"thumb_down_off_alt\" | \"thumb_down\" | \"thumb_up_alt\" | \"thumb_up_off_alt\" | \"thumb_up\" | \"thumbs_up_down\" | \"thunderstorm\" | \"time_to_leave\" | \"timelapse\" | \"timeline\" | \"timer_10_select\" | \"timer_10\" | \"timer_3_select\" | \"timer_3\" | \"timer_off\" | \"timer\" | \"tips_and_updates\" | \"tire_repair\" | \"title\" | \"toc\" | \"today\" | \"toggle_off\" | \"toggle_on\" | \"token\" | \"toll\" | \"tonality\" | \"topic\" | \"tornado\" | \"touch_app\" | \"tour\" | \"toys\" | \"track_changes\" | \"traffic\" | \"train\" | \"tram\" | \"transcribe\" | \"transfer_within_a_station\" | \"transform\" | \"transgender\" | \"transit_enterexit\" | \"translate\" | \"travel_explore\" | \"trending_down\" | \"trending_flat\" | \"trending_up\" | \"trip_origin\" | \"troubleshoot\" | \"try\" | \"tsunami\" | \"tty\" | \"tune\" | \"tungsten\" | \"turn_left\" | \"turn_right\" | \"turn_sharp_left\" | \"turn_sharp_right\" | \"turn_slight_left\" | \"turn_slight_right\" | \"turned_in_not\" | \"turned_in\" | \"tv_off\" | \"tv\" | \"two_wheeler\" | \"type_specimen\" | \"u_turn_left\" | \"u_turn_right\" | \"umbrella\" | \"unarchive\" | \"undo\" | \"unfold_less_double\" | \"unfold_less\" | \"unfold_more_double\" | \"unfold_more\" | \"unpublished\" | \"unsubscribe\" | \"upcoming\" | \"update_disabled\" | \"update\" | \"upgrade\" | \"upload_file\" | \"upload\" | \"usb_off\" | \"usb\" | \"vaccines\" | \"vape_free\" | \"vaping_rooms\" | \"verified_user\" | \"verified\" | \"vertical_align_bottom\" | \"vertical_align_center\" | \"vertical_align_top\" | \"vertical_distribute\" | \"vertical_shades_closed\" | \"vertical_shades\" | \"vertical_split\" | \"vibration\" | \"video_call\" | \"video_camera_back\" | \"video_camera_front\" | \"video_chat\" | \"video_file\" | \"video_label\" | \"video_library\" | \"video_settings\" | \"video_stable\" | \"videocam_off\" | \"videocam\" | \"videogame_asset_off\" | \"videogame_asset\" | \"view_agenda\" | \"view_array\" | \"view_carousel\" | \"view_column\" | \"view_comfy_alt\" | \"view_comfy\" | \"view_compact_alt\" | \"view_compact\" | \"view_cozy\" | \"view_day\" | \"view_headline\" | \"view_in_ar\" | \"view_kanban\" | \"view_list\" | \"view_module\" | \"view_quilt\" | \"view_sidebar\" | \"view_stream\" | \"view_timeline\" | \"view_week\" | \"vignette\" | \"villa\" | \"visibility_off\" | \"visibility\" | \"voice_chat\" | \"voice_over_off\" | \"voicemail\" | \"volcano\" | \"volume_down\" | \"volume_mute\" | \"volume_off\" | \"volume_up\" | \"volunteer_activism\" | \"vpn_key_off\" | \"vpn_key\" | \"vpn_lock\" | \"vrpano\" | \"wallet\" | \"wallpaper\" | \"warehouse\" | \"warning_amber\" | \"warning\" | \"wash\" | \"watch_later\" | \"watch_off\" | \"watch\" | \"water_damage\" | \"water_drop\" | \"water\" | \"waterfall_chart\" | \"waves\" | \"waving_hand\" | \"wb_auto\" | \"wb_cloudy\" | \"wb_incandescent\" | \"wb_iridescent\" | \"wb_shade\" | \"wb_sunny\" | \"wb_twilight\" | \"wc\" | \"web_asset_off\" | \"web_asset\" | \"web_stories\" | \"web\" | \"webhook\" | \"weekend\" | \"west\" | \"whatshot\" | \"wheelchair_pickup\" | \"where_to_vote\" | \"widgets\" | \"width_full\" | \"width_normal\" | \"width_wide\" | \"wifi_1_bar\" | \"wifi_2_bar\" | \"wifi_calling_3\" | \"wifi_calling\" | \"wifi_channel\" | \"wifi_find\" | \"wifi_lock\" | \"wifi_off\" | \"wifi_password\" | \"wifi_protected_setup\" | \"wifi_tethering_error\" | \"wifi_tethering_off\" | \"wifi_tethering\" | \"wifi\" | \"wind_power\" | \"window\" | \"wine_bar\" | \"woman_2\" | \"woman\" | \"work_history\" | \"work_off\" | \"work_outline\" | \"work\" | \"workspace_premium\" | \"workspaces\" | \"wrap_text\" | \"wrong_location\" | \"wysiwyg\" | \"yard\" | \"youtube_searched_for\" | \"zoom_in_map\" | \"zoom_in\" | \"zoom_out_map\" | \"zoom_out\"",
                "file": "libs/material/src/api/icon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "InputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"textarea\" | \"password\" | \"number\" | \"boolean\" | \"date\" | \"select\" | \"multi-select\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "InputVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ButttonVariant",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Minute",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\" | \"25\" | \"26\" | \"27\" | \"28\" | \"29\" | \"30\" | \"31\" | \"32\" | \"33\" | \"34\" | \"35\" | \"36\" | \"37\" | \"38\" | \"39\" | \"40\" | \"41\" | \"42\" | \"43\" | \"44\" | \"45\" | \"46\" | \"47\" | \"48\" | \"49\" | \"50\" | \"51\" | \"52\" | \"53\" | \"54\" | \"55\" | \"56\" | \"57\" | \"58\" | \"59\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "MonthNames",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"January\" | \"February\" | \"March\" | \"April\" | \"May\" | \"June\" | \"July\" | \"August\" | \"September\" | \"October\" | \"November\" | \"December\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "MonthNum",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"0\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | number",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "NavItem",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/api/nav-item.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "PageEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "SearchEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "SelectOption",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "SortEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AlertComponent>",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AppAuthComponent>",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorsComponent>",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FontsComponent>",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormComponent>",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LayoutComponent>",
                "file": "libs/material/src/layout/layout.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ListComponent>",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MenuComponent>",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavListComponent>",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NotificationComponent>",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StepperComponent>",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StickyNotesComponent>",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabContainerComponent>",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "libs/material/src/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToolbarComponent>",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CombinedButtonComponent>",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<IconButtonComponent>",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SampleButtonsComponent>",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BooleanInputComponent>",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CommonInputComponent>",
                "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateInputComponent>",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DatePickerComponent>",
                "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NumberInputComponent>",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SearchInputComponent>",
                "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectInputComponent>",
                "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextInputComponent>",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextareaComponent>",
                "file": "libs/material/src/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ListItemComponent>",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<IconComponent>",
                "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavListItemComponent>",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabButtonComponent>",
                "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PaginatorComponent>",
                "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "TabContainerType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sidenav\" | \"tab\"",
                "file": "libs/material/src/tab/tab-container.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/material/src/alert/alert.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    color: 'red',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/alert works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AlertComponent>",
                    "defaultValue": "{\r\n  component: AlertComponent,\r\n  title: 'AlertComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    color: 'red',\r\n    icon: 'info',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/app-auth/app-auth.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/app-auth works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppAuthComponent>",
                    "defaultValue": "{\r\n  component: AppAuthComponent,\r\n  title: 'App Auth',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [BrowserAnimationsModule],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/colors/colors.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/colors works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorsComponent>",
                    "defaultValue": "{\r\n  component: ColorsComponent,\r\n  title: 'ColorsComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/fonts/fonts.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/fonts works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FontsComponent>",
                    "defaultValue": "{\r\n  component: FontsComponent,\r\n  title: 'FontsComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/form/form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    children: [\r\n      {\r\n        inputs() {\r\n          return {\r\n            label: 'Username',\r\n            type: 'text',\r\n            name: 'username',\r\n            icon: 'person',\r\n          };\r\n        },\r\n      },\r\n    ],\r\n  } as any,\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "LoginForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    children: [\r\n      {\r\n        inputs() {\r\n          return {\r\n            label: 'Username',\r\n            type: 'text',\r\n            name: 'username',\r\n            icon: 'person',\r\n          };\r\n        },\r\n      },\r\n      {\r\n        inputs() {\r\n          return {\r\n            label: 'Password',\r\n            type: 'password',\r\n            name: 'password',\r\n            icon: 'password',\r\n          };\r\n        },\r\n      },\r\n    ],\r\n  } as any,\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormComponent>",
                    "defaultValue": "{\r\n  component: FormComponent,\r\n  title: 'FormComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    children: [\r\n      {\r\n        inputs() {\r\n          return {\r\n            label: 'Username',\r\n            type: 'text',\r\n            name: 'username',\r\n            icon: 'person',\r\n          };\r\n        },\r\n      },\r\n    ],\r\n  } as any,\r\n}"
                }
            ],
            "libs/material/src/layout/layout.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/layout/layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/layout works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/layout/layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LayoutComponent>",
                    "defaultValue": "{\r\n  component: LayoutComponent,\r\n  title: 'A Layout',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [BrowserAnimationsModule],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/layout/layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/list/list.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/list works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ListComponent>",
                    "defaultValue": "{\r\n  component: ListComponent,\r\n  title: 'ListComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    color: 'warn',\r\n    icon: 'home',\r\n    children: [\r\n      { label: 'List 1', icon: 'apps', color: 'primary' },\r\n      { label: 'List 2' },\r\n      { label: 'List 3', color: 'primary' },\r\n      { label: 'List 4' },\r\n    ] as any,\r\n  },\r\n}"
                }
            ],
            "libs/material/src/menu/menu.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: { label: 'Triger 1' },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/Triger 1/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MenuComponent>",
                    "defaultValue": "{\r\n  component: MenuComponent,\r\n  title: 'MenuComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Triger 1',\r\n    color: 'primary',\r\n    openDirection: 'bottom',\r\n    children: [\r\n      { label: 'Label 1', icon: 'info' },\r\n      { label: 'Label 2', icon: 'info' },\r\n      { label: 'Label 3', icon: 'info' },\r\n      { label: 'Label 4', icon: 'info' },\r\n    ],\r\n  },\r\n}"
                }
            ],
            "libs/material/src/nav-list/nav-list.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    color: 'primary',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/nav-list works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavListComponent>",
                    "defaultValue": "{\r\n  component: NavListComponent,\r\n  title: 'NavListComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    color: 'primary',\r\n    icon: 'info',\r\n\r\n    children: [\r\n      {\r\n        label: 'First Item',\r\n        icon: 'info',\r\n        color: 'warn',\r\n      } as NavListItemComponent,\r\n      {\r\n        label: 'Secondar Item',\r\n        icon: 'apps',\r\n        color: 'red',\r\n      } as NavListItemComponent,\r\n      {\r\n        label: 'Third Item',\r\n        icon: 'key',\r\n        color: 'secondary',\r\n      } as NavListItemComponent,\r\n    ] as any,\r\n  },\r\n}"
                }
            ],
            "libs/material/src/notification/notification.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/notification works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NotificationComponent>",
                    "defaultValue": "{\r\n  component: NotificationComponent,\r\n  title: 'NotificationComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/stepper/stepper.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/stepper works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StepperComponent>",
                    "defaultValue": "{\r\n  component: StepperComponent,\r\n  title: 'StepperComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/sticky-notes/sticky-notes.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/sticky-notes works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StickyNotesComponent>",
                    "defaultValue": "{\r\n  component: StickyNotesComponent,\r\n  title: 'StickyNotesComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/tab/tab-container.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/tab-container works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabContainerComponent>",
                    "defaultValue": "{\r\n  component: TabContainerComponent,\r\n  title: 'TabContainerComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/table/table.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/table works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\r\n  component: TableComponent,\r\n  title: 'TableComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/toolbar/toolbar.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/toolbar works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToolbarComponent>",
                    "defaultValue": "{\r\n  component: ToolbarComponent,\r\n  title: 'ToolbarComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/button/button/button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Raised Button',\r\n    variant: 'raised',\r\n    color: 'secondary',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/Raised Button/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\r\n  component: ButtonComponent,\r\n  title: 'Button Regular',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Button',\r\n    variant: 'basic',\r\n    color: 'primary',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/button/combined-button/combined-button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Combined',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n    color: 'primary',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/Combined/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CombinedButtonComponent>",
                    "defaultValue": "{\r\n  component: CombinedButtonComponent,\r\n  title: 'Button Combined',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Combined',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n    color: 'primary',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/button/icon-button/icon-button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: 'info',\r\n    color: 'secondary',\r\n    variant: 'stroked',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/icon-button works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<IconButtonComponent>",
                    "defaultValue": "{\r\n  component: IconButtonComponent,\r\n  title: 'Button Icon',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: 'info',\r\n    color: 'secondary',\r\n    variant:'raised'\r\n  },\r\n}"
                }
            ],
            "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/sample-buttons works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SampleButtonsComponent>",
                    "defaultValue": "{\r\n  component: SampleButtonsComponent,\r\n  title: 'Button',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/form/boolean-input/boolean-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/boolean-input works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BooleanInputComponent>",
                    "defaultValue": "{\r\n  component: BooleanInputComponent,\r\n  title: 'Input Boolean',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/form/common-input/common-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: '',\r\n    label: '',\r\n    error: '',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/common-input works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CommonInputComponent>",
                    "defaultValue": "{\r\n  component: CommonInputComponent,\r\n  title: 'CommonInputComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: '',\r\n    label: '',\r\n    error: '',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/form/date-input/date-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/date-input works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateInputComponent>",
                    "defaultValue": "{\r\n  component: DateInputComponent,\r\n  title: 'Input Date',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/form/date-picker/date-picker.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/date-input works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DatePickerComponent>",
                    "defaultValue": "{\r\n  component: DatePickerComponent,\r\n  title: 'Input DatePicker',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    name: 'name',\r\n    autocomplete: 'off',\r\n    color: 'warn',\r\n    label: 'Date of birth',\r\n    icon: 'info',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/form/input/input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: '',\r\n    value: '',\r\n    type: 'text',\r\n    autocomplete: 'on',\r\n    color: 'primary',\r\n    label: 'Input Label',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/input works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\r\n  component: InputComponent,\r\n  title: 'Input',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: '',\r\n    value: '',\r\n    type: 'text',\r\n    autocomplete: 'on',\r\n    color: 'primary',\r\n    label: 'Input Label',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/form/number-input/number-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    autocomplete: 'off',\r\n    color: 'primary',\r\n    label: 'Age',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const inputElement = canvas.getByLabelText(/Age/gi);\r\n    expect(inputElement).toBeTruthy();\r\n    userEvent.type(inputElement, '12345');\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NumberInputComponent>",
                    "defaultValue": "{\r\n  component: NumberInputComponent,\r\n  title: 'Input Number',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    color: 'accent',\r\n    label: 'Input Label',\r\n    variant: 'basic',\r\n    icon: '123',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/form/search-input/search-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/search-input works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SearchInputComponent>",
                    "defaultValue": "{\r\n  component: SearchInputComponent,\r\n  title: 'SearchInputComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/form/select-input/select-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    name: 'category',\r\n    autocomplete: 'off',\r\n    color: 'primary',\r\n    label: 'category',\r\n    variant: 'basic',\r\n    icon: 'category',\r\n    options: [\r\n      { icon: 'info', value: 'A 1' },\r\n      { icon: 'info', value: 'B 1' },\r\n      { icon: 'info', value: 'C 1' },\r\n      { icon: 'info', value: 'D 1' },\r\n      { icon: 'info', value: 'E 1' },\r\n      { icon: 'info', value: 'F 1' },\r\n      { icon: 'info', value: 'G 1' },\r\n      { icon: 'info', value: 'H 1' },\r\n      {\r\n        icon: 'info',\r\n        value: 'Very long option. Very long option . Very long option',\r\n      },\r\n      { icon: 'info', value: 'I 1' },\r\n      { icon: 'info', value: 'J 1' },\r\n      { icon: 'info', value: 'K 1 ' },\r\n      { icon: 'info', value: 'K 1' },\r\n    ],\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByLabelText(/Category/gi)).toBeTruthy();\r\n    const elem = canvas.getByLabelText(/Category/gi);\r\n    userEvent.click(elem);\r\n\r\n    const option1 = canvas.getByTestId('B 1');\r\n\r\n    userEvent.click(option1, { delay: 200 });\r\n\r\n    // userEvent.selectOptions(elem, 'Option 1');\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectInputComponent>",
                    "defaultValue": "{\r\n  component: SelectInputComponent,\r\n  title: 'Input Select',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    name: 'category',\r\n    autocomplete: 'off',\r\n    color: 'primary',\r\n    label: 'category',\r\n    variant: 'basic',\r\n    icon: 'category',\r\n    options: [\r\n      { icon: 'info', value: 'Option 1' },\r\n      { icon: 'info', value: 'Option 2' },\r\n      { icon: 'info', value: 'Option 3' },\r\n    ],\r\n  },\r\n}"
                }
            ],
            "libs/material/src/form/text-input/text-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    name: 'name',\r\n    autocomplete: 'off',\r\n    color: 'primary',\r\n    label: 'Name',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const inputElement = canvas.getByLabelText(/Name/gi);\r\n\r\n    expect(inputElement).toBeTruthy();\r\n\r\n    userEvent.type(inputElement, 'How you doing');\r\n    expect(canvas.getByText(/info/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextInputComponent>",
                    "defaultValue": "{\r\n  component: TextInputComponent,\r\n  title: 'Input Text',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    name: 'name',\r\n    autocomplete: 'off',\r\n    color: 'primary',\r\n    label: 'Input Label',\r\n    variant: 'basic',\r\n    icon: 'info',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/form/textarea/textarea.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/textarea works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextareaComponent>",
                    "defaultValue": "{\r\n  component: TextareaComponent,\r\n  title: 'TextareaComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/list/list-item/list-item.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: '',\r\n    color: 'primary',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/list-item works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ListItemComponent>",
                    "defaultValue": "{\r\n  component: ListItemComponent,\r\n  title: 'ListItemComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: '',\r\n    color: 'primary',\r\n    icon: 'info',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/micro/icon/icon.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    fill: '',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/icon works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<IconComponent>",
                    "defaultValue": "{\r\n  component: IconComponent,\r\n  title: 'IconComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    fill: '',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: '',\r\n    icon: 'info',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/nav-list-item works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavListItemComponent>",
                    "defaultValue": "{\r\n  component: NavListItemComponent,\r\n  title: 'NavListItemComponent',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [RouterModule.forChild([])],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: '',\r\n    icon: 'info',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/tab/tab-button/tab-button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'tab',\r\n    borderPosition: 'bottom',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/tab-button works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabButtonComponent>",
                    "defaultValue": "{\r\n  component: TabButtonComponent,\r\n  title: 'TabButtonComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    variant: 'tab',\r\n    borderPosition: 'bottom',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/table/paginator/paginator.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    pageLengthOptions: [10, 20, 30],\r\n    itemCount: 100,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/Showing 10 of 100 items/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PaginatorComponent>",
                    "defaultValue": "{\r\n  component: PaginatorComponent,\r\n  title: 'PaginatorComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    pageLengthOptions: [10, 20, 30],\r\n    itemCount: 100,\r\n  },\r\n}"
                }
            ],
            "libs/material/src/api/types.ts": [
                {
                    "name": "ListOfDays",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n]"
                },
                {
                    "name": "ListOfMonths",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n]"
                }
            ]
        },
        "groupedFunctions": {
            "libs/material/src/api/month-table.ts": [
                {
                    "name": "monthTable",
                    "file": "libs/material/src/api/month-table.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Return 6weeks</p>\n",
                    "args": [
                        {
                            "name": "years",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 33,
                                "end": 38,
                                "flags": 8388608,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "years"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 27,
                                "end": 32,
                                "flags": 8388608,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 50,
                                "end": 55,
                                "flags": 8388608,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "month"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 44,
                                "end": 49,
                                "flags": 8388608,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 61,
                                "end": 68,
                                "flags": 8388608,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "libs/material/src/api/animations.ts": [
                {
                    "name": "slideFromRightOnEnter",
                    "file": "libs/material/src/api/animations.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/material/src/api/types.ts": [
                {
                    "name": "BadgePosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top-right\" | \"top-left\" | \"bottom-left\" | \"bottom-right\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"regular\" | \"big\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ButtonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"button\" | \"icon-button\" | \"combined-button\" | \"tab-button\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ButttonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"stroked\" | \"inbox\" | \"tab\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "Color",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"accent\" | \"warn\" | \"red\" | \"green\" | \"black\" | \"white\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "Day",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"Sunday\" | \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "DayNum",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "Direction",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top\" | \"right\" | \"bottom\" | \"left\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "Hour",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "InputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"textarea\" | \"password\" | \"number\" | \"boolean\" | \"date\" | \"select\" | \"multi-select\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "InputVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ButttonVariant",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "Minute",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\" | \"25\" | \"26\" | \"27\" | \"28\" | \"29\" | \"30\" | \"31\" | \"32\" | \"33\" | \"34\" | \"35\" | \"36\" | \"37\" | \"38\" | \"39\" | \"40\" | \"41\" | \"42\" | \"43\" | \"44\" | \"45\" | \"46\" | \"47\" | \"48\" | \"49\" | \"50\" | \"51\" | \"52\" | \"53\" | \"54\" | \"55\" | \"56\" | \"57\" | \"58\" | \"59\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "MonthNames",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"January\" | \"February\" | \"March\" | \"April\" | \"May\" | \"June\" | \"July\" | \"August\" | \"September\" | \"October\" | \"November\" | \"December\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "MonthNum",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"0\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | number",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "PageEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                },
                {
                    "name": "SearchEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                },
                {
                    "name": "SelectOption",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                },
                {
                    "name": "SortEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "libs/material/src/api/icon.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"signature\" | \"10k\" | \"10mp\" | \"11mp\" | \"123\" | \"12mp\" | \"13mp\" | \"14mp\" | \"15mp\" | \"16mp\" | \"17mp\" | \"18_up_rating\" | \"18mp\" | \"19mp\" | \"1k_plus\" | \"1k\" | \"1x_mobiledata\" | \"20mp\" | \"21mp\" | \"22mp\" | \"23mp\" | \"24mp\" | \"2k_plus\" | \"2k\" | \"2mp\" | \"30fps_select\" | \"30fps\" | \"360\" | \"3d_rotation\" | \"3g_mobiledata\" | \"3k_plus\" | \"3k\" | \"3mp\" | \"3p\" | \"4g_mobiledata\" | \"4g_plus_mobiledata\" | \"4k_plus\" | \"4k\" | \"4mp\" | \"5g\" | \"5k_plus\" | \"5k\" | \"5mp\" | \"6_ft_apart\" | \"60fps_select\" | \"60fps\" | \"6k_plus\" | \"6k\" | \"6mp\" | \"7k_plus\" | \"7k\" | \"7mp\" | \"8k_plus\" | \"8k\" | \"8mp\" | \"9k_plus\" | \"9k\" | \"9mp\" | \"abc\" | \"ac_unit\" | \"access_alarm\" | \"access_alarms\" | \"access_time_filled\" | \"access_time\" | \"accessibility_new\" | \"accessibility\" | \"accessible_forward\" | \"accessible\" | \"account_balance_wallet\" | \"account_balance\" | \"account_box\" | \"account_circle\" | \"account_tree\" | \"ad_units\" | \"adb\" | \"add_a_photo\" | \"add_alarm\" | \"add_alert\" | \"add_box\" | \"add_business\" | \"add_card\" | \"add_chart\" | \"add_circle_outline\" | \"add_circle\" | \"add_comment\" | \"add_home_work\" | \"add_home\" | \"add_ic_call\" | \"add_link\" | \"add_location_alt\" | \"add_location\" | \"add_moderator\" | \"add_photo_alternate\" | \"add_reaction\" | \"add_road\" | \"add_shopping_cart\" | \"add_task\" | \"add_to_drive\" | \"add_to_home_screen\" | \"add_to_photos\" | \"add_to_queue\" | \"add\" | \"addchart\" | \"adf_scanner\" | \"adjust\" | \"admin_panel_settings\" | \"ads_click\" | \"agriculture\" | \"air\" | \"airline_seat_flat_angled\" | \"airline_seat_flat\" | \"airline_seat_individual_suite\" | \"airline_seat_legroom_extra\" | \"airline_seat_legroom_normal\" | \"airline_seat_legroom_reduced\" | \"airline_seat_recline_extra\" | \"airline_seat_recline_normal\" | \"airline_stops\" | \"airlines\" | \"airplane_ticket\" | \"airplanemode_active\" | \"airplanemode_inactive\" | \"airplay\" | \"airport_shuttle\" | \"alarm_add\" | \"alarm_off\" | \"alarm_on\" | \"alarm\" | \"album\" | \"align_horizontal_center\" | \"align_horizontal_left\" | \"align_horizontal_right\" | \"align_vertical_bottom\" | \"align_vertical_center\" | \"align_vertical_top\" | \"all_inbox\" | \"all_inclusive\" | \"all_out\" | \"alt_route\" | \"alternate_email\" | \"analytics\" | \"anchor\" | \"android\" | \"animation\" | \"announcement\" | \"aod\" | \"apartment\" | \"api\" | \"app_blocking\" | \"app_registration\" | \"app_settings_alt\" | \"app_shortcut\" | \"approval\" | \"apps_outage\" | \"apps\" | \"architecture\" | \"archive\" | \"area_chart\" | \"arrow_back_ios_new\" | \"arrow_back_ios\" | \"arrow_back\" | \"arrow_circle_down\" | \"arrow_circle_left\" | \"arrow_circle_right\" | \"arrow_circle_up\" | \"arrow_downward\" | \"arrow_drop_down_circle\" | \"arrow_drop_down\" | \"arrow_drop_up\" | \"arrow_forward_ios\" | \"arrow_forward\" | \"arrow_left\" | \"arrow_outward\" | \"arrow_right_alt\" | \"arrow_right\" | \"arrow_upward\" | \"art_track\" | \"article\" | \"aspect_ratio\" | \"assessment\" | \"assignment_ind\" | \"assignment_late\" | \"assignment_return\" | \"assignment_returned\" | \"assignment_turned_in\" | \"assignment\" | \"assist_walker\" | \"assistant_direction\" | \"assistant_photo\" | \"assistant\" | \"assured_workload\" | \"atm\" | \"attach_email\" | \"attach_file\" | \"attach_money\" | \"attachment\" | \"attractions\" | \"attribution\" | \"audio_file\" | \"audiotrack\" | \"auto_awesome_mosaic\" | \"auto_awesome_motion\" | \"auto_awesome\" | \"auto_delete\" | \"auto_fix_high\" | \"auto_fix_normal\" | \"auto_fix_off\" | \"auto_graph\" | \"auto_mode\" | \"auto_stories\" | \"autofps_select\" | \"autorenew\" | \"av_timer\" | \"baby_changing_station\" | \"back_hand\" | \"backpack\" | \"backspace\" | \"backup_table\" | \"backup\" | \"badge\" | \"bakery_dining\" | \"balance\" | \"balcony\" | \"ballot\" | \"bar_chart\" | \"batch_prediction\" | \"bathroom\" | \"bathtub\" | \"battery_0_bar\" | \"battery_1_bar\" | \"battery_2_bar\" | \"battery_3_bar\" | \"battery_4_bar\" | \"battery_5_bar\" | \"battery_6_bar\" | \"battery_alert\" | \"battery_charging_full\" | \"battery_full\" | \"battery_saver\" | \"battery_std\" | \"battery_unknown\" | \"beach_access\" | \"bed\" | \"bedroom_baby\" | \"bedroom_child\" | \"bedroom_parent\" | \"bedtime_off\" | \"bedtime\" | \"beenhere\" | \"bento\" | \"bike_scooter\" | \"biotech\" | \"blender\" | \"blind\" | \"blinds_closed\" | \"blinds\" | \"block\" | \"bloodtype\" | \"bluetooth_audio\" | \"bluetooth_connected\" | \"bluetooth_disabled\" | \"bluetooth_drive\" | \"bluetooth_searching\" | \"bluetooth\" | \"blur_circular\" | \"blur_linear\" | \"blur_off\" | \"blur_on\" | \"bolt\" | \"book_online\" | \"book\" | \"bookmark_add\" | \"bookmark_added\" | \"bookmark_border\" | \"bookmark_remove\" | \"bookmark\" | \"bookmarks\" | \"border_all\" | \"border_bottom\" | \"border_clear\" | \"border_color\" | \"border_horizontal\" | \"border_inner\" | \"border_left\" | \"border_outer\" | \"border_right\" | \"border_style\" | \"border_top\" | \"border_vertical\" | \"boy\" | \"branding_watermark\" | \"breakfast_dining\" | \"brightness_1\" | \"brightness_2\" | \"brightness_3\" | \"brightness_4\" | \"brightness_5\" | \"brightness_6\" | \"brightness_7\" | \"brightness_auto\" | \"brightness_high\" | \"brightness_low\" | \"brightness_medium\" | \"broadcast_on_home\" | \"broadcast_on_personal\" | \"broken_image\" | \"browse_gallery\" | \"browser_not_supported\" | \"browser_updated\" | \"brunch_dining\" | \"brush\" | \"bubble_chart\" | \"bug_report\" | \"build_circle\" | \"build\" | \"bungalow\" | \"burst_mode\" | \"bus_alert\" | \"business_center\" | \"business\" | \"cabin\" | \"cable\" | \"cached\" | \"cake\" | \"calculate\" | \"calendar_month\" | \"calendar_today\" | \"calendar_view_day\" | \"calendar_view_month\" | \"calendar_view_week\" | \"call_end\" | \"call_made\" | \"call_merge\" | \"call_missed_outgoing\" | \"call_missed\" | \"call_received\" | \"call_split\" | \"call_to_action\" | \"call\" | \"camera_alt\" | \"camera_enhance\" | \"camera_front\" | \"camera_indoor\" | \"camera_outdoor\" | \"camera_rear\" | \"camera_roll\" | \"camera\" | \"cameraswitch\" | \"campaign\" | \"cancel_presentation\" | \"cancel_schedule_send\" | \"cancel\" | \"candlestick_chart\" | \"car_crash\" | \"car_rental\" | \"car_repair\" | \"card_giftcard\" | \"card_membership\" | \"card_travel\" | \"carpenter\" | \"cases\" | \"casino\" | \"cast_connected\" | \"cast_for_education\" | \"cast\" | \"castle\" | \"catching_pokemon\" | \"category\" | \"celebration\" | \"cell_tower\" | \"cell_wifi\" | \"center_focus_strong\" | \"center_focus_weak\" | \"chair_alt\" | \"chair\" | \"chalet\" | \"change_circle\" | \"change_history\" | \"charging_station\" | \"chat_bubble_outline\" | \"chat_bubble\" | \"chat\" | \"check_box_outline_blank\" | \"check_box\" | \"check_circle_outline\" | \"check_circle\" | \"check\" | \"checklist_rtl\" | \"checklist\" | \"checkroom\" | \"chevron_left\" | \"chevron_right\" | \"child_care\" | \"child_friendly\" | \"chrome_reader_mode\" | \"church\" | \"circle_notifications\" | \"circle\" | \"class\" | \"clean_hands\" | \"cleaning_services\" | \"clear_all\" | \"clear\" | \"close_fullscreen\" | \"close\" | \"closed_caption_disabled\" | \"closed_caption_off\" | \"closed_caption\" | \"cloud_circle\" | \"cloud_done\" | \"cloud_download\" | \"cloud_off\" | \"cloud_queue\" | \"cloud_sync\" | \"cloud_upload\" | \"cloud\" | \"co_present\" | \"co2\" | \"code_off\" | \"code\" | \"coffee_maker\" | \"coffee\" | \"collections_bookmark\" | \"collections\" | \"color_lens\" | \"colorize\" | \"comment_bank\" | \"comment\" | \"comments_disabled\" | \"commit\" | \"commute\" | \"compare_arrows\" | \"compare\" | \"compass_calibration\" | \"compost\" | \"compress\" | \"computer\" | \"confirmation_number\" | \"connect_without_contact\" | \"connected_tv\" | \"connecting_airports\" | \"construction\" | \"contact_emergency\" | \"contact_mail\" | \"contact_page\" | \"contact_phone\" | \"contact_support\" | \"contactless\" | \"contacts\" | \"content_copy\" | \"content_cut\" | \"content_paste_go\" | \"content_paste_off\" | \"content_paste_search\" | \"content_paste\" | \"contrast\" | \"control_camera\" | \"control_point_duplicate\" | \"control_point\" | \"cookie\" | \"copy_all\" | \"copyright\" | \"coronavirus\" | \"corporate_fare\" | \"cottage\" | \"countertops\" | \"create_new_folder\" | \"create\" | \"credit_card_off\" | \"credit_card\" | \"credit_score\" | \"crib\" | \"crisis_alert\" | \"crop_16_9\" | \"crop_3_2\" | \"crop_5_4\" | \"crop_7_5\" | \"crop_din\" | \"crop_free\" | \"crop_landscape\" | \"crop_original\" | \"crop_portrait\" | \"crop_rotate\" | \"crop_square\" | \"crop\" | \"cruelty_free\" | \"css\" | \"currency_bitcoin\" | \"currency_exchange\" | \"currency_franc\" | \"currency_lira\" | \"currency_pound\" | \"currency_ruble\" | \"currency_rupee\" | \"currency_yen\" | \"currency_yuan\" | \"curtains_closed\" | \"curtains\" | \"cyclone\" | \"dangerous\" | \"dark_mode\" | \"dashboard_customize\" | \"dashboard\" | \"data_array\" | \"data_exploration\" | \"data_object\" | \"data_saver_off\" | \"data_saver_on\" | \"data_thresholding\" | \"data_usage\" | \"dataset_linked\" | \"dataset\" | \"date_range\" | \"deblur\" | \"deck\" | \"dehaze\" | \"delete_forever\" | \"delete_outline\" | \"delete_sweep\" | \"delete\" | \"delivery_dining\" | \"density_large\" | \"density_medium\" | \"density_small\" | \"departure_board\" | \"description\" | \"deselect\" | \"design_services\" | \"desk\" | \"desktop_access_disabled\" | \"desktop_mac\" | \"desktop_windows\" | \"details\" | \"developer_board_off\" | \"developer_board\" | \"developer_mode\" | \"device_hub\" | \"device_thermostat\" | \"device_unknown\" | \"devices_fold\" | \"devices_other\" | \"devices\" | \"dialer_sip\" | \"dialpad\" | \"diamond\" | \"difference\" | \"dining\" | \"dinner_dining\" | \"directions_bike\" | \"directions_boat_filled\" | \"directions_boat\" | \"directions_bus_filled\" | \"directions_bus\" | \"directions_car_filled\" | \"directions_car\" | \"directions_off\" | \"directions_railway_filled\" | \"directions_railway\" | \"directions_run\" | \"directions_subway_filled\" | \"directions_subway\" | \"directions_transit_filled\" | \"directions_transit\" | \"directions_walk\" | \"directions\" | \"dirty_lens\" | \"disabled_by_default\" | \"disabled_visible\" | \"disc_full\" | \"discount\" | \"display_settings\" | \"diversity_1\" | \"diversity_2\" | \"diversity_3\" | \"dns\" | \"do_disturb_alt\" | \"do_disturb_off\" | \"do_disturb_on\" | \"do_disturb\" | \"do_not_disturb_alt\" | \"do_not_disturb_off\" | \"do_not_disturb_on_total_silence\" | \"do_not_disturb_on\" | \"do_not_disturb\" | \"do_not_step\" | \"do_not_touch\" | \"dock\" | \"document_scanner\" | \"domain_add\" | \"domain_disabled\" | \"domain_verification\" | \"domain\" | \"done_all\" | \"done_outline\" | \"done\" | \"donut_large\" | \"donut_small\" | \"door_back\" | \"door_front\" | \"door_sliding\" | \"doorbell\" | \"double_arrow\" | \"downhill_skiing\" | \"download_done\" | \"download_for_offline\" | \"download\" | \"downloading\" | \"drafts\" | \"drag_handle\" | \"drag_indicator\" | \"draw\" | \"drive_eta\" | \"drive_file_move_rtl\" | \"drive_file_move\" | \"drive_file_rename_outline\" | \"drive_folder_upload\" | \"dry_cleaning\" | \"dry\" | \"duo\" | \"dvr\" | \"dynamic_feed\" | \"dynamic_form\" | \"e_mobiledata\" | \"earbuds_battery\" | \"earbuds\" | \"east\" | \"edgesensor_high\" | \"edgesensor_low\" | \"edit_attributes\" | \"edit_calendar\" | \"edit_location_alt\" | \"edit_location\" | \"edit_note\" | \"edit_notifications\" | \"edit_off\" | \"edit_road\" | \"edit\" | \"egg_alt\" | \"egg\" | \"eject\" | \"elderly_woman\" | \"elderly\" | \"electric_bike\" | \"electric_bolt\" | \"electric_car\" | \"electric_meter\" | \"electric_moped\" | \"electric_rickshaw\" | \"electric_scooter\" | \"electrical_services\" | \"elevator\" | \"email\" | \"emergency_recording\" | \"emergency_share\" | \"emergency\" | \"emoji_emotions\" | \"emoji_events\" | \"emoji_food_beverage\" | \"emoji_nature\" | \"emoji_objects\" | \"emoji_people\" | \"emoji_symbols\" | \"emoji_transportation\" | \"energy_savings_leaf\" | \"engineering\" | \"enhanced_encryption\" | \"equalizer\" | \"error_outline\" | \"error\" | \"escalator_warning\" | \"escalator\" | \"euro_symbol\" | \"euro\" | \"ev_station\" | \"event_available\" | \"event_busy\" | \"event_note\" | \"event_repeat\" | \"event_seat\" | \"event\" | \"exit_to_app\" | \"expand_circle_down\" | \"expand_less\" | \"expand_more\" | \"expand\" | \"explicit\" | \"explore_off\" | \"explore\" | \"exposure_neg_1\" | \"exposure_neg_2\" | \"exposure_plus_1\" | \"exposure_plus_2\" | \"exposure_zero\" | \"exposure\" | \"extension_off\" | \"extension\" | \"face_2\" | \"face_3\" | \"face_4\" | \"face_5\" | \"face_6\" | \"face_retouching_natural\" | \"face_retouching_off\" | \"face_unlock\" | \"face\" | \"fact_check\" | \"factory\" | \"family_restroom\" | \"fast_forward\" | \"fast_rewind\" | \"fastfood\" | \"favorite_border\" | \"favorite\" | \"fax\" | \"featured_play_list\" | \"featured_video\" | \"feed\" | \"feedback\" | \"female\" | \"fence\" | \"festival\" | \"fiber_dvr\" | \"fiber_manual_record\" | \"fiber_new\" | \"fiber_pin\" | \"fiber_smart_record\" | \"file_copy\" | \"file_download_done\" | \"file_download_off\" | \"file_download\" | \"file_open\" | \"file_present\" | \"file_upload\" | \"filter_1\" | \"filter_2\" | \"filter_3\" | \"filter_4\" | \"filter_5\" | \"filter_6\" | \"filter_7\" | \"filter_8\" | \"filter_9_plus\" | \"filter_9\" | \"filter_alt_off\" | \"filter_alt\" | \"filter_b_and_w\" | \"filter_center_focus\" | \"filter_drama\" | \"filter_frames\" | \"filter_hdr\" | \"filter_list_off\" | \"filter_list\" | \"filter_none\" | \"filter_tilt_shift\" | \"filter_vintage\" | \"filter\" | \"find_in_page\" | \"find_replace\" | \"fingerprint\" | \"fire_extinguisher\" | \"fire_hydrant_alt\" | \"fire_truck\" | \"fireplace\" | \"first_page\" | \"fit_screen\" | \"fitbit\" | \"fitness_center\" | \"flag_circle\" | \"flag\" | \"flaky\" | \"flare\" | \"flash_auto\" | \"flash_off\" | \"flash_on\" | \"flashlight_off\" | \"flashlight_on\" | \"flatware\" | \"flight_class\" | \"flight_land\" | \"flight_takeoff\" | \"flight\" | \"flip_camera_android\" | \"flip_camera_ios\" | \"flip_to_back\" | \"flip_to_front\" | \"flip\" | \"flood\" | \"fluorescent\" | \"flutter_dash\" | \"fmd_bad\" | \"fmd_good\" | \"folder_copy\" | \"folder_delete\" | \"folder_off\" | \"folder_open\" | \"folder_shared\" | \"folder_special\" | \"folder_zip\" | \"folder\" | \"follow_the_signs\" | \"font_download_off\" | \"font_download\" | \"food_bank\" | \"forest\" | \"fork_left\" | \"fork_right\" | \"format_align_center\" | \"format_align_justify\" | \"format_align_left\" | \"format_align_right\" | \"format_bold\" | \"format_clear\" | \"format_color_fill\" | \"format_color_reset\" | \"format_color_text\" | \"format_indent_decrease\" | \"format_indent_increase\" | \"format_italic\" | \"format_line_spacing\" | \"format_list_bulleted\" | \"format_list_numbered_rtl\" | \"format_list_numbered\" | \"format_overline\" | \"format_paint\" | \"format_quote\" | \"format_shapes\" | \"format_size\" | \"format_strikethrough\" | \"format_textdirection_l_to_r\" | \"format_textdirection_r_to_l\" | \"format_underlined\" | \"fort\" | \"forum\" | \"forward_10\" | \"forward_30\" | \"forward_5\" | \"forward_to_inbox\" | \"forward\" | \"foundation\" | \"free_breakfast\" | \"free_cancellation\" | \"front_hand\" | \"fullscreen_exit\" | \"fullscreen\" | \"functions\" | \"g_mobiledata\" | \"g_translate\" | \"gamepad\" | \"games\" | \"garage\" | \"gas_meter\" | \"gavel\" | \"generating_tokens\" | \"gesture\" | \"get_app\" | \"gif_box\" | \"gif\" | \"girl\" | \"gite\" | \"golf_course\" | \"gpp_bad\" | \"gpp_good\" | \"gpp_maybe\" | \"gps_fixed\" | \"gps_not_fixed\" | \"gps_off\" | \"grade\" | \"gradient\" | \"grading\" | \"grain\" | \"graphic_eq\" | \"grass\" | \"grid_3x3\" | \"grid_4x4\" | \"grid_goldenratio\" | \"grid_off\" | \"grid_on\" | \"grid_view\" | \"group_add\" | \"group_off\" | \"group_remove\" | \"group_work\" | \"group\" | \"groups_2\" | \"groups_3\" | \"groups\" | \"h_mobiledata\" | \"h_plus_mobiledata\" | \"hail\" | \"handshake\" | \"handyman\" | \"hardware\" | \"hd\" | \"hdr_auto_select\" | \"hdr_auto\" | \"hdr_enhanced_select\" | \"hdr_off_select\" | \"hdr_off\" | \"hdr_on_select\" | \"hdr_on\" | \"hdr_plus\" | \"hdr_strong\" | \"hdr_weak\" | \"headphones_battery\" | \"headphones\" | \"headset_mic\" | \"headset_off\" | \"headset\" | \"healing\" | \"health_and_safety\" | \"hearing_disabled\" | \"hearing\" | \"heart_broken\" | \"heat_pump\" | \"height\" | \"help_center\" | \"help_outline\" | \"help\" | \"hevc\" | \"hexagon\" | \"hide_image\" | \"hide_source\" | \"high_quality\" | \"highlight_alt\" | \"highlight_off\" | \"highlight\" | \"hiking\" | \"history_edu\" | \"history_toggle_off\" | \"history\" | \"hive\" | \"hls_off\" | \"hls\" | \"holiday_village\" | \"home_max\" | \"home_mini\" | \"home_repair_service\" | \"home_work\" | \"home\" | \"horizontal_distribute\" | \"horizontal_rule\" | \"horizontal_split\" | \"hot_tub\" | \"hotel_class\" | \"hotel\" | \"hourglass_bottom\" | \"hourglass_disabled\" | \"hourglass_empty\" | \"hourglass_full\" | \"hourglass_top\" | \"house_siding\" | \"house\" | \"houseboat\" | \"how_to_reg\" | \"how_to_vote\" | \"html\" | \"http\" | \"https\" | \"hub\" | \"hvac\" | \"ice_skating\" | \"icecream\" | \"image_aspect_ratio\" | \"image_not_supported\" | \"image_search\" | \"image\" | \"imagesearch_roller\" | \"import_contacts\" | \"import_export\" | \"important_devices\" | \"inbox\" | \"incomplete_circle\" | \"indeterminate_check_box\" | \"info_outline\" | \"info\" | \"input\" | \"insert_chart_outlined\" | \"insert_chart\" | \"insert_comment\" | \"insert_drive_file\" | \"insert_emoticon\" | \"insert_invitation\" | \"insert_link\" | \"insert_page_break\" | \"insert_photo\" | \"insights\" | \"install_desktop\" | \"install_mobile\" | \"integration_instructions\" | \"interests\" | \"interpreter_mode\" | \"inventory_2\" | \"inventory\" | \"invert_colors_off\" | \"invert_colors\" | \"ios_share\" | \"iron\" | \"iso\" | \"javascript\" | \"join_full\" | \"join_inner\" | \"join_left\" | \"join_right\" | \"kayaking\" | \"kebab_dining\" | \"key_off\" | \"key\" | \"keyboard_alt\" | \"keyboard_arrow_down\" | \"keyboard_arrow_left\" | \"keyboard_arrow_right\" | \"keyboard_arrow_up\" | \"keyboard_backspace\" | \"keyboard_capslock\" | \"keyboard_command_key\" | \"keyboard_control_key\" | \"keyboard_double_arrow_down\" | \"keyboard_double_arrow_left\" | \"keyboard_double_arrow_right\" | \"keyboard_double_arrow_up\" | \"keyboard_hide\" | \"keyboard_option_key\" | \"keyboard_return\" | \"keyboard_tab\" | \"keyboard_voice\" | \"keyboard\" | \"king_bed\" | \"kitchen\" | \"kitesurfing\" | \"label_important_outline\" | \"label_important\" | \"label_off\" | \"label\" | \"lan\" | \"landscape\" | \"landslide\" | \"language\" | \"laptop_chromebook\" | \"laptop_mac\" | \"laptop_windows\" | \"laptop\" | \"last_page\" | \"launch\" | \"layers_clear\" | \"layers\" | \"leaderboard\" | \"leak_add\" | \"leak_remove\" | \"legend_toggle\" | \"lens_blur\" | \"lens\" | \"library_add_check\" | \"library_add\" | \"library_books\" | \"library_music\" | \"light_mode\" | \"light\" | \"lightbulb_circle\" | \"lightbulb_outline\" | \"lightbulb\" | \"line_axis\" | \"line_style\" | \"line_weight\" | \"linear_scale\" | \"link_off\" | \"link\" | \"linked_camera\" | \"liquor\" | \"list_alt\" | \"list\" | \"live_help\" | \"live_tv\" | \"living\" | \"local_activity\" | \"local_airport\" | \"local_atm\" | \"local_bar\" | \"local_cafe\" | \"local_car_wash\" | \"local_convenience_store\" | \"local_dining\" | \"local_drink\" | \"local_fire_department\" | \"local_florist\" | \"local_gas_station\" | \"local_grocery_store\" | \"local_hospital\" | \"local_hotel\" | \"local_laundry_service\" | \"local_library\" | \"local_mall\" | \"local_movies\" | \"local_offer\" | \"local_parking\" | \"local_pharmacy\" | \"local_phone\" | \"local_pizza\" | \"local_play\" | \"local_police\" | \"local_post_office\" | \"local_printshop\" | \"local_see\" | \"local_shipping\" | \"local_taxi\" | \"location_city\" | \"location_disabled\" | \"location_off\" | \"location_on\" | \"location_searching\" | \"lock_clock\" | \"lock_open\" | \"lock_outline\" | \"lock_person\" | \"lock_reset\" | \"lock\" | \"login\" | \"logo_dev\" | \"logout\" | \"looks_3\" | \"looks_4\" | \"looks_5\" | \"looks_6\" | \"looks_one\" | \"looks_two\" | \"looks\" | \"loop\" | \"loupe\" | \"low_priority\" | \"loyalty\" | \"lte_mobiledata\" | \"lte_plus_mobiledata\" | \"luggage\" | \"lunch_dining\" | \"lyrics\" | \"macro_off\" | \"mail_lock\" | \"mail_outline\" | \"mail\" | \"male\" | \"man_2\" | \"man_3\" | \"man_4\" | \"man\" | \"manage_accounts\" | \"manage_history\" | \"manage_search\" | \"map\" | \"maps_home_work\" | \"maps_ugc\" | \"margin\" | \"mark_as_unread\" | \"mark_chat_read\" | \"mark_chat_unread\" | \"mark_email_read\" | \"mark_email_unread\" | \"mark_unread_chat_alt\" | \"markunread_mailbox\" | \"markunread\" | \"masks\" | \"maximize\" | \"media_bluetooth_off\" | \"media_bluetooth_on\" | \"mediation\" | \"medical_information\" | \"medical_services\" | \"medication_liquid\" | \"medication\" | \"meeting_room\" | \"memory\" | \"menu_book\" | \"menu_open\" | \"menu\" | \"merge_type\" | \"merge\" | \"message\" | \"mic_external_off\" | \"mic_external_on\" | \"mic_none\" | \"mic_off\" | \"mic\" | \"microwave\" | \"military_tech\" | \"minimize\" | \"minor_crash\" | \"miscellaneous_services\" | \"missed_video_call\" | \"mms\" | \"mobile_friendly\" | \"mobile_off\" | \"mobile_screen_share\" | \"mobiledata_off\" | \"mode_comment\" | \"mode_edit_outline\" | \"mode_edit\" | \"mode_fan_off\" | \"mode_night\" | \"mode_of_travel\" | \"mode_standby\" | \"mode\" | \"model_training\" | \"monetization_on\" | \"money_off_csred\" | \"money_off\" | \"money\" | \"monitor_heart\" | \"monitor_weight\" | \"monitor\" | \"monochrome_photos\" | \"mood_bad\" | \"mood\" | \"moped\" | \"more_horiz\" | \"more_time\" | \"more_vert\" | \"more\" | \"mosque\" | \"motion_photos_auto\" | \"motion_photos_off\" | \"motion_photos_on\" | \"motion_photos_pause\" | \"motion_photos_paused\" | \"mouse\" | \"move_down\" | \"move_to_inbox\" | \"move_up\" | \"movie_creation\" | \"movie_filter\" | \"movie\" | \"moving\" | \"mp\" | \"multiline_chart\" | \"multiple_stop\" | \"museum\" | \"music_note\" | \"music_off\" | \"music_video\" | \"my_location\" | \"nat\" | \"nature_people\" | \"nature\" | \"navigate_before\" | \"navigate_next\" | \"navigation\" | \"near_me_disabled\" | \"near_me\" | \"nearby_error\" | \"nearby_off\" | \"nest_cam_wired_stand\" | \"network_cell\" | \"network_check\" | \"network_locked\" | \"network_ping\" | \"network_wifi_1_bar\" | \"network_wifi_2_bar\" | \"network_wifi_3_bar\" | \"network_wifi\" | \"new_label\" | \"new_releases\" | \"newspaper\" | \"next_plan\" | \"next_week\" | \"nfc\" | \"night_shelter\" | \"nightlife\" | \"nightlight_round\" | \"nightlight\" | \"nights_stay\" | \"no_accounts\" | \"no_adult_content\" | \"no_backpack\" | \"no_cell\" | \"no_crash\" | \"no_drinks\" | \"no_encryption_gmailerrorred\" | \"no_encryption\" | \"no_flash\" | \"no_food\" | \"no_luggage\" | \"no_meals\" | \"no_meeting_room\" | \"no_photography\" | \"no_sim\" | \"no_stroller\" | \"no_transfer\" | \"noise_aware\" | \"noise_control_off\" | \"nordic_walking\" | \"north_east\" | \"north_west\" | \"north\" | \"not_accessible\" | \"not_interested\" | \"not_listed_location\" | \"not_started\" | \"note_add\" | \"note_alt\" | \"note\" | \"notes\" | \"notification_add\" | \"notification_important\" | \"notifications_active\" | \"notifications_none\" | \"notifications_off\" | \"notifications_paused\" | \"notifications\" | \"numbers\" | \"offline_bolt\" | \"offline_pin\" | \"offline_share\" | \"oil_barrel\" | \"on_device_training\" | \"ondemand_video\" | \"online_prediction\" | \"opacity\" | \"open_in_browser\" | \"open_in_full\" | \"open_in_new_off\" | \"open_in_new\" | \"open_with\" | \"other_houses\" | \"outbound\" | \"outbox\" | \"outdoor_grill\" | \"outlet\" | \"outlined_flag\" | \"output\" | \"padding\" | \"pages\" | \"pageview\" | \"paid\" | \"palette\" | \"pan_tool_alt\" | \"pan_tool\" | \"panorama_fish_eye\" | \"panorama_horizontal_select\" | \"panorama_horizontal\" | \"panorama_photosphere_select\" | \"panorama_photosphere\" | \"panorama_vertical_select\" | \"panorama_vertical\" | \"panorama_wide_angle_select\" | \"panorama_wide_angle\" | \"panorama\" | \"paragliding\" | \"park\" | \"party_mode\" | \"password\" | \"pattern\" | \"pause_circle_filled\" | \"pause_circle_outline\" | \"pause_circle\" | \"pause_presentation\" | \"pause\" | \"payment\" | \"payments\" | \"pedal_bike\" | \"pending_actions\" | \"pending\" | \"pentagon\" | \"people_alt\" | \"people_outline\" | \"people\" | \"percent\" | \"perm_camera_mic\" | \"perm_contact_calendar\" | \"perm_data_setting\" | \"perm_device_information\" | \"perm_identity\" | \"perm_media\" | \"perm_phone_msg\" | \"perm_scan_wifi\" | \"person_2\" | \"person_3\" | \"person_4\" | \"person_add_alt_1\" | \"person_add_alt\" | \"person_add_disabled\" | \"person_add\" | \"person_off\" | \"person_outline\" | \"person_pin_circle\" | \"person_pin\" | \"person_remove_alt_1\" | \"person_remove\" | \"person_search\" | \"person\" | \"personal_injury\" | \"personal_video\" | \"pest_control_rodent\" | \"pest_control\" | \"pets\" | \"phishing\" | \"phone_android\" | \"phone_bluetooth_speaker\" | \"phone_callback\" | \"phone_disabled\" | \"phone_enabled\" | \"phone_forwarded\" | \"phone_iphone\" | \"phone_locked\" | \"phone_missed\" | \"phone_paused\" | \"phone\" | \"phonelink_erase\" | \"phonelink_lock\" | \"phonelink_off\" | \"phonelink_ring\" | \"phonelink_setup\" | \"phonelink\" | \"photo_album\" | \"photo_camera_back\" | \"photo_camera_front\" | \"photo_camera\" | \"photo_filter\" | \"photo_library\" | \"photo_size_select_actual\" | \"photo_size_select_large\" | \"photo_size_select_small\" | \"photo\" | \"php\" | \"piano_off\" | \"piano\" | \"picture_as_pdf\" | \"picture_in_picture_alt\" | \"picture_in_picture\" | \"pie_chart_outline\" | \"pie_chart\" | \"pin_drop\" | \"pin_end\" | \"pin_invoke\" | \"pin\" | \"pinch\" | \"pivot_table_chart\" | \"pix\" | \"place\" | \"plagiarism\" | \"play_arrow\" | \"play_circle_filled\" | \"play_circle_outline\" | \"play_circle\" | \"play_disabled\" | \"play_for_work\" | \"play_lesson\" | \"playlist_add_check_circle\" | \"playlist_add_check\" | \"playlist_add_circle\" | \"playlist_add\" | \"playlist_play\" | \"playlist_remove\" | \"plumbing\" | \"plus_one\" | \"podcasts\" | \"point_of_sale\" | \"policy\" | \"poll\" | \"polyline\" | \"polymer\" | \"pool\" | \"portable_wifi_off\" | \"portrait\" | \"post_add\" | \"power_input\" | \"power_off\" | \"power_settings_new\" | \"power\" | \"precision_manufacturing\" | \"pregnant_woman\" | \"present_to_all\" | \"preview\" | \"price_change\" | \"price_check\" | \"print_disabled\" | \"print\" | \"priority_high\" | \"privacy_tip\" | \"private_connectivity\" | \"production_quantity_limits\" | \"propane_tank\" | \"propane\" | \"psychology_alt\" | \"psychology\" | \"public_off\" | \"public\" | \"publish\" | \"published_with_changes\" | \"punch_clock\" | \"push_pin\" | \"qr_code_2\" | \"qr_code_scanner\" | \"qr_code\" | \"query_builder\" | \"query_stats\" | \"question_answer\" | \"question_mark\" | \"queue_music\" | \"queue_play_next\" | \"queue\" | \"quickreply\" | \"quiz\" | \"r_mobiledata\" | \"radar\" | \"radio_button_checked\" | \"radio_button_unchecked\" | \"radio\" | \"railway_alert\" | \"ramen_dining\" | \"ramp_left\" | \"ramp_right\" | \"rate_review\" | \"raw_off\" | \"raw_on\" | \"read_more\" | \"real_estate_agent\" | \"receipt_long\" | \"receipt\" | \"recent_actors\" | \"recommend\" | \"record_voice_over\" | \"rectangle\" | \"recycling\" | \"redeem\" | \"redo\" | \"reduce_capacity\" | \"refresh\" | \"remember_me\" | \"remove_circle_outline\" | \"remove_circle\" | \"remove_done\" | \"remove_from_queue\" | \"remove_moderator\" | \"remove_red_eye\" | \"remove_road\" | \"remove_shopping_cart\" | \"remove\" | \"reorder\" | \"repartition\" | \"repeat_on\" | \"repeat_one_on\" | \"repeat_one\" | \"repeat\" | \"replay_10\" | \"replay_30\" | \"replay_5\" | \"replay_circle_filled\" | \"replay\" | \"reply_all\" | \"reply\" | \"report_gmailerrorred\" | \"report_off\" | \"report_problem\" | \"report\" | \"request_page\" | \"request_quote\" | \"reset_tv\" | \"restart_alt\" | \"restaurant_menu\" | \"restaurant\" | \"restore_from_trash\" | \"restore_page\" | \"restore\" | \"reviews\" | \"rice_bowl\" | \"ring_volume\" | \"rocket_launch\" | \"rocket\" | \"roller_shades_closed\" | \"roller_shades\" | \"roller_skating\" | \"roofing\" | \"room_preferences\" | \"room_service\" | \"room\" | \"rotate_90_degrees_ccw\" | \"rotate_90_degrees_cw\" | \"rotate_left\" | \"rotate_right\" | \"roundabout_left\" | \"roundabout_right\" | \"rounded_corner\" | \"route\" | \"router\" | \"rowing\" | \"rss_feed\" | \"rsvp\" | \"rtt\" | \"rule_folder\" | \"rule\" | \"run_circle\" | \"running_with_errors\" | \"rv_hookup\" | \"safety_check\" | \"safety_divider\" | \"sailing\" | \"sanitizer\" | \"satellite_alt\" | \"satellite\" | \"save_alt\" | \"save_as\" | \"save\" | \"saved_search\" | \"savings\" | \"scale\" | \"scanner\" | \"scatter_plot\" | \"schedule_send\" | \"schedule\" | \"schema\" | \"school\" | \"science\" | \"score\" | \"scoreboard\" | \"screen_lock_landscape\" | \"screen_lock_portrait\" | \"screen_lock_rotation\" | \"screen_rotation_alt\" | \"screen_rotation\" | \"screen_search_desktop\" | \"screen_share\" | \"screenshot_monitor\" | \"screenshot\" | \"scuba_diving\" | \"sd_card_alert\" | \"sd_card\" | \"sd_storage\" | \"sd\" | \"search_off\" | \"search\" | \"security_update_good\" | \"security_update_warning\" | \"security_update\" | \"security\" | \"segment\" | \"select_all\" | \"self_improvement\" | \"sell\" | \"send_and_archive\" | \"send_time_extension\" | \"send_to_mobile\" | \"send\" | \"sensor_door\" | \"sensor_occupied\" | \"sensor_window\" | \"sensors_off\" | \"sensors\" | \"sentiment_dissatisfied\" | \"sentiment_neutral\" | \"sentiment_satisfied_alt\" | \"sentiment_satisfied\" | \"sentiment_very_dissatisfied\" | \"sentiment_very_satisfied\" | \"set_meal\" | \"settings_accessibility\" | \"settings_applications\" | \"settings_backup_restore\" | \"settings_bluetooth\" | \"settings_brightness\" | \"settings_cell\" | \"settings_ethernet\" | \"settings_input_antenna\" | \"settings_input_component\" | \"settings_input_composite\" | \"settings_input_hdmi\" | \"settings_input_svideo\" | \"settings_overscan\" | \"settings_phone\" | \"settings_power\" | \"settings_remote\" | \"settings_suggest\" | \"settings_system_daydream\" | \"settings_voice\" | \"settings\" | \"severe_cold\" | \"shape_line\" | \"share_location\" | \"share\" | \"shield_moon\" | \"shield\" | \"shop_2\" | \"shop_two\" | \"shop\" | \"shopping_bag\" | \"shopping_basket\" | \"shopping_cart_checkout\" | \"shopping_cart\" | \"short_text\" | \"shortcut\" | \"show_chart\" | \"shower\" | \"shuffle_on\" | \"shuffle\" | \"shutter_speed\" | \"sick\" | \"sign_language\" | \"signal_cellular_0_bar\" | \"signal_cellular_4_bar\" | \"signal_cellular_alt_1_bar\" | \"signal_cellular_alt_2_bar\" | \"signal_cellular_alt\" | \"signal_cellular_connected_no_internet_0_bar\" | \"signal_cellular_connected_no_internet_4_bar\" | \"signal_cellular_no_sim\" | \"signal_cellular_nodata\" | \"signal_cellular_null\" | \"signal_cellular_off\" | \"signal_wifi_0_bar\" | \"signal_wifi_4_bar_lock\" | \"signal_wifi_4_bar\" | \"signal_wifi_bad\" | \"signal_wifi_connected_no_internet_4\" | \"signal_wifi_off\" | \"signal_wifi_statusbar_4_bar\" | \"signal_wifi_statusbar_connected_no_internet_4\" | \"signal_wifi_statusbar_null\" | \"signpost\" | \"sim_card_alert\" | \"sim_card_download\" | \"sim_card\" | \"single_bed\" | \"sip\" | \"skateboarding\" | \"skip_next\" | \"skip_previous\" | \"sledding\" | \"slideshow\" | \"slow_motion_video\" | \"smart_button\" | \"smart_display\" | \"smart_screen\" | \"smart_toy\" | \"smartphone\" | \"smoke_free\" | \"smoking_rooms\" | \"sms_failed\" | \"sms\" | \"snippet_folder\" | \"snooze\" | \"snowboarding\" | \"snowmobile\" | \"snowshoeing\" | \"soap\" | \"social_distance\" | \"solar_power\" | \"sort_by_alpha\" | \"sort\" | \"sos\" | \"soup_kitchen\" | \"source\" | \"south_america\" | \"south_east\" | \"south_west\" | \"south\" | \"spa\" | \"space_bar\" | \"space_dashboard\" | \"spatial_audio_off\" | \"spatial_audio\" | \"spatial_tracking\" | \"speaker_group\" | \"speaker_notes_off\" | \"speaker_notes\" | \"speaker_phone\" | \"speaker\" | \"speed\" | \"spellcheck\" | \"splitscreen\" | \"spoke\" | \"sports_bar\" | \"sports_baseball\" | \"sports_basketball\" | \"sports_cricket\" | \"sports_esports\" | \"sports_football\" | \"sports_golf\" | \"sports_gymnastics\" | \"sports_handball\" | \"sports_hockey\" | \"sports_kabaddi\" | \"sports_martial_arts\" | \"sports_mma\" | \"sports_motorsports\" | \"sports_rugby\" | \"sports_score\" | \"sports_soccer\" | \"sports_tennis\" | \"sports_volleyball\" | \"sports\" | \"square_foot\" | \"square\" | \"ssid_chart\" | \"stacked_bar_chart\" | \"stacked_line_chart\" | \"stadium\" | \"stairs\" | \"star_border_purple500\" | \"star_border\" | \"star_half\" | \"star_outline\" | \"star_purple500\" | \"star_rate\" | \"star\" | \"stars\" | \"start\" | \"stay_current_landscape\" | \"stay_current_portrait\" | \"stay_primary_landscape\" | \"stay_primary_portrait\" | \"sticky_note_2\" | \"stop_circle\" | \"stop_screen_share\" | \"stop\" | \"storage\" | \"store_mall_directory\" | \"store\" | \"storefront\" | \"storm\" | \"straight\" | \"straighten\" | \"stream\" | \"streetview\" | \"strikethrough_s\" | \"stroller\" | \"style\" | \"subdirectory_arrow_left\" | \"subdirectory_arrow_right\" | \"subject\" | \"subscript\" | \"subscriptions\" | \"subtitles_off\" | \"subtitles\" | \"subway\" | \"summarize\" | \"superscript\" | \"supervised_user_circle\" | \"supervisor_account\" | \"support_agent\" | \"support\" | \"surfing\" | \"surround_sound\" | \"swap_calls\" | \"swap_horiz\" | \"swap_horizontal_circle\" | \"swap_vert\" | \"swap_vertical_circle\" | \"swipe_down_alt\" | \"swipe_down\" | \"swipe_left_alt\" | \"swipe_left\" | \"swipe_right_alt\" | \"swipe_right\" | \"swipe_up_alt\" | \"swipe_up\" | \"swipe_vertical\" | \"swipe\" | \"switch_access_shortcut_add\" | \"switch_access_shortcut\" | \"switch_account\" | \"switch_camera\" | \"switch_left\" | \"switch_right\" | \"switch_video\" | \"synagogue\" | \"sync_alt\" | \"sync_disabled\" | \"sync_lock\" | \"sync_problem\" | \"sync\" | \"system_security_update_good\" | \"system_security_update_warning\" | \"system_security_update\" | \"system_update_alt\" | \"system_update\" | \"tab_unselected\" | \"tab\" | \"table_bar\" | \"table_chart\" | \"table_restaurant\" | \"table_rows\" | \"table_view\" | \"tablet_android\" | \"tablet_mac\" | \"tablet\" | \"tag_faces\" | \"tag\" | \"takeout_dining\" | \"tap_and_play\" | \"tapas\" | \"task_alt\" | \"task\" | \"taxi_alert\" | \"temple_buddhist\" | \"temple_hindu\" | \"terminal\" | \"terrain\" | \"text_decrease\" | \"text_fields\" | \"text_format\" | \"text_increase\" | \"text_rotate_up\" | \"text_rotate_vertical\" | \"text_rotation_angledown\" | \"text_rotation_angleup\" | \"text_rotation_down\" | \"text_rotation_none\" | \"text_snippet\" | \"textsms\" | \"texture\" | \"theater_comedy\" | \"theaters\" | \"thermostat_auto\" | \"thermostat\" | \"thumb_down_alt\" | \"thumb_down_off_alt\" | \"thumb_down\" | \"thumb_up_alt\" | \"thumb_up_off_alt\" | \"thumb_up\" | \"thumbs_up_down\" | \"thunderstorm\" | \"time_to_leave\" | \"timelapse\" | \"timeline\" | \"timer_10_select\" | \"timer_10\" | \"timer_3_select\" | \"timer_3\" | \"timer_off\" | \"timer\" | \"tips_and_updates\" | \"tire_repair\" | \"title\" | \"toc\" | \"today\" | \"toggle_off\" | \"toggle_on\" | \"token\" | \"toll\" | \"tonality\" | \"topic\" | \"tornado\" | \"touch_app\" | \"tour\" | \"toys\" | \"track_changes\" | \"traffic\" | \"train\" | \"tram\" | \"transcribe\" | \"transfer_within_a_station\" | \"transform\" | \"transgender\" | \"transit_enterexit\" | \"translate\" | \"travel_explore\" | \"trending_down\" | \"trending_flat\" | \"trending_up\" | \"trip_origin\" | \"troubleshoot\" | \"try\" | \"tsunami\" | \"tty\" | \"tune\" | \"tungsten\" | \"turn_left\" | \"turn_right\" | \"turn_sharp_left\" | \"turn_sharp_right\" | \"turn_slight_left\" | \"turn_slight_right\" | \"turned_in_not\" | \"turned_in\" | \"tv_off\" | \"tv\" | \"two_wheeler\" | \"type_specimen\" | \"u_turn_left\" | \"u_turn_right\" | \"umbrella\" | \"unarchive\" | \"undo\" | \"unfold_less_double\" | \"unfold_less\" | \"unfold_more_double\" | \"unfold_more\" | \"unpublished\" | \"unsubscribe\" | \"upcoming\" | \"update_disabled\" | \"update\" | \"upgrade\" | \"upload_file\" | \"upload\" | \"usb_off\" | \"usb\" | \"vaccines\" | \"vape_free\" | \"vaping_rooms\" | \"verified_user\" | \"verified\" | \"vertical_align_bottom\" | \"vertical_align_center\" | \"vertical_align_top\" | \"vertical_distribute\" | \"vertical_shades_closed\" | \"vertical_shades\" | \"vertical_split\" | \"vibration\" | \"video_call\" | \"video_camera_back\" | \"video_camera_front\" | \"video_chat\" | \"video_file\" | \"video_label\" | \"video_library\" | \"video_settings\" | \"video_stable\" | \"videocam_off\" | \"videocam\" | \"videogame_asset_off\" | \"videogame_asset\" | \"view_agenda\" | \"view_array\" | \"view_carousel\" | \"view_column\" | \"view_comfy_alt\" | \"view_comfy\" | \"view_compact_alt\" | \"view_compact\" | \"view_cozy\" | \"view_day\" | \"view_headline\" | \"view_in_ar\" | \"view_kanban\" | \"view_list\" | \"view_module\" | \"view_quilt\" | \"view_sidebar\" | \"view_stream\" | \"view_timeline\" | \"view_week\" | \"vignette\" | \"villa\" | \"visibility_off\" | \"visibility\" | \"voice_chat\" | \"voice_over_off\" | \"voicemail\" | \"volcano\" | \"volume_down\" | \"volume_mute\" | \"volume_off\" | \"volume_up\" | \"volunteer_activism\" | \"vpn_key_off\" | \"vpn_key\" | \"vpn_lock\" | \"vrpano\" | \"wallet\" | \"wallpaper\" | \"warehouse\" | \"warning_amber\" | \"warning\" | \"wash\" | \"watch_later\" | \"watch_off\" | \"watch\" | \"water_damage\" | \"water_drop\" | \"water\" | \"waterfall_chart\" | \"waves\" | \"waving_hand\" | \"wb_auto\" | \"wb_cloudy\" | \"wb_incandescent\" | \"wb_iridescent\" | \"wb_shade\" | \"wb_sunny\" | \"wb_twilight\" | \"wc\" | \"web_asset_off\" | \"web_asset\" | \"web_stories\" | \"web\" | \"webhook\" | \"weekend\" | \"west\" | \"whatshot\" | \"wheelchair_pickup\" | \"where_to_vote\" | \"widgets\" | \"width_full\" | \"width_normal\" | \"width_wide\" | \"wifi_1_bar\" | \"wifi_2_bar\" | \"wifi_calling_3\" | \"wifi_calling\" | \"wifi_channel\" | \"wifi_find\" | \"wifi_lock\" | \"wifi_off\" | \"wifi_password\" | \"wifi_protected_setup\" | \"wifi_tethering_error\" | \"wifi_tethering_off\" | \"wifi_tethering\" | \"wifi\" | \"wind_power\" | \"window\" | \"wine_bar\" | \"woman_2\" | \"woman\" | \"work_history\" | \"work_off\" | \"work_outline\" | \"work\" | \"workspace_premium\" | \"workspaces\" | \"wrap_text\" | \"wrong_location\" | \"wysiwyg\" | \"yard\" | \"youtube_searched_for\" | \"zoom_in_map\" | \"zoom_in\" | \"zoom_out_map\" | \"zoom_out\"",
                    "file": "libs/material/src/api/icon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "libs/material/src/api/nav-item.ts": [
                {
                    "name": "NavItem",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/api/nav-item.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "libs/material/src/alert/alert.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AlertComponent>",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/app-auth/app-auth.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AppAuthComponent>",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/colors/colors.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorsComponent>",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/fonts/fonts.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FontsComponent>",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormComponent>",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/layout/layout.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LayoutComponent>",
                    "file": "libs/material/src/layout/layout.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/list/list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ListComponent>",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/menu/menu.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MenuComponent>",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/nav-list/nav-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavListComponent>",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/notification/notification.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NotificationComponent>",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/stepper/stepper.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StepperComponent>",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/sticky-notes/sticky-notes.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StickyNotesComponent>",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/tab/tab-container.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabContainerComponent>",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/table/table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "libs/material/src/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/toolbar/toolbar.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToolbarComponent>",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/button/button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/combined-button/combined-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CombinedButtonComponent>",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/icon-button/icon-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<IconButtonComponent>",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SampleButtonsComponent>",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/boolean-input/boolean-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BooleanInputComponent>",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/common-input/common-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CommonInputComponent>",
                    "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/date-input/date-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateInputComponent>",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/date-picker/date-picker.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DatePickerComponent>",
                    "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/input/input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/number-input/number-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NumberInputComponent>",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/search-input/search-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SearchInputComponent>",
                    "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/select-input/select-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectInputComponent>",
                    "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/text-input/text-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextInputComponent>",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/textarea/textarea.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextareaComponent>",
                    "file": "libs/material/src/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/list/list-item/list-item.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ListItemComponent>",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/micro/icon/icon.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<IconComponent>",
                    "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavListItemComponent>",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/tab/tab-button/tab-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabButtonComponent>",
                    "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/table/paginator/paginator.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PaginatorComponent>",
                    "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/tab/tab-container.component.ts": [
                {
                    "name": "TabContainerType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sidenav\" | \"tab\"",
                    "file": "libs/material/src/tab/tab-container.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "libs/material/src/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/animations.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "slideFromRightOnEnter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/base-ngrx-service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BaseNgrxService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/common-form-component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommonFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/common-table-component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommonTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/form-value.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FormValue",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/month-table.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "monthTable",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/api/types.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ListOfDays",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/types.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ListOfMonths",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppAuthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CombinedButtonComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/common-button/common-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommonButtonComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconButtonComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SampleButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FontsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BooleanInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/common-input/common-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommonInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-picker/date-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form-actions/form-actions.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FormActionsDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 6,
                "coverageCount": "1/15",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/search-input/search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/select-input/select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/layout/layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/layout/layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/layout/layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 7,
                "coverageCount": "1/14",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/badge/badge.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BadgeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/class-list/class-list.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ClassListDirective",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/focus/focus.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FocusDirective",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/micro/has-value/has-value.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "HasValueDirective",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/scroll-direction/scroll-direction.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ScrollDirectionDirective",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/set-attribute/set-attribute.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SetAttributeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/set-component-attribute/set-component-attribute.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SetComponentAttributeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/tooltip/tooltip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TooltipDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavListItemComponent",
                "coveragePercent": 8,
                "coverageCount": "1/12",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StickyNotesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-button/tab-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabButtonComponent",
                "coveragePercent": 7,
                "coverageCount": "1/13",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TabDirective",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/paginator/paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}