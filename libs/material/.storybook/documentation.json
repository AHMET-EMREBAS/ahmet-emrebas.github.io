{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "FormValue",
            "id": "class-FormValue-ad373ed9fd08eb8178db9f1df24bd631ce6f00cf32442098e307a047c3d76fcc160cf3813b024cf442cc35219b933a41fa322da64080649dc5da03e94cd84462",
            "file": "libs/material/src/api/form-value.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class FormValue<T = Record<string, any>, K extends keyof T = keyof T> {\r\n  private readonly value = new Map<K, T[K] | undefined>();\r\n\r\n  set(key: K, value: T[K]) {\r\n    this.value.set(key, value);\r\n  }\r\n\r\n  get(key: K): T[K] | undefined {\r\n    return this.value.get(key);\r\n  }\r\n\r\n  reset() {\r\n    this.value.clear();\r\n  }\r\n\r\n  formValue() {\r\n    const result: Partial<Record<K, T[K]>> = {};\r\n\r\n    for (const [key, value] of this.value) result[key] = value;\r\n\r\n    return result;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "value",
                    "defaultValue": "new Map<K, T[K] | undefined>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        121,
                        146
                    ]
                }
            ],
            "methods": [
                {
                    "name": "formValue",
                    "args": [],
                    "optional": false,
                    "returnType": "Partial<Record<K, T[K]>>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "key",
                            "type": "K",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": " | undefined",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "K",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "key",
                            "type": "K",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "K",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "BadgeDirective",
            "id": "directive-BadgeDirective-15925a39c3eda08b993b2769243d589c392a5002681b15f7a4766ead033e4aa85ec30ee61c7b9362542882bea8f3ae33f97d882647e1af1ec246afbf2f9ec464",
            "file": "libs/material/src/micro/badge/badge.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport { Color, BadgePosition } from './../../api';\n\n@Directive({ selector: '[tbBadge]', standalone: true })\nexport class BadgeDirective implements AfterViewInit {\n  @Input() tbBadge? = '';\n  @Input() tbBadgePosition?: BadgePosition = 'top-right';\n  @Input() tbBadgeColor?: Color = 'primary';\n  constructor(public readonly elementRef: ElementRef<HTMLElement>) {}\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      if (this.tbBadge) {\n        this.elementRef.nativeElement.setAttribute('data-badge', this.tbBadge);\n        this.elementRef.nativeElement.setAttribute(\n          'data-badge-position',\n          this.tbBadgePosition!\n        );\n        this.elementRef.nativeElement.setAttribute(\n          'data-badge-color',\n          this.tbBadgeColor!\n        );\n      }\n    }, 200);\n  }\n}\n",
            "selector": "[tbBadge]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbBadge",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 6,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tbBadgeColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "tbBadgePosition",
                    "defaultValue": "'top-right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "BadgePosition",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ClassListDirective",
            "id": "directive-ClassListDirective-456e787d75da6afab214b19e256c636fe55e3de568b7801310446f08f251ecabb7dd47f82bd1007139c74e3aeb359dd4aa6a2f605801b279695bd4825f8c8292",
            "file": "libs/material/src/micro/class-list/class-list.directive.ts",
            "type": "directive",
            "description": "<p>Class list items whose name either not starts with &quot;__&quot; nor ends with &quot;Event&quot;</p>\n",
            "rawdescription": "\n\nClass list items whose name either not starts with \"__\" nor ends with \"Event\"\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\n\n/**\n * Class list items whose name either not starts with \"__\" nor ends with \"Event\"\n */\n@Directive({\n  selector: '[tbClassList]',\n  standalone: true,\n})\nexport class ClassListDirective implements AfterViewInit {\n  @Input() tbClassList?: Record<string, any>;\n  constructor(public readonly elementRef: ElementRef<HTMLElement>) {}\n\n  ngAfterViewInit(): void {\n    console.log(this.tbClassList);\n    if (this.tbClassList) {\n      console.log('Adding classes');\n      const entries = Object.entries(this.tbClassList);\n      console.log(entries);\n      for (const [key, value] of entries) {\n        if (\n          value === '' ||\n          key.startsWith('tooltip') ||\n          key.startsWith('__') ||\n          key.startsWith('native') ||\n          key.startsWith('ng') ||\n          key.startsWith('can') ||\n          key.startsWith('emit') ||\n          key.startsWith('handle') ||\n          key.startsWith('children') ||\n          key.startsWith('child') ||\n          key.endsWith('Event') ||\n          key.endsWith('Ref')\n        ) {\n          continue;\n        }\n        console.log('adding the class:', key, value);\n        this.elementRef.nativeElement.classList.add(value);\n      }\n    }\n  }\n}\n",
            "selector": "[tbClassList]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbClassList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Record<string | any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "FocusDirective",
            "id": "directive-FocusDirective-3227cc3eeea7a35be38bf49ddcbc8a7f1f494c117996e4b8ff9e4c7e19a8ab92fabfd5d3d9cb7966ce14ceb3c851371a7819852268e01a4f86f536f61121500d",
            "file": "libs/material/src/micro/focus/focus.directive.ts",
            "type": "directive",
            "description": "<p>Focus element after view init.</p>\n",
            "rawdescription": "\n\nFocus element after view init.\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n/**\n * Focus element after view init.\n */\n@Directive({\n  selector: '[tbFocus]',\n  standalone: true,\n})\nexport class FocusDirective implements AfterViewInit {\n  constructor(private readonly elementRef: ElementRef<HTMLElement>) {}\n  ngAfterViewInit(): void {\n    this.elementRef.nativeElement.focus();\n  }\n}\n",
            "selector": "[tbFocus]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "FormActionsDirective",
            "id": "directive-FormActionsDirective-3b14336835f052022d637015a05de9c12ff46c8c31552ecc4f1b46a6eae56e14c7deebf61ad0ea711841e4ac55ba1258996744314ab34be2a1cd0cbbd173f40b",
            "file": "libs/material/src/form/form-actions/form-actions.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[tbFormActions]',\n  standalone: true,\n})\nexport class FormActionsDirective {\n  constructor(public readonly templateRef: TemplateRef<unknown>) {}\n}\n",
            "selector": "[tbFormActions]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "HasValueDirective",
            "id": "directive-HasValueDirective-62e31f6c97763b6203542c7920f85718ceb4aab0b361dd95bca1e7355f1645343aa1909fbc83d63edbb6d5b41f403afc4f980f28a181db2b14de5ba12d0afa45",
            "file": "libs/material/src/micro/has-value/has-value.directive.ts",
            "type": "directive",
            "description": "<p>If input has value then add &quot;has-value&quot; attribute to input element.</p>\n",
            "rawdescription": "\n\nIf input has value then add \"has-value\" attribute to input element.\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n/**\n * If input has value then add \"has-value\" attribute to input element.\n */\n@Directive({\n  selector: '[tbHasValue]',\n  standalone: true,\n})\nexport class HasValueDirective implements AfterViewInit {\n  constructor(private readonly elementRef: ElementRef<HTMLInputElement>) {}\n\n  ngAfterViewInit(): void {\n    this.elementRef.nativeElement.addEventListener(\n      'input',\n      (event: InputEvent | any) => {\n        console.log('Input Event: ', event.data);\n        const data = event.data;\n        if (data?.length > 0) {\n          this.markAsHasValue();\n        } else {\n          this.markAsHasNovalue();\n        }\n      }\n    );\n  }\n\n  private markAsHasValue() {\n    this.elementRef.nativeElement.setAttribute('has-value', 'true');\n  }\n  private markAsHasNovalue() {\n    this.elementRef.nativeElement.setAttribute('has-value', 'false');\n  }\n}\n",
            "selector": "[tbHasValue]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "markAsHasNovalue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "markAsHasValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLInputElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLInputElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ScrollDirectionDirective",
            "id": "directive-ScrollDirectionDirective-71816ef9e3fe5b850e7f78ffa6d8b4491f5da377ebea420212c50151e98c0997ed6dd382514094bf3c178b938e360274b61760444afca43737ef0d4f6dafd08a",
            "file": "libs/material/src/micro/scroll-direction/scroll-direction.directive.ts",
            "type": "directive",
            "description": "<p>Change scroll direction to x axis</p>\n",
            "rawdescription": "\n\nChange scroll direction to x axis\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, OnDestroy } from '@angular/core';\nimport { Subscription, debounceTime, fromEvent } from 'rxjs';\n\n/**\n * Change scroll direction to x axis\n */\n@Directive({\n  selector: '[tbScrollX]',\n  standalone: true,\n})\nexport class ScrollDirectionDirective implements AfterViewInit, OnDestroy {\n  subscription?: Subscription;\n\n  constructor(private readonly elementRef: ElementRef<HTMLDivElement>) {}\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.elementRef.nativeElement.onwheel = (event) => {\n      if (!event.shiftKey) {\n        event.preventDefault();\n      }\n    };\n    this.subscription = fromEvent<WheelEvent>(\n      this.elementRef.nativeElement,\n      'wheel'\n    )\n      .pipe(debounceTime(100))\n      .subscribe((e) => {\n        if (!e.shiftKey)\n          this.elementRef.nativeElement.scrollBy({\n            left: e.deltaY * 2,\n            behavior: 'smooth',\n          });\n      });\n  }\n}\n",
            "selector": "[tbScrollX]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLDivElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLDivElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SetAttributeDirective",
            "id": "directive-SetAttributeDirective-f5eb746ad36311034ccd62e5930036c91ff44f4993aec41b0a17b179c75a76c9ffd6cf8d67fd12c9e9596c3df51612849564bc7181a9eca5ed1606662e45d8f3",
            "file": "libs/material/src/micro/set-attribute/set-attribute.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  AfterViewInit,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\n@Directive({ selector: '[tbSetAttribute]', standalone: true })\nexport class SetAttributeDirective implements AfterViewInit {\n  @Input() tbSetAttribute?: Record<string, any>;\n  constructor(public readonly elementRef: ElementRef<HTMLElement>) {}\n\n  ngAfterViewInit(): void {\n    if (this.tbSetAttribute) {\n      const entries = Object.entries(this.tbSetAttribute);\n      for (const [key, value] of entries) {\n        if (key.startsWith('__')) {\n          return;\n        }\n        this.elementRef.nativeElement.setAttribute(key, value);\n      }\n    }\n  }\n}\n",
            "selector": "[tbSetAttribute]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbSetAttribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Record<string | any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SetComponentAttributeDirective",
            "id": "directive-SetComponentAttributeDirective-e14bf51aaf72f77af35993201b1a88a29d31b052eaf10cf0dc96fe75f238eb331631bc683c9f7bf421dcc38863181382bb0cd63bd6eb896beb094d0e1c599ee1",
            "file": "libs/material/src/micro/set-component-attribute/set-component-attribute.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  AfterViewInit,\n  ComponentRef,\n  Directive,\n  Input,\n  OnInit,\n} from '@angular/core';\n\n@Directive({\n  selector: '[tbSetComponentAttribute]',\n  standalone: true,\n})\nexport class SetComponentAttributeDirective implements OnInit {\n  @Input() componentRef?: ComponentRef<any>;\n  @Input() tbSetComponentAttribute?: Record<string, any>;\n\n  ngOnInit(): void {\n    if (this.tbSetComponentAttribute) {\n      console.log(this.componentRef);\n      const attributes = Object.entries(this.tbSetComponentAttribute);\n      for (const [key, value] of attributes) {\n        if (key.startsWith('__')) {\n          continue;\n        }\n        console.log(`Adding input : ${key}  : ${value}`);\n        this.componentRef?.setInput(key, value);\n      }\n    }\n  }\n}\n",
            "selector": "[tbSetComponentAttribute]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "componentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "ComponentRef<any>",
                    "decorators": []
                },
                {
                    "name": "tbSetComponentAttribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Record<string | any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "TabDirective",
            "id": "directive-TabDirective-04a9e00225aa2772d61923b028bcb9ab927375dfd2d705336ff6b89ef41a387d619ee0a1c7086cd84eeb33b193c6700bb674517445b144a6913a1b98f7e710c8",
            "file": "libs/material/src/tab/tab.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, Input, TemplateRef } from '@angular/core';\r\nimport {\r\n  Color,\r\n  Icon,\r\n  Direction,\r\n  ButtonSize,\r\n  ButttonVariant,\r\n  BadgePosition,\r\n} from '../api';\r\nimport { NavListItemComponent } from '../nav-list/nav-list-item/nav-list-item.component';\r\n\r\n@Directive({ selector: '[tbTab]' })\r\nexport class TabDirective implements NavListItemComponent {\r\n  @Input() clickEvent: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input() __ngContext__ = '';\r\n\r\n  @Input() borderPosition?: Direction = 'bottom';\r\n  @Input() color?: Color = 'primary';\r\n  @Input() icon?: Icon = 'info';\r\n  @Input() label?: string = '';\r\n  @Input() nativeType: 'submit' | 'reset' | 'button' = 'button';\r\n  @Input() size?: ButtonSize | undefined = 'regular';\r\n  @Input() variant?: ButttonVariant | undefined = 'tab';\r\n\r\n  constructor(public templateRef: TemplateRef<TabDirective>) {}\r\n  emit(): void {\r\n    this.clickEvent.emit();\r\n  }\r\n}\r\n",
            "selector": "[tbTab]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": []
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<any>",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"submit\" | \"reset\" | \"button\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize | undefined",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'tab'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<TabDirective>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "NavListItemComponent"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<TabDirective>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<TabDirective>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TooltipDirective",
            "id": "directive-TooltipDirective-27fc1457aa4d59981020fdf9c0ab8e47e3df6d1168dba3be9609870605e75a84775ce4a0acd1bddba2e12cfe29fd2918ae91c5fa66511f61229846d05867267b",
            "file": "libs/material/src/micro/tooltip/tooltip.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport { Direction } from './../../api';\n\n@Directive({\n  selector: '[tbTooltip]',\n  standalone: true,\n})\nexport class TooltipDirective implements AfterViewInit {\n  @Input() tbTooltip?: string = '';\n  @Input() tbTooltipPosition?: Direction = 'bottom';\n  constructor(private readonly elementRef: ElementRef<HTMLButtonElement>) {}\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      const e = this.elementRef.nativeElement;\n      e.setAttribute('aria-label', this.tbTooltip || '');\n      e.setAttribute('tooltip-position', this.tbTooltipPosition || 'bottom');\n    }, 1000);\n  }\n}\n",
            "selector": "[tbTooltip]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbTooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tbTooltipPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Direction",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLButtonElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLButtonElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AlertComponent",
            "id": "component-AlertComponent-139ca96ea71907982b0a5361f9d59cc1ed86aa05ece62b26928dfb95683bf85e7e3d55769f4672faee30f4efc1d71884ee94c2aef494c79624fff3ff688fccff",
            "file": "libs/material/src/alert/alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-alert",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\" {{ color }}\" role=\"alert\">    <span class=\"icon\">{{ icon }}</span>\n    <span>{{ message }}</span>\n    <div class=\"grow-1\"></div>\n    <tb-icon-button\n      [color]=\"color\"\n      icon=\"close\"\n      variant=\"inbox\"\n      size=\"small\"\n      (click)=\"emitCloseEvent()\"\n    ></tb-icon-button>\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "'Message'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closeEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emitCloseEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "IconButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Color, Icon } from '../api';\nimport { IconButtonComponent } from '../button';\nimport { MicroModule } from '../micro/micro.module';\n\n@Component({\n  selector: 'tb-alert',\n  standalone: true,\n  imports: [MicroModule, IconButtonComponent],\n  template: `<div class=\" {{ color }}\" role=\"alert\">\n    <span class=\"icon\">{{ icon }}</span>\n    <span>{{ message }}</span>\n    <div class=\"grow-1\"></div>\n    <tb-icon-button\n      [color]=\"color\"\n      icon=\"close\"\n      variant=\"inbox\"\n      size=\"small\"\n      (click)=\"emitCloseEvent()\"\n    ></tb-icon-button>\n  </div>`,\n})\nexport class AlertComponent {\n  @Output() closeEvent = new EventEmitter();\n  @Input() color: Color = 'primary';\n  @Input() icon: Icon = 'info';\n  @Input() message = 'Message';\n  @Input() closable = true;\n\n  emitCloseEvent() {\n    this.closeEvent.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AppAuthComponent",
            "id": "component-AppAuthComponent-f3917fba8ced3355495e1017929096adadc32bb73a3c71ef2d6b875d754953655a8c35b33dad96f14e27e7f0e27fe413b63ac96ebade828798cc55000231c68d",
            "file": "libs/material/src/app-auth/app-auth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-app-auth",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-auth.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "forgotPasswordEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                },
                {
                    "name": "loginEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                },
                {
                    "name": "secureEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                },
                {
                    "name": "signupEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "submitForgotForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitLoginForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitSecureForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitSignupForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "TabModule",
                    "type": "module"
                },
                {
                    "name": "FormModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { TabModule } from '../tab/tab.module';\nimport { ButtonComponent } from '../button';\nimport { FormModule } from '../form/form.module';\nimport { MicroModule } from '../micro/micro.module';\n\n@Component({\n  selector: 'tb-app-auth',\n  standalone: true,\n  imports: [MicroModule, TabModule, FormModule, ButtonComponent],\n  templateUrl: './app-auth.component.html',\n})\nexport class AppAuthComponent {\n  @Output() loginEvent = new EventEmitter();\n  @Output() forgotPasswordEvent = new EventEmitter();\n  @Output() secureEvent = new EventEmitter();\n  @Output() signupEvent = new EventEmitter();\n\n  submitLoginForm(formValue: Record<string, unknown>) {\n    this.loginEvent.emit(formValue);\n  }\n  submitForgotForm(formValue: Record<string, unknown>) {\n    this.forgotPasswordEvent.emit(formValue);\n  }\n  submitSecureForm(formValue: Record<string, unknown>) {\n    this.secureEvent.emit(formValue);\n  }\n  submitSignupForm(formValue: Record<string, unknown>) {\n    this.signupEvent.emit(formValue);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<tb-tab-container>\n  <!-- Login form -->\n  <ng-template\n    tbTab\n    label=\"Login\"\n    icon=\"login\"\n    color=\"primary\"\n    badge=\"100\"\n    badgePosition=\"bottom-right\"\n    borderPosition=\"bottom\"\n  >\n    <tb-form\n      (submitEvent)=\"submitLoginForm($event)\"\n      name=\"login\"\n      title=\"Login\"\n      subtitle=\"With Credentials\"\n      ><tb-input\n        name=\"name\"\n        autocomplete=\"username\"\n        label=\"Username\"\n        icon=\"person\"\n      ></tb-input>\n      <tb-input\n        name=\"password\"\n        label=\"Input label\"\n        icon=\"password\"\n        color=\"accent\"\n        label=\"Password\"\n        type=\"password\"\n      ></tb-input>\n\n      <ng-template tbFormActions>\n        <tb-button\n          nativeType=\"submit\"\n          icon=\"login\"\n          label=\"Login\"\n          variant=\"raised\"\n        ></tb-button>\n        <tb-button\n          nativeType=\"reset\"\n          icon=\"refresh\"\n          label=\"Reset\"\n          variant=\"stroked\"\n        ></tb-button>\n      </ng-template>\n    </tb-form>\n  </ng-template>\n\n  <!-- Forgot password form -->\n  <ng-template\n    tbTab\n    label=\"Forgot Password\"\n    icon=\"password\"\n    color=\"primary\"\n    borderPosition=\"bottom\"\n  >\n    <tb-form\n      (submitEvent)=\"submitForgotForm($event)\"\n      name=\"forgot-password\"\n      title=\"Forgot Password\"\n      subtitle=\"Update your password\"\n    >\n      <tb-input\n        name=\"username\"\n        label=\"Input label\"\n        icon=\"person\"\n        color=\"primary\"\n        label=\"Username\"\n        type=\"text\"\n      ></tb-input>\n\n      <ng-template tbFormActions>\n        <tb-button\n          nativeType=\"submit\"\n          icon=\"login\"\n          label=\"Get Key\"\n          variant=\"raised\"\n        ></tb-button>\n        <tb-button\n          nativeType=\"reset\"\n          icon=\"refresh\"\n          label=\"Reset\"\n          variant=\"stroked\"\n        ></tb-button>\n      </ng-template>\n    </tb-form>\n  </ng-template>\n\n  <!-- Secure login form -->\n  <ng-template\n    tbTab\n    label=\"Secure Login\"\n    icon=\"key\"\n    color=\"primary\"\n    borderPosition=\"bottom\"\n  >\n    <tb-form\n      (submitEvent)=\"submitSecureForm($event)\"\n      name=\"secure-login\"\n      title=\"Login\"\n      subtitle=\"With key\"\n    >\n      <tb-input\n        name=\"key\"\n        label=\"Input label\"\n        icon=\"key\"\n        color=\"primary\"\n        label=\"Keylo\"\n        type=\"text\"\n      ></tb-input>\n\n      <ng-template tbFormActions>\n        <tb-button\n          nativeType=\"submit\"\n          icon=\"login\"\n          label=\"Verify\"\n          variant=\"raised\"\n        ></tb-button>\n        <tb-button\n          nativeType=\"reset\"\n          icon=\"refresh\"\n          label=\"Reset\"\n          variant=\"stroked\"\n        ></tb-button>\n      </ng-template>\n    </tb-form>\n  </ng-template>\n\n  <!-- Signup form -->\n  <ng-template\n    tbTab\n    label=\"Signup\"\n    icon=\"house\"\n    color=\"accent\"\n    borderPosition=\"bottom\"\n  >\n    <tb-form\n      (submitEvent)=\"submitSignupForm($event)\"\n      name=\"signup\"\n      title=\"Signup\"\n      subtitle=\"Welcome\"\n    >\n      <tb-input\n        name=\"username\"\n        label=\"Input label\"\n        name=\"username\"\n        label=\"Input label\"\n        icon=\"person\"\n        color=\"primary\"\n        label=\"Username\"\n        type=\"text\"\n      ></tb-input>\n      <tb-input\n        name=\"password\"\n        label=\"Input label\"\n        icon=\"password\"\n        color=\"accent\"\n        label=\"Password\"\n        type=\"password\"\n      ></tb-input>\n\n      <ng-template tbFormActions>\n        <tb-button\n          nativeType=\"submit\"\n          icon=\"signature\"\n          label=\"Signup\"\n          color=\"red\"\n          variant=\"raised\"\n        ></tb-button>\n        <tb-button\n          nativeType=\"reset\"\n          icon=\"refresh\"\n          label=\"Reset\"\n          variant=\"stroked\"\n        ></tb-button>\n      </ng-template>\n    </tb-form>\n  </ng-template>\n</tb-tab-container>\n"
        },
        {
            "name": "AppInventoryComponent",
            "id": "component-AppInventoryComponent-9562a491c12b22effd1de98201648ff42cb75ca7ff2461d0423362c818984436632bfe47c9955a5248ab0feb33b4ea2d13155807defbc507bb4c62db2ab623ce",
            "file": "libs/material/src/app-inventory/app-inventory.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-app-inventory",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-inventory.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "TabModule",
                    "type": "module"
                },
                {
                    "name": "NavListModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "FormModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ButtonComponent } from '../button';\nimport { TabModule } from '../tab/tab.module';\nimport { MicroModule } from '../micro/micro.module';\nimport { FormModule } from '../form/form.module';\nimport { NavListModule } from '../nav-list/nav-list.component';\n\n@Component({\n  selector: 'tb-app-inventory',\n  standalone: true,\n  imports: [MicroModule, TabModule, NavListModule, ButtonComponent, FormModule],\n  templateUrl: './app-inventory.component.html',\n})\nexport class AppInventoryComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<tb-tab-container type=\"sidenav\">\n  <ng-template tbTab label=\"Products\" icon=\"info\" color=\"primary\">\n    <h1>Product content</h1>\n  </ng-template>\n  <ng-template tbTab label=\"Stock\" icon=\"info\" color=\"primary\">\n    <h1>Stock</h1>\n  </ng-template>\n  <ng-template tbTab label=\"Pricing\" icon=\"attach_money\" color=\"primary\">\n    <h1>Pricing</h1>\n  </ng-template>\n</tb-tab-container>\n"
        },
        {
            "name": "BooleanInputComponent",
            "id": "component-BooleanInputComponent-008508aa2045cd3009e49a2a7a5675ad72728e9614e7ce6bd1e0476c248e42a9e735eb997cb939bd2a6ea43fb13379dd1d71b54ad13430b4bc5b67964e818370",
            "file": "libs/material/src/form/boolean-input/boolean-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-boolean-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex row align-center gap-2em \">\n  <input\n    [(ngModel)]=\"value\"\n    [id]=\"id()\"\n    type=\"checkbox\"\n    class=\"w-20px h-20px\"\n  />\n  <label [for]=\"id()\">{{ label }}</label>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "T",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonInputComponent } from '../common-input/common-input.component';\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-boolean-input',\n  standalone: true,\n  imports: [MicroModule],\n  template: `\n    <div class=\"flex row align-center gap-2em \">\n      <input\n        [(ngModel)]=\"value\"\n        [id]=\"id()\"\n        type=\"checkbox\"\n        class=\"w-20px h-20px\"\n      />\n      <label [for]=\"id()\">{{ label }}</label>\n    </div>\n  `,\n})\nexport class BooleanInputComponent extends CommonInputComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-2abe056f0a15c7f63afbe6e3e8feb00b6791e485f10906585ba472061206bf6ef4c17ea2a19ad638f835e49d7174b18544be301f55a64c1805824aabacf9e5fc",
            "file": "libs/material/src/button/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button   class=\"button {{ color }} {{ variant }} {{ size }} {{ borderPosition }}\"\n   [type]=\"nativeType\"\n   (click)=\"emit()\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonButtonComponent } from '../common-button';\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-button',\n  standalone: true,\n  imports: [MicroModule],\n  template: ` <button\n    class=\"button {{ color }} {{ variant }} {{ size }} {{ borderPosition }}\"\n    [type]=\"nativeType\"\n    (click)=\"emit()\"\n  >\n    {{ label }}\n  </button>`,\n  styles: [],\n})\nexport class ButtonComponent extends CommonButtonComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonButtonComponent"
        },
        {
            "name": "ColorsComponent",
            "id": "component-ColorsComponent-d09453123e60ae49fb410f134057636028aaa7b21691efbecbe3200a8c96740d6d368f843339033e8fc9974d3099ba040d3f9330e7429d8c3897438382542987",
            "file": "libs/material/src/colors/colors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-colors",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./colors.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-colors',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './colors.component.html',\n  styles: [],\n})\nexport class ColorsComponent {\n  /** @ignore */\n  colors = [\n    'primary',\n    'secondary',\n    'accent',\n    'warn',\n    'red',\n    'green',\n    'black',\n    'white',\n  ];\n\n  /** @ignore */\n  colorVariants = this.colors.map((e) => [\n    e,\n    ...[\n      'light',\n      'lighter',\n      'dark',\n      'darker',\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      10,\n    ].map((v) => e + '-' + v),\n  ]);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"flex column gap-3 center\">\n  <div class=\"flex gap-3 wrap\" *ngFor=\"let variants of colorVariants\">\n    <div\n      class=\"flex text-center center\"\n      style=\"\n      background-color: var(--{{ color }}); \n      color:var(--{{ color }}-face)\n      \"\n      *ngFor=\"let color of variants\"\n      style=\"width: 100px; height: 100px\"\n    >\n      <span> .{{ color }} </span>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "CombinedButtonComponent",
            "id": "component-CombinedButtonComponent-32870736215247e594ce4f956e92dbeb82960b20e9d3875247e588df5ce09f9f6fc508af2f1043de0c0b362a109cf1a2df2649d338c06e71a25214a74956d677",
            "file": "libs/material/src/button/combined-button/combined-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-combined-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button   #button\n   class=\"button combined-button  {{ color }} {{ variant }} {{ size }} {{\n     borderPosition\n   }}\"\n   (click)=\"emit()\"\n   [type]=\"nativeType\"\n >\n   <span class=\"icon\" *ngIf=\"icon\">{{ icon }}</span>\n   <span *ngIf=\"label\">{{ label }}</span>\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\nimport { CommonButtonComponent } from '../common-button';\n\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-combined-button',\n  standalone: true,\n  imports: [MicroModule],\n\n  template: ` <button\n    #button\n    class=\"button combined-button  {{ color }} {{ variant }} {{ size }} {{\n      borderPosition\n    }}\"\n    (click)=\"emit()\"\n    [type]=\"nativeType\"\n  >\n    <span class=\"icon\" *ngIf=\"icon\">{{ icon }}</span>\n    <span *ngIf=\"label\">{{ label }}</span>\n  </button>`,\n})\nexport class CombinedButtonComponent extends CommonButtonComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonButtonComponent"
        },
        {
            "name": "CommonButtonComponent",
            "id": "component-CommonButtonComponent-4ecad0d77e6001710dc141386e0f4dbf776f643ebe61c7b15dfe799f7bf834a62f70b4b392fb1f4fa14d20cebe73acbe15ce811a5ef5638a41caf467b922b357",
            "file": "libs/material/src/button/common-button/common-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": []
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ButtonSize, ButttonVariant, Color, Direction } from '../../api';\n\n@Component({ template: '' })\nexport class CommonButtonComponent {\n  /** @ignore */\n\n  @ViewChild('button') ref?: ElementRef<HTMLButtonElement>;\n\n  @Input() __ngContext__ = '';\n\n  @Input() borderPosition?: Direction;\n  @Input() color?: Color = 'primary';\n  @Input() icon?: string;\n  @Input() label?: string;\n  @Input() nativeType: HTMLButtonElement['type'] = 'button';\n  @Input() size?: ButtonSize = 'regular';\n  @Input() variant?: ButttonVariant = 'basic';\n  /** Only supported by tab variant */\n\n  @Input()\n  @Output()\n  clickEvent = new EventEmitter();\n\n  emit() {\n    this.clickEvent.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CommonInputComponent",
            "id": "component-CommonInputComponent-0a2048554ccc2e594b397e24f0f83b0a662dcff023a5f21051753e84146ca1b07e56df6c940aa596e1658e2858c530bf4784c023de792352944494500c248474",
            "file": "libs/material/src/form/common-input/common-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Direction",
                    "decorators": []
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "\"row\" | \"column\"",
                    "decorators": []
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "FormValue",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "InputType",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "SelectOption[]",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "T",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "InputVariant",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Color, Direction, Icon, InputType, InputVariant, SelectOption } from '../../api';\n\nimport { FormValue } from '../../api/form-value';\n\n@Component({ standalone: true, template: `` })\nexport class CommonInputComponent<T = any> {\n  @Input() formValue?: FormValue;\n\n  @Optional()\n  @ViewChild('input')\n  inputRef!: ElementRef<HTMLInputElement>;\n\n  @Input()\n  @Output()\n  inputEvent = new EventEmitter<T>();\n\n  @Input() __ngContext__ = '';\n\n  @Input() formName?: string;\n  @Input() inputType?: InputType = 'text';\n  @Input() value?: T;\n  @Input() name!: string;\n  @Input() type?: HTMLInputElement['type'];\n  @Input() autocomplete?: HTMLInputElement['autocomplete'];\n  @Input() color?: Color = 'primary';\n  @Input() label?: string = 'Not set';\n  @Input() variant?: InputVariant = 'basic';\n  @Input() icon?: Icon = 'info';\n  @Input() error?: string;\n\n  @Input() options?: SelectOption[];\n  @Input() direction?: Direction = 'bottom';\n  @Input() distribution?: 'row' | 'column' = 'column';\n\n  emit() {\n    this.formValue?.set(this.name, this.value);\n    this.inputEvent.emit(this.value);\n  }\n\n  id() {\n    return `${this.formName}-${this.name}-${this.inputType}`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DateInputComponent",
            "id": "component-DateInputComponent-b18d7270a6611a2e071062906d2c8fdefbea413a924fafb885374638cb169ae7c28975c0d23a9cd1a2d6fd3a1ac9e24cef12af84f77ca79626e2b009f00f096b",
            "file": "libs/material/src/form/date-input/date-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-date-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"input-container\">\n  <label [for]=\"id()\">{{ label }}</label>\n  <input [(ngModel)]=\"value\" [id]=\"id()\" type=\"date\" (input)=\"emit()\" ) />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "T",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonInputComponent } from '../common-input/common-input.component';\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-date-input',\n  standalone: true,\n  imports: [MicroModule],\n  template: `\n    <div class=\"input-container\">\n      <label [for]=\"id()\">{{ label }}</label>\n      <input [(ngModel)]=\"value\" [id]=\"id()\" type=\"date\" (input)=\"emit()\" ) />\n    </div>\n  `,\n})\nexport class DateInputComponent extends CommonInputComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "DatePickerComponent",
            "id": "component-DatePickerComponent-a77c6faedc503e6848fc4054aa9fe61684012f5af020449d9a22033dc638c3538383c0d5792ab336ae34938a641a8e44e82ff436d8eec0cf5726949e942858cf",
            "file": "libs/material/src/form/date-picker/date-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-date-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"date-picker \">\n  <div class=\"years\">\n    <span>Year</span>\n    <input\n      type=\"number\"\n      min=\"1\"\n      max=\"4000\"\n      maxlength=\"4\"\n      [(ngModel)]=\"year\"\n    />\n    <span>Month</span>\n    <input\n      type=\"number\"\n      min=\"1\"\n      max=\"12\"\n      maxlength=\"2\"\n      [(ngModel)]=\"month\"\n    />\n    <span>Range</span>\n    <input\n      type=\"number\"\n      min=\"1\"\n      max=\"31\"\n      maxlength=\"2\"\n      [(ngModel)]=\"selectRange\"\n    />\n  </div>\n  <div class=\"month select-range-{{ selectRange }}\">\n    <div class=\"dayname bold\" *ngFor=\"let dayName of listOfDays()\">\n      {{ dayName | slice: 0:1 }}\n    </div>\n    <div\n      class=\"day {{ color }} day-{{ date.day }}\"\n      *ngFor=\"let date of getDaysInMonth(year, month)\"\n      [class.current-date]=\"isCurrentDate(date)\"\n      [class.in-month]=\"date.month + 1 === month\"\n    >\n      {{ date.day }}\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "date",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "day",
                    "defaultValue": "this.date.getDate() + 1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "month",
                    "defaultValue": "this.date.getMonth() + 1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "selectRange",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "year",
                    "defaultValue": "this.date.getFullYear()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "T",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getDaysInMonth",
                    "args": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "month",
                            "type": "MonthNum",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "month",
                            "type": "MonthNum",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isCurrentDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listOfDays",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nimport { CommonInputComponent } from '../common-input/common-input.component';\nimport { MicroModule } from '../../micro/micro.module';\nimport { ListOfDays, MonthNum } from '../../api';\n\n@Component({\n  selector: 'tb-date-input',\n  standalone: true,\n  imports: [MicroModule],\n  template: `\n    <div class=\"date-picker \">\n      <div class=\"years\">\n        <span>Year</span>\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"4000\"\n          maxlength=\"4\"\n          [(ngModel)]=\"year\"\n        />\n        <span>Month</span>\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"12\"\n          maxlength=\"2\"\n          [(ngModel)]=\"month\"\n        />\n        <span>Range</span>\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"31\"\n          maxlength=\"2\"\n          [(ngModel)]=\"selectRange\"\n        />\n      </div>\n      <div class=\"month select-range-{{ selectRange }}\">\n        <div class=\"dayname bold\" *ngFor=\"let dayName of listOfDays()\">\n          {{ dayName | slice: 0:1 }}\n        </div>\n        <div\n          class=\"day {{ color }} day-{{ date.day }}\"\n          *ngFor=\"let date of getDaysInMonth(year, month)\"\n          [class.current-date]=\"isCurrentDate(date)\"\n          [class.in-month]=\"date.month + 1 === month\"\n        >\n          {{ date.day }}\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class DatePickerComponent extends CommonInputComponent {\n  @Input() date = new Date();\n  @Input() year = this.date.getFullYear();\n  @Input() month = this.date.getMonth() + 1;\n  @Input() day = this.date.getDate() + 1;\n  @Input() selectRange = 3;\n\n  openDate() {\n    this.inputRef.nativeElement.focus();\n    this.inputRef.nativeElement.dispatchEvent(\n      new InputEvent('input', {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n      })\n    );\n  }\n\n  getDaysInMonth(year: number, month: MonthNum) {\n    month -= 1;\n\n    const list42 = [];\n\n    // 0 to 6\n    const startDayOfweek = new Date(year, month).getDay();\n    const thisMonthsLength = new Date(year, month + 1, 0).getDate();\n    const previousMonthsLegth = new Date(year, month, 0).getDate();\n\n    let daysFromPreviousMonth = previousMonthsLegth;\n\n    for (let i = 1; i <= thisMonthsLength; i++) {\n      list42.push({\n        day: i,\n        month,\n        year,\n      });\n    }\n\n    // 0 to 6\n    // 1 --> 30  1 2 3 4 5 6\n    // 2 --> 29 30 1 2 3 4 5\n    // 3 --> 28 29 30 1 2 3 4\n    // Add days from previous month\n    for (let i = 0; i < startDayOfweek; i++) {\n      list42.unshift({\n        day: daysFromPreviousMonth--,\n        month: month - 1,\n        year,\n      });\n    }\n    // Add days from next month\n    const currentLength = list42.length;\n    for (let i = 1; i <= 42 - currentLength; i++) {\n      list42.push({\n        day: i,\n        month: month + 1,\n        year,\n      });\n    }\n\n    return list42;\n  }\n\n  listOfDays() {\n    return ListOfDays;\n  }\n\n  isCurrentDate(date: { day: number; year: number; month: number }) {\n    return (\n      new Date(date.year, date.month, date.day).toLocaleDateString() ===\n      new Date(Date.now()).toLocaleDateString()\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "FontsComponent",
            "id": "component-FontsComponent-b16a2345b36ea2504dc4073f7f4717bd752e3ae060dcda6fcb60804c0c3fdb6c8ab58bdf9ef33904eeae8519754753b39112aa7bc02039b0f1d0ad1061771784",
            "file": "libs/material/src/fonts/fonts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-fonts",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fonts.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-fonts',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './fonts.component.html',\n  styles: [],\n})\nexport class FontsComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<article style=\"font-size: 16px\">\n  <h1 class=\"title-1\" substring=\"Built by Ahmet Emrebas\">\n    Welcome to techbir angular material\n  </h1>\n\n  <div class=\"subtitle-1\">Let's learn how to structure our project.</div>\n\n  <div class=\"content-1\">\n    First is first. Let's install required tools and configure them. First is\n    first. Let's install required tools and configure them. First is first.\n    Let's install required tools and configure them. First is first. Let's\n    install required tools and configure them. First is first. Let's install\n    required tools and configure them.\n  </div>\n\n  <hr />\n  <h1 class=\"title-2\" substring=\"Built by Ahmet Emrebas\">\n    Welcome to techbir angular material\n  </h1>\n\n  <div class=\"subtitle-2\">Let's learn how to structure our project.</div>\n\n  <div class=\"content-2\">\n    First is first. Let's install required tools and configure them. First is\n    first. Let's install required tools and configure them. First is first.\n    Let's install required tools and configure them. First is first. Let's\n    install required tools and configure them. First is first. Let's install\n    required tools and configure them.\n  </div>\n</article>\n"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-a9481022e4fc7995ed70da004eb66a941a2bef35a1c60b0ce0b6b8af72010d1ddbbbf7437ba35af2aa5e28475bcd1d9329e232d9bcecfc6b412a083ad71309f2",
            "file": "libs/material/src/form/form.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "name",
                    "defaultValue": "'form'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter<Record<string, unknown>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<FormActionsDirective>",
                    "optional": true,
                    "description": "<p>Form action container marked by FormActionDirective</p>\n",
                    "line": 28,
                    "rawdescription": "\nForm action container marked by FormActionDirective",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "FormActionsDirective"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<InputComponent>",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "InputComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "componentType",
                    "defaultValue": "InputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "formValue",
                    "defaultValue": "new FormValue()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "childValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "InputComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "InputComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "preventDefault",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "InputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { InputComponent } from './input/input.component';\nimport { FormActionsDirective } from './form-actions/form-actions.directive';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MicroModule } from '../micro/micro.module';\nimport { FormValue } from '../api/form-value';\n\n@Component({\n  selector: 'tb-form',\n  standalone: true,\n  imports: [MicroModule, FormsModule, ReactiveFormsModule, InputComponent],\n  templateUrl: './form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormComponent {\n  componentType = InputComponent;\n\n  /** Form action container marked by FormActionDirective  */\n  @ContentChildren(FormActionsDirective)\n  actions?: QueryList<FormActionsDirective>;\n\n  @ContentChildren(InputComponent) children!: QueryList<InputComponent>;\n\n  @Output() submitEvent = new EventEmitter<Record<string, unknown>>();\n  @Input() title = '';\n  @Input() subtitle = '';\n  @Input() name = 'form';\n\n  readonly formValue = new FormValue();\n\n  preventDefault(event: Event) {\n    event.preventDefault();\n  }\n\n  childValue(value: InputComponent) {\n    return value.inputs({ formName: this.name, formValue: this.formValue });\n  }\n\n  submit() {\n    this.submitEvent.emit(this.formValue.formValue());\n  }\n\n  reset() {\n    this.formValue.reset();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<form\n  #form=\"ngForm\"\n  ngForm\n  class=\"form-container primary\"\n  autocomplete=\"on\"\n  (ngSubmit)=\"submit()\"\n  (submit)=\"preventDefault($event)\"\n  (reset)=\"reset()\"\n  novalidate\n>\n  <h1 class=\"title-1 form-title\" [attr.substring]=\"subtitle\" *ngIf=\"title\">\n    {{ title }}\n  </h1>\n\n  <ng-container *ngFor=\"let child of children\">\n    <ng-container\n      *ngComponentOutlet=\"componentType; inputs: childValue(child)\"\n    ></ng-container>\n  </ng-container>\n\n  <div class=\"form-actions\">\n    <ng-container\n      *ngTemplateOutlet=\"actions?.first?.templateRef!\"\n    ></ng-container>\n  </div>\n</form>\n"
        },
        {
            "name": "IconButtonComponent",
            "id": "component-IconButtonComponent-e6d58f677191eba3037e911a795ce93f41ce56a70d76a66ddd16bd56a9f37fac5ee241f53b16bbbfb34c0e2725666c34f419e4df4b812afd7c84e4f5c87e2da7",
            "file": "libs/material/src/button/icon-button/icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-icon-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button    class=\"icon-button  {{ color }} {{ variant }} {{ size }} {{borderPosition}}\"\n    (click)=\"emit()\"\n    [type]=\"nativeType\"\n  >\n    <span class=\"icon\">{{ icon }}</span>\n  </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonButtonComponent } from '../common-button';\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-icon-button',\n  standalone: true,\n  imports: [MicroModule],\n  template: `<button\n    class=\"icon-button  {{ color }} {{ variant }} {{ size }} {{borderPosition}}\"\n    (click)=\"emit()\"\n    [type]=\"nativeType\"\n  >\n    <span class=\"icon\">{{ icon }}</span>\n  </button>`,\n})\nexport class IconButtonComponent extends CommonButtonComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonButtonComponent"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-9ffcd140f0333b094c219e326eb8aaedb48aac70cdf7bf58b0ca06aae33cbc32ccce7274b55915bb85ad696ea8e71fb8c5720b17092d2707195d12cc1784357a",
            "file": "libs/material/src/micro/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-icon",
            "styleUrls": [],
            "styles": [],
            "template": "<span class=\"icon {{ fill }}\" *ngIf=\"icon\">{{ icon }}</span>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "fill",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"fill\" | string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Icon",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Color, Icon } from '../../api';\n\n@Component({\n  selector: 'tb-icon',\n  standalone: true,\n  imports: [CommonModule],\n  template: `<span class=\"icon {{ fill }}\" *ngIf=\"icon\">{{ icon }}</span>`,\n})\nexport class IconComponent {\n  @Input() icon?: Icon;\n  @Input() color?: Color;\n  @Input() fill?: 'fill' | '' = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-00be7d8c19a73ee2d2c89d5b4dcd5cafeae9ce1715142d4c14b4b593b85ab527d7595264bf2401becfcb44bc132c5411dfd2283b762c1be8e6ad60133112935b",
            "file": "libs/material/src/form/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-input",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngComponentOutlet=\"componentType(); inputs: inputs()\">\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "T",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "__boolean",
                    "defaultValue": "BooleanInputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "__date",
                    "defaultValue": "DatePickerComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "__multi_select",
                    "defaultValue": "MultipleSelectInputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "__number",
                    "defaultValue": "NumberInputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "__select",
                    "defaultValue": "SelectInputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "__text",
                    "defaultValue": "TextInputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "componentType",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "inputs",
                    "args": [
                        {
                            "name": "extras",
                            "type": "Record<string | any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Record<string, any>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "extras",
                            "type": "Record<string | any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { TextInputComponent } from '../text-input/text-input.component';\nimport { CommonInputComponent } from '../common-input/common-input.component';\nimport { DatePickerComponent } from '../date-picker/date-picker.component';\nimport { NumberInputComponent } from '../number-input/number-input.component';\nimport { BooleanInputComponent } from '../boolean-input/boolean-input.component';\nimport { SelectInputComponent } from '../select-input/select-input.component';\nimport { MultipleSelectInputComponent } from '../multiple-select-input/multiple-select-input.component';\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-input',\n  standalone: true,\n  imports: [MicroModule],\n  template: `\n    <ng-container *ngComponentOutlet=\"componentType(); inputs: inputs()\">\n    </ng-container>\n  `,\n})\nexport class InputComponent extends CommonInputComponent {\n  __text = TextInputComponent;\n  __date = DatePickerComponent;\n  __number = NumberInputComponent;\n  __select = SelectInputComponent;\n  __multi_select = MultipleSelectInputComponent;\n  __boolean = BooleanInputComponent;\n\n  inputs(extras?: Record<string, any>): Record<string, any> {\n    const {\n      inputRef,\n      __text,\n      __date,\n      __boolean,\n      __select,\n      __multi_select,\n      __number,\n      ...rest\n    } = this;\n    return { ...rest, ...extras };\n  }\n\n  componentType() {\n    if (this.inputType === 'text') {\n      return this.__text;\n    } else if (this.inputType === 'number') {\n      return this.__number;\n    } else if (this.inputType === 'date') {\n      return this.__date;\n    } else if (this.inputType === 'select') {\n      return this.__select;\n    } else if (this.inputType === 'boolean') {\n      return this.__boolean;\n    } else if (this.inputType === 'multi-select') {\n      return this.__multi_select;\n    }\n\n    return this.__text;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "ListComponent",
            "id": "component-ListComponent-7ba9273f994579f9cc77cea2886382473ec99dd48846af0ffa8292043480f54bea5c195c6a1331cd141733172bc2d2efcbe62d4848a4f8a9f2a7e54a59a38637",
            "file": "libs/material/src/list/list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Icon",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ListItemComponent>",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ListItemComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "componentType",
                    "defaultValue": "ListItemComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ListItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChildren, Input, QueryList } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListItemComponent } from './list-item/list-item.component';\nimport { Color, Icon } from '../api';\n\n@Component({\n  selector: 'tb-list',\n  standalone: true,\n  imports: [CommonModule, ListItemComponent],\n  templateUrl: './list.component.html',\n  styles: [],\n})\nexport class ListComponent {\n  componentType = ListItemComponent;\n  @ContentChildren(ListItemComponent) children?: QueryList<ListItemComponent>;\n\n  @Input() color: Color = 'primary';\n  @Input() icon: Icon = 'info';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"list\">\n  <ng-container\n    [ngComponentOutlet]=\"componentType\"\n    [ngComponentOutletInputs]=\"{\n      label: child.label,\n      icon: child.icon || icon,\n      color: child.color || color\n    }\"\n    *ngFor=\"let child of children\"\n  ></ng-container>\n</div>\n"
        },
        {
            "name": "ListItemComponent",
            "id": "component-ListItemComponent-2c31ef4a6b5f91ef7647401b0dbed1c12d237ffef5cd1916621de75fffea05fb927a7f084fbccdfc377b8e3e6d92158befa01a040452d2a26ec1e36a2d16f335",
            "file": "libs/material/src/list/list-item/list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Color, Icon } from '../../api';\n\n@Component({\n  selector: 'tb-list-item',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './list-item.component.html',\n  styles: [],\n})\nexport class ListItemComponent {\n  @Input() label = '';\n  @Input() color: Color = 'primary';\n  @Input() icon?: Icon = 'info';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"list-item {{ color }}\">\n  <span class=\"icon\">{{ icon }}</span>\n  <span>{{ label }}</span>\n</div>\n"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-c0816635ed87ab164e49a2b65575219f546b24c6697ecfd0f026df9840d2273733a31cd3bc5af8709bb1c47137eee17cb9b3cfa51654be53e3218044e85436ce",
            "file": "libs/material/src/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "containerView",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"row\" | \"column\"",
                    "decorators": []
                },
                {
                    "name": "openDirection",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Direction",
                    "decorators": []
                },
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, any>[]",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "MenuComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChildren, Input } from '@angular/core';\nimport { ButtonModule, CombinedButtonComponent } from '../button';\nimport { Direction } from '../api';\nimport { MicroModule } from '../micro/micro.module';\n\n@Component({\n  selector: 'tb-menu',\n  standalone: true,\n  imports: [MicroModule, ButtonModule],\n  templateUrl: './menu.component.html',\n})\nexport class MenuComponent extends CombinedButtonComponent {\n  /** @ignore */\n  readonly __componentType = MenuComponent;\n  @ContentChildren(MenuComponent) children?: Record<string, any>[];\n\n  @Input() openDirection: Direction = 'bottom';\n  @Input() containerView: 'row' | 'column' = 'column';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CombinedButtonComponent",
            "templateData": "<div class=\"dropdown {{ openDirection }} {{ color }}\">\n  <tb-combined-button\n    [color]=\"color\"\n    [label]=\"label\"\n    [variant]=\"variant\"\n    (clickEvent)=\"emit()\"\n    [size]=\"size\"\n    [icon]=\"icon\"\n  ></tb-combined-button>\n\n  <div\n    class=\"dropdown-items {{ containerView }}\"\n    *ngIf=\"children && children.length > 0\"\n  >\n    <ng-container *ngFor=\"let child of children\">\n      <ng-container\n        [ngComponentOutletInputs]=\"child\"\n        [ngComponentOutlet]=\"__componentType\"\n      ></ng-container>\n    </ng-container>\n  </div>\n</div>\n"
        },
        {
            "name": "MultipleSelectInputComponent",
            "id": "component-MultipleSelectInputComponent-f876de77d27598d4bf229eb8f4acae942a4d664c1f1db529a70ffa2bd35207455558219cd2e9618c1b7240586af8c4c35e03f6dd9fc5e9fd6f064b061412da25",
            "file": "libs/material/src/form/multiple-select-input/multiple-select-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-multiple-select-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"dropdown input-dropdown {{ direction }}  {{ color }}\">\n  <div class=\"input-container {{ color }} {{ variant }}\">\n    <span class=\"icon\"> {{ icon }}</span>\n    <label [for]=\"id()\">{{ label }} </label>\n    <input\n      #input\n      [(ngModel)]=\"searchtext\"\n      type=\"text\"\n      [id]=\"id()\"\n      [attr.data-testid]=\"name\"\n      [name]=\"name\"\n      [autocomplete]=\"autocomplete\"\n      (input)=\"filterOptions()\"\n      tbHasValue\n    />\n\n    <!--TODO :  Add closeable chip here -->\n    <span>{{ selectedItems() }}</span>\n  </div>\n\n  <div class=\"dropdown-items {{ distribution }} w-full h-10em oy-auto \">\n    <div\n      [attr.data-testid]=\"option.value\"\n      [id]=\"id() + option.value\"\n      class=\"nav-list-item inline-input cursor-pointer {{ color }}\"\n      *ngFor=\"let option of filterOptions()\"\n      (click)=\"selectOption(option)\"\n    >\n      <tb-icon [icon]=\"option.icon\"></tb-icon>\n      <span>{{ option.value }}</span>\n      <div class=\"grow-1\"></div>\n      <span class=\"icon {{ color }}-face\" *ngIf=\"option.selected\">\n        check\n      </span>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "T",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "searchtext",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "filterOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "[] | undefined",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectedItems",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectOption",
                    "args": [
                        {
                            "name": "option",
                            "type": "SelectOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "SelectOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonInputComponent } from '../common-input/common-input.component';\nimport { MicroModule } from '../../micro/micro.module';\nimport { SelectOption } from '../../api';\n\n@Component({\n  selector: 'tb-multiple-select-input',\n  standalone: true,\n  imports: [MicroModule],\n  template: `\n    <div class=\"dropdown input-dropdown {{ direction }}  {{ color }}\">\n      <div class=\"input-container {{ color }} {{ variant }}\">\n        <span class=\"icon\"> {{ icon }}</span>\n        <label [for]=\"id()\">{{ label }} </label>\n        <input\n          #input\n          [(ngModel)]=\"searchtext\"\n          type=\"text\"\n          [id]=\"id()\"\n          [attr.data-testid]=\"name\"\n          [name]=\"name\"\n          [autocomplete]=\"autocomplete\"\n          (input)=\"filterOptions()\"\n          tbHasValue\n        />\n\n        <!--TODO :  Add closeable chip here -->\n        <span>{{ selectedItems() }}</span>\n      </div>\n\n      <div class=\"dropdown-items {{ distribution }} w-full h-10em oy-auto \">\n        <div\n          [attr.data-testid]=\"option.value\"\n          [id]=\"id() + option.value\"\n          class=\"nav-list-item inline-input cursor-pointer {{ color }}\"\n          *ngFor=\"let option of filterOptions()\"\n          (click)=\"selectOption(option)\"\n        >\n          <tb-icon [icon]=\"option.icon\"></tb-icon>\n          <span>{{ option.value }}</span>\n          <div class=\"grow-1\"></div>\n          <span class=\"icon {{ color }}-face\" *ngIf=\"option.selected\">\n            check\n          </span>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class MultipleSelectInputComponent extends CommonInputComponent<string> {\n  searchtext = '';\n\n  selectOption(option: SelectOption) {\n    option.selected = !option.selected;\n  }\n  \n  filterOptions(): SelectOption[] | undefined {\n    return this.options?.filter((e) =>\n      e.value.toLowerCase().includes(this.searchtext?.toLowerCase() || '')\n    );\n  }\n\n  selectedItems() {\n    return this.options?.filter((e) => e.selected);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "NavListComponent",
            "id": "component-NavListComponent-96ca43f56f9f162861ffc6054f6b0a82fb93515cb380b4199f5f2de0211b6c484d58e40e438724e61086107fe4cf42418d5d6e75b9c996bfcc3280441ed4aea1",
            "file": "libs/material/src/nav-list/nav-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-nav-list",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"nav-list\">\n  <ng-container *ngFor=\"let child of children\">\n    <ng-container\n      *ngComponentOutlet=\"componentType; inputs: childValue(child)\"\n    ></ng-container>\n  </ng-container>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "componentType",
                    "defaultValue": "NavListItemComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Icon",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<NavListItemComponent>",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "NavListItemComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "childValue",
                    "args": [
                        {
                            "name": "child",
                            "type": "NavListItemComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Record<string, any>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "child",
                            "type": "NavListItemComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ContentChildren,\n  Input,\n  NgModule,\n  QueryList,\n} from '@angular/core';\n\nimport { NavListItemComponent } from './nav-list-item/nav-list-item.component';\nimport { Color, Icon } from '../api';\nimport { MicroModule } from '../micro/micro.module';\n\n@Component({\n  selector: 'tb-nav-list',\n  standalone: true,\n  imports: [MicroModule],\n  template: `\n    <div class=\"nav-list\">\n      <ng-container *ngFor=\"let child of children\">\n        <ng-container\n          *ngComponentOutlet=\"componentType; inputs: childValue(child)\"\n        ></ng-container>\n      </ng-container>\n    </div>\n  `,\n})\nexport class NavListComponent {\n  @Input() __ngContext__ = '';\n  @Input() componentType = NavListItemComponent;\n\n  @ContentChildren(NavListItemComponent)\n  children?: QueryList<NavListItemComponent>;\n\n  @Input() color: Color = 'primary';\n  @Input() icon: Icon = 'info';\n\n  childValue(child: NavListItemComponent): Record<string, any> {\n    const { ref, ...rest } = child;\n    return rest;\n  }\n}\n\n@NgModule({\n  imports: [NavListComponent, NavListItemComponent],\n  exports: [NavListComponent, NavListItemComponent],\n})\nexport class NavListModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "NavListItemComponent",
            "id": "component-NavListItemComponent-c04c15e86ddd472ba5a459599237e4e3b6dc9238bb0a09349f21c833315a8992ba3124d0b85cafc48d56e13bc68231de16830b05b50a56974ba769f8d7f1830a",
            "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-nav-list-item",
            "styleUrls": [],
            "styles": [],
            "template": "<button\n  class=\"nav-list-item {{ color }} {{ variant }} {{ borderPosition }} \"\n  (click)=\"emit()\"\n>\n  <span class=\"icon\">{{ icon }}</span>\n  <span>{{ label }}</span>\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "borderPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MicroModule } from '../../micro/micro.module';\nimport { CombinedButtonComponent } from '../../button';\n\n@Component({\n  selector: 'tb-nav-list-item',\n  standalone: true,\n  imports: [MicroModule],\n  template: `\n    <button\n      class=\"nav-list-item {{ color }} {{ variant }} {{ borderPosition }} \"\n      (click)=\"emit()\"\n    >\n      <span class=\"icon\">{{ icon }}</span>\n      <span>{{ label }}</span>\n    </button>\n  `,\n})\nexport class NavListItemComponent extends CombinedButtonComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CombinedButtonComponent"
        },
        {
            "name": "NotificationComponent",
            "id": "component-NotificationComponent-553379e7005c9d01453242576e3de3e25cb63ab886961cb5d7412b85d2cfbbe15806b93d06342611491bc98fa078134043ecb8350d84e5f607f5fe5cecbce0d6",
            "file": "libs/material/src/notification/notification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-notification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notification.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-notification',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './notification.component.html',\n  styles: [],\n})\nexport class NotificationComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>notification works!</p>\n"
        },
        {
            "name": "NumberInputComponent",
            "id": "component-NumberInputComponent-e7b46848ca971c0746adfe1c21cf6763c8fe4c5822c0744f73f03adf5e6dc81f43f6ca6fc680bf8f82bc80e92e12aa0b7548856eb8d8e3bf4a64d8f8d5992d63",
            "file": "libs/material/src/form/number-input/number-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-number-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"input-container {{ color }} {{ variant }}\">\n  <span class=\"icon\"> {{ icon }}</span>\n  <label [for]=\"id()\">{{ label }} </label>\n  <input\n    (input)=\"emit()\"\n    [(ngModel)]=\"value\"\n    [attr.data-testid]=\"name\"\n    [id]=\"id()\"\n    [name]=\"name\"\n    tbHasValue\n    type=\"number\"\n  />\n  <span class=\"input-error\" *ngIf=\"error\">{{ error }}</span>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "T",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonInputComponent } from '../common-input/common-input.component';\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-number-input',\n  standalone: true,\n  imports: [MicroModule],\n  template: `\n    <div class=\"input-container {{ color }} {{ variant }}\">\n      <span class=\"icon\"> {{ icon }}</span>\n      <label [for]=\"id()\">{{ label }} </label>\n      <input\n        (input)=\"emit()\"\n        [(ngModel)]=\"value\"\n        [attr.data-testid]=\"name\"\n        [id]=\"id()\"\n        [name]=\"name\"\n        tbHasValue\n        type=\"number\"\n      />\n      <span class=\"input-error\" *ngIf=\"error\">{{ error }}</span>\n    </div>\n  `,\n})\nexport class NumberInputComponent extends CommonInputComponent<number> {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "PaginatorComponent",
            "id": "component-PaginatorComponent-3d7fc66ce386646d402948b67e918ea1e61738170a0ba7a6631d5e3759132815eb94df0ab87c86563b6f4b5c34766cb6366f9a835ce641b8e8a92dd9a5338039",
            "file": "libs/material/src/table/paginator/paginator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-paginator",
            "styleUrls": [],
            "styles": [],
            "template": "<p>paginator works!</p>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-paginator',\n  standalone: true,\n  imports: [CommonModule],\n  template: `<p>paginator works!</p>`,\n  styles: [],\n})\nexport class PaginatorComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SampleButtonsComponent",
            "id": "component-SampleButtonsComponent-24a625d25b50d515eb54e945ed9c0d74a665e66e78398536762da9a682d00af741b7b962bb932bce32087d7bd2701e124f7ee68db740aeb433d5e947b4ba429e",
            "file": "libs/material/src/button/sample-buttons/sample-buttons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  class=\"flex  gap-2em p-2em wrap justify-flex-start\"\n  *ngFor=\"let variant of variants\"\n>\n  <tb-button\n    [label]=\"variant + ' ' + 'Button'\"\n    [variant]=\"variant\"\n    [color]=\"color\"\n    *ngFor=\"let color of colors\"\n  ></tb-button>\n</div>\n<div\n  class=\"flex row gap-2em p-2em wrap justify-flex-start\"\n  *ngFor=\"let variant of variants\"\n>\n  <tb-icon-button\n    icon=\"info\"\n    [variant]=\"variant\"\n    [color]=\"color\"\n    *ngFor=\"let color of colors\"\n  ></tb-icon-button>\n</div>\n<div\n  class=\"flex row gap-2em p-2em wrap justify-flex-start\"\n  *ngFor=\"let variant of variants\"\n>\n  <tb-combined-button\n    icon=\"info\"\n    [label]=\"variant + ' Combined'\"\n    [variant]=\"variant\"\n    [color]=\"color\"\n    *ngFor=\"let color of colors\"\n  ></tb-combined-button>\n</div>\n<div class=\"flex row gap-2em p-2em wrap justify-flex-start\">\n  <tb-button\n    label=\"tab button {{ position }} \"\n    color=\"primary\"\n    variant=\"tab\"\n    [borderPosition]=\"position\"\n    *ngFor=\"let position of positions\"\n  ></tb-button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttons",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "buttonTypes",
                    "defaultValue": "['button', 'combined-button', 'icon-button']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonType[]",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "colors",
                    "defaultValue": "[\n    'primary',\n    'secondary',\n    'accent',\n    'warn',\n    'red',\n    'green',\n    'white',\n    'black',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "positions",
                    "defaultValue": "['bottom', 'left', 'top', 'right']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Direction[]",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "variants",
                    "defaultValue": "['basic', 'flat', 'inbox', 'raised', 'stroked']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButttonVariant[]",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ButtonModule } from '../button.module';\nimport { MicroModule } from '../../micro/micro.module';\nimport { ButtonType, ButttonVariant, Color, Direction } from '../../api';\n\n@Component({\n  standalone: true,\n  imports: [MicroModule, ButtonModule],\n  template: `\n    <div\n      class=\"flex  gap-2em p-2em wrap justify-flex-start\"\n      *ngFor=\"let variant of variants\"\n    >\n      <tb-button\n        [label]=\"variant + ' ' + 'Button'\"\n        [variant]=\"variant\"\n        [color]=\"color\"\n        *ngFor=\"let color of colors\"\n      ></tb-button>\n    </div>\n    <div\n      class=\"flex row gap-2em p-2em wrap justify-flex-start\"\n      *ngFor=\"let variant of variants\"\n    >\n      <tb-icon-button\n        icon=\"info\"\n        [variant]=\"variant\"\n        [color]=\"color\"\n        *ngFor=\"let color of colors\"\n      ></tb-icon-button>\n    </div>\n    <div\n      class=\"flex row gap-2em p-2em wrap justify-flex-start\"\n      *ngFor=\"let variant of variants\"\n    >\n      <tb-combined-button\n        icon=\"info\"\n        [label]=\"variant + ' Combined'\"\n        [variant]=\"variant\"\n        [color]=\"color\"\n        *ngFor=\"let color of colors\"\n      ></tb-combined-button>\n    </div>\n    <div class=\"flex row gap-2em p-2em wrap justify-flex-start\">\n      <tb-button\n        label=\"tab button {{ position }} \"\n        color=\"primary\"\n        variant=\"tab\"\n        [borderPosition]=\"position\"\n        *ngFor=\"let position of positions\"\n      ></tb-button>\n    </div>\n  `,\n})\nexport class SampleButtonsComponent {\n  buttons: any[] = [];\n\n  buttonTypes: ButtonType[] = ['button', 'combined-button', 'icon-button'];\n  positions: Direction[] = ['bottom', 'left', 'top', 'right'];\n\n  variants: ButttonVariant[] = ['basic', 'flat', 'inbox', 'raised', 'stroked'];\n\n  colors: Color[] = [\n    'primary',\n    'secondary',\n    'accent',\n    'warn',\n    'red',\n    'green',\n    'white',\n    'black',\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SearchInputComponent",
            "id": "component-SearchInputComponent-d6efd25764762da60225be177bc4d373b7b2e16ca2a07d2aabce3bc3ac535aa8044db1267c08f99a47154df3c1ee7972cda71213404f5178f7909c920eb55bff",
            "file": "libs/material/src/form/search-input/search-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-search-input",
            "styleUrls": [],
            "styles": [],
            "template": "<p>search-input works!</p>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-search-input',\n  standalone: true,\n  imports: [CommonModule],\n  template: `<p>search-input works!</p>`,\n  styles: [],\n})\nexport class SearchInputComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectInputComponent",
            "id": "component-SelectInputComponent-8922ea8704201b807181b7df1a7f865b1990efa9dfbb412fb0217954dccaa66655a0299e5361ad921ca5cbfab91adc773afa1859a5559160691f86a19f13242e",
            "file": "libs/material/src/form/select-input/select-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-select-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"dropdown input-dropdown {{ direction }}  {{ color }}\">\n  <div class=\"input-container {{ color }} {{ variant }}\">\n    <span class=\"icon\"> {{ icon }}</span>\n    <label [for]=\"id()\">{{ label }} </label>\n    <input\n      #input\n      [(ngModel)]=\"value\"\n      type=\"text\"\n      [id]=\"id()\"\n      [attr.data-testid]=\"name\"\n      [name]=\"name\"\n      [autocomplete]=\"autocomplete\"\n      (input)=\"getOptions()\"\n      (keydown)=\"handleKeyPress($event)\"\n      tbHasValue\n    />\n  </div>\n  <div class=\"dropdown-items {{ distribution }} w-full h-10em oy-auto \">\n    <div\n      [attr.data-testid]=\"option.value\"\n      [id]=\"id() + option.value\"\n      class=\"nav-list-item inline-input cursor-pointer {{ color }}\"\n      *ngFor=\"let option of getOptions()\"\n      (click)=\"setOption(option)\"\n    >\n      <tb-icon [icon]=\"option.icon\"></tb-icon>\n      <span>{{ option.value }}</span>\n      <div class=\"grow-1\"></div>\n      <span class=\"icon {{ color }}-face\" *ngIf=\"value === option.value\">\n        check\n      </span>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "T",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleKeyPress",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setOption",
                    "args": [
                        {
                            "name": "options",
                            "type": "SelectOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "SelectOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonInputComponent } from '../common-input/common-input.component';\nimport { MicroModule } from '../../micro/micro.module';\nimport { SelectOption } from '../../api';\n\n@Component({\n  selector: 'tb-select-input',\n  standalone: true,\n  imports: [MicroModule],\n  template: `\n    <div class=\"dropdown input-dropdown {{ direction }}  {{ color }}\">\n      <div class=\"input-container {{ color }} {{ variant }}\">\n        <span class=\"icon\"> {{ icon }}</span>\n        <label [for]=\"id()\">{{ label }} </label>\n        <input\n          #input\n          [(ngModel)]=\"value\"\n          type=\"text\"\n          [id]=\"id()\"\n          [attr.data-testid]=\"name\"\n          [name]=\"name\"\n          [autocomplete]=\"autocomplete\"\n          (input)=\"getOptions()\"\n          (keydown)=\"handleKeyPress($event)\"\n          tbHasValue\n        />\n      </div>\n      <div class=\"dropdown-items {{ distribution }} w-full h-10em oy-auto \">\n        <div\n          [attr.data-testid]=\"option.value\"\n          [id]=\"id() + option.value\"\n          class=\"nav-list-item inline-input cursor-pointer {{ color }}\"\n          *ngFor=\"let option of getOptions()\"\n          (click)=\"setOption(option)\"\n        >\n          <tb-icon [icon]=\"option.icon\"></tb-icon>\n          <span>{{ option.value }}</span>\n          <div class=\"grow-1\"></div>\n          <span class=\"icon {{ color }}-face\" *ngIf=\"value === option.value\">\n            check\n          </span>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class SelectInputComponent extends CommonInputComponent {\n  setOption(options: SelectOption) {\n    this.inputRef.nativeElement.value = options.value;\n    setTimeout(() => {\n      this.inputRef.nativeElement.dispatchEvent(\n        new InputEvent('input', {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          data: options.value,\n        })\n      );\n\n      this.emit();\n    });\n  }\n\n  getOptions() {\n    return this.options?.filter((e) =>\n      e.value.toLowerCase().includes(this.value.toLowerCase())\n    );\n  }\n\n  handleKeyPress(event: KeyboardEvent) {\n    if (event.key === 'Tab') {\n      const option = this.getOptions()?.pop();\n      if (option) {\n        this.setOption(option);\n      }\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-81ee66b5ca55a1812ac403263adc9250453b313090a453cc03bd136ba53ea6d925156d1682daed49dcfc3bedc5a638ade395c804c62dbed1feb0b3f675a778c0",
            "file": "libs/material/src/stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-stepper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-stepper',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './stepper.component.html',\n  styles: [],\n})\nexport class StepperComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>stepper works!</p>\n"
        },
        {
            "name": "StickyNotesComponent",
            "id": "component-StickyNotesComponent-dd7e585cdec6aea21f73df42a581fb4140bbbc3c09630a3df457cc8f22332679a73226356efd70e42610c2e3f3d286de0ffd18cc11164988b9efa10a81553536",
            "file": "libs/material/src/sticky-notes/sticky-notes.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-sticky-notes",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sticky-notes.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-sticky-notes',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sticky-notes.component.html',\n  styles: [],\n})\nexport class StickyNotesComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>sticky-notes works!</p>\n"
        },
        {
            "name": "TabButtonComponent",
            "id": "component-TabButtonComponent-e11f67da78f6820cf3a7a7158bc62fa2fd4a4eb7705ae6010f6bbdda0fe3b35d9277a948707901212b19f5a88acc4e7682183fe368994b44459a5b2522c8bc10",
            "file": "libs/material/src/tab/tab-button/tab-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-tab-button",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container\n  *ngComponentOutlet=\"componentType; inputs: inputs()\"\n></ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "borderPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Direction | undefined",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'tab'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ButttonVariant | undefined",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOnly supported by tab variant",
                    "description": "<p>Only supported by tab variant</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "nativeType",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "componentType",
                    "defaultValue": "CombinedButtonComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "inputs",
                    "args": [],
                    "optional": false,
                    "returnType": "Record<string, any>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ButtonModule, CombinedButtonComponent } from '../../button';\nimport { MicroModule } from '../../micro/micro.module';\nimport { ButttonVariant, Direction } from '../../api';\n\n@Component({\n  selector: 'tb-tab-button',\n  standalone: true,\n  imports: [MicroModule, ButtonModule],\n  template: `\n    <ng-container\n      *ngComponentOutlet=\"componentType; inputs: inputs()\"\n    ></ng-container>\n  `,\n})\nexport class TabButtonComponent extends CombinedButtonComponent {\n  @Input() override variant?: ButttonVariant | undefined = 'tab';\n  @Input() override borderPosition?: Direction | undefined = 'bottom';\n\n  componentType = CombinedButtonComponent;\n\n  inputs(): Record<string, any> {\n    return this;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CombinedButtonComponent"
        },
        {
            "name": "TabContainerComponent",
            "id": "component-TabContainerComponent-6d60cff045a2fc73ee4a4e265e5306d9186f1a30a0dbd1db3026a62e8061421c3c71ddb2d311453a849d847b17b28edc0d355ba828a44dbbc449c34433a5893b",
            "file": "libs/material/src/tab/tab-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-tab-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tab-container.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'tab'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "TabContainerType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeChild$",
                    "defaultValue": "new BehaviorSubject<TabDirective | undefined>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<TabDirective>",
                    "optional": true,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "TabDirective"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "container",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLDivElement>",
                    "optional": true,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "delayedChild$",
                    "defaultValue": "this.activeChild$.pipe(debounceTime(200))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "tabComponentType",
                    "defaultValue": "CombinedButtonComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "activateChild",
                    "args": [
                        {
                            "name": "child",
                            "type": "TabDirective",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "child",
                            "type": "TabDirective",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "scroll",
                    "args": [
                        {
                            "name": "event",
                            "type": "WheelEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "WheelEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "NavListModule",
                    "type": "module"
                },
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, debounceTime } from 'rxjs';\nimport { TabDirective } from './tab.directive';\nimport { fadeInOnEnterAnimation } from 'angular-animations';\nimport { NavListModule } from './../nav-list/nav-list.component';\nimport { MicroModule } from './../micro/micro.module';\nimport { ButtonModule, CombinedButtonComponent } from './../button';\n\nexport type TabContainerType = 'sidenav' | 'tab';\n@Component({\n  selector: 'tb-tab-container',\n  standalone: true,\n  imports: [MicroModule, NavListModule, ButtonModule],\n  templateUrl: './tab-container.component.html',\n  animations: [fadeInOnEnterAnimation({ anchor: 'enter', duration: 1000 })],\n})\nexport class TabContainerComponent implements AfterViewInit {\n  tabComponentType = CombinedButtonComponent;\n  @ViewChild('container') container?: ElementRef<HTMLDivElement>;\n  @ContentChildren(TabDirective) children?: QueryList<TabDirective>;\n\n  @Input() type: TabContainerType = 'tab';\n\n  activeChild$ = new BehaviorSubject<TabDirective | undefined>(undefined);\n  delayedChild$ = this.activeChild$.pipe(debounceTime(200));\n\n  activateChild(child: TabDirective) {\n    this.activeChild$.next(undefined);\n    setTimeout(() => {\n      this.activeChild$.next(child);\n    }, 200);\n  }\n\n  scroll(event: WheelEvent) {\n    event.preventDefault();\n    this.container?.nativeElement.scrollBy({ left: event.deltaY });\n  }\n\n  ngAfterViewInit(): void {\n    if (this.children?.first) {\n      this.activateChild(this.children.first);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<ng-container *ngIf=\"type === 'tab'\">\n  <div #container class=\"flex justify-stretch relative p-1em\" tbScrollX>\n    <tb-combined-button\n      (clickEvent)=\"activateChild(child)\"\n      [color]=\"child.color\"\n      [icon]=\"child.icon\"\n      [label]=\"child.label\"\n      *ngFor=\"let child of children\"\n      borderPosition=\"bottom\"\n      class=\"w-100per\"\n      variant=\"tab\"\n      ></tb-combined-button>\n  </div>\n\n  <div *ngIf=\"delayedChild$ | async as delayedChild\" [@enter]>\n    <ng-container *ngTemplateOutlet=\"delayedChild.templateRef\">\n      <ng-content></ng-content>\n    </ng-container>\n  </div>\n</ng-container>\n\n<!-- Sidenav -->\n<ng-container *ngIf=\"type === 'sidenav'\">\n  <div class=\"flex row gap-1em\">\n    <tb-nav-list>\n      <tb-nav-list-item\n        *ngFor=\"let child of children\"\n        [icon]=\"child.icon\"\n        [label]=\"child.label\"\n        [color]=\"child.color\"\n        (clickEvent)=\"activateChild(child)\"\n      ></tb-nav-list-item>\n    </tb-nav-list>\n\n    <div *ngIf=\"delayedChild$ | async as delayedChild\" [@enter]>\n      <ng-container *ngTemplateOutlet=\"delayedChild.templateRef\">\n        <ng-content></ng-content>\n      </ng-container>\n    </div>\n  </div>\n</ng-container>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-bd04d596632c58969f596a9b1703ca3c1a97f3d6b5055640f028682623d73de81089b4825f70caa87abf5b0ad706fa11f1245db24ef5945bdc27eef78c0b9ddb",
            "file": "libs/material/src/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-table",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-table',\n  standalone: true,\n  imports: [CommonModule],\n  template: ``,\n  styles: [],\n})\nexport class TableComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextInputComponent",
            "id": "component-TextInputComponent-3adbdc2d16bb7f332a4a8016d04670dc866da8f14aa474f5dc64df6e52887eef63d35bb6e23e352a46b7d4e8035f17b9d1a11627dc66f1a7db339c59a40cd76b",
            "file": "libs/material/src/form/text-input/text-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-text-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"input-container {{ color }} {{ variant }}\">\n  <span class=\"icon\"> {{ icon }}</span>\n  <label [for]=\"name\">{{ label }} </label>\n  <input\n    [(ngModel)]=\"value\"\n    [id]=\"id()\"\n    [attr.data-testid]=\"name\"\n    type=\"text\"\n    [name]=\"name\"\n    [autocomplete]=\"autocomplete\"\n    (input)=\"emit()\"\n    tbHasValue\n  />\n  <span class=\"input-error\" *ngIf=\"error\">{{ error }}</span>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "__ngContext__",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "direction",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Direction",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "distribution",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "\"row\" | \"column\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "FormValue",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Icon",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "any",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "InputType",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Not set'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "SelectOption[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "T",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "InputVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        167
                    ],
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                },
                {
                    "name": "id",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonInputComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonInputComponent } from '../common-input/common-input.component';\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-text-input',\n  standalone: true,\n  imports: [MicroModule],\n  template: `\n    <div class=\"input-container {{ color }} {{ variant }}\">\n      <span class=\"icon\"> {{ icon }}</span>\n      <label [for]=\"name\">{{ label }} </label>\n      <input\n        [(ngModel)]=\"value\"\n        [id]=\"id()\"\n        [attr.data-testid]=\"name\"\n        type=\"text\"\n        [name]=\"name\"\n        [autocomplete]=\"autocomplete\"\n        (input)=\"emit()\"\n        tbHasValue\n      />\n      <span class=\"input-error\" *ngIf=\"error\">{{ error }}</span>\n    </div>\n  `,\n})\nexport class TextInputComponent extends CommonInputComponent<string> {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonInputComponent"
        },
        {
            "name": "ToolbarComponent",
            "id": "component-ToolbarComponent-30a7e7eed8f074505ca76d37729a88ffac64f8143b7fd84d1ea30a89d369d3419f087962f1692da2eb79fcbba495850c8cfa261c963ad8e1f6fe46eeccdacb78",
            "file": "libs/material/src/toolbar/toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-toolbar",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"toolbar {{ color }}\">\n  <ng-content></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Color",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Color } from '../api';\n\n@Component({\n  selector: 'tb-toolbar',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"toolbar {{ color }}\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class ToolbarComponent {\n  @Input() color: Color = 'primary';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "ButtonModule",
            "id": "module-ButtonModule-9c0f95182e8776b599874db4765bcc545aed9916882d7c20bee274023f88e3939fe18f88922a02262b4425cdb5906fda62ce369d4a5d3b4890704b1e16895ee4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ButtonComponent } from './button';\r\nimport { CombinedButtonComponent } from './combined-button';\r\nimport { IconButtonComponent } from './icon-button';\r\n\r\n@NgModule({\r\n  imports: [ButtonComponent, CombinedButtonComponent, IconButtonComponent],\r\n  exports: [ButtonComponent, CombinedButtonComponent, IconButtonComponent],\r\n})\r\nexport class ButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CombinedButtonComponent"
                        },
                        {
                            "name": "IconButtonComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CombinedButtonComponent"
                        },
                        {
                            "name": "IconButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FormModule",
            "id": "module-FormModule-5a8ffde63ec31b5461e1d4682afa1437e3cd33d7f369378a63a1bc455ffc2a5b65073779d9231f4a5a5e04588471d6898f449070a5743a90f633297b32c3b157",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/form/form.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { FormComponent } from './form.component';\r\nimport { InputComponent } from './input/input.component';\r\nimport { FormActionsDirective } from './form-actions/form-actions.directive';\r\nimport { TextInputComponent } from './text-input/text-input.component';\r\nimport { DatePickerComponent } from './date-picker/date-picker.component';\r\nimport { MultipleSelectInputComponent } from './multiple-select-input/multiple-select-input.component';\r\nimport { BooleanInputComponent } from './boolean-input/boolean-input.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormComponent,\r\n    InputComponent,\r\n    TextInputComponent,\r\n    DatePickerComponent,\r\n    MultipleSelectInputComponent,\r\n    BooleanInputComponent,\r\n    FormActionsDirective,\r\n  ],\r\n  exports: [\r\n    FormComponent,\r\n    InputComponent,\r\n    TextInputComponent,\r\n    DatePickerComponent,\r\n    BooleanInputComponent,\r\n    MultipleSelectInputComponent,\r\n    FormActionsDirective,\r\n  ],\r\n})\r\nexport class FormModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BooleanInputComponent"
                        },
                        {
                            "name": "DatePickerComponent"
                        },
                        {
                            "name": "FormActionsDirective"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "MultipleSelectInputComponent"
                        },
                        {
                            "name": "TextInputComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BooleanInputComponent"
                        },
                        {
                            "name": "DatePickerComponent"
                        },
                        {
                            "name": "FormActionsDirective"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "MultipleSelectInputComponent"
                        },
                        {
                            "name": "TextInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MicroModule",
            "id": "module-MicroModule-04506e5ec557c1356320e5bf0d597e00e746e6be14ad09d6ab05dc8ef1f6f06bf036fd520d1c2d79c1e4a1248ed2e58802ff977f9f6644f4f5342381d16720a2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/micro/micro.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BadgeDirective } from './badge/badge.directive';\nimport { FocusDirective } from './focus/focus.directive';\nimport { ScrollDirectionDirective } from './scroll-direction/scroll-direction.directive';\nimport { SetAttributeDirective } from './set-attribute/set-attribute.directive';\nimport { TooltipDirective } from './tooltip/tooltip.directive';\nimport { SetComponentAttributeDirective } from './set-component-attribute/set-component-attribute.directive';\nimport { ClassListDirective } from './class-list/class-list.directive';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IconComponent } from './icon/icon.component';\nimport { HasValueDirective } from './has-value/has-value.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BadgeDirective,\n    FocusDirective,\n    ScrollDirectionDirective,\n    SetAttributeDirective,\n    TooltipDirective,\n    SetComponentAttributeDirective,\n    ClassListDirective,\n    IconComponent,\n    HasValueDirective,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    CommonModule,\n    BadgeDirective,\n    FocusDirective,\n    ScrollDirectionDirective,\n    SetAttributeDirective,\n    SetComponentAttributeDirective,\n    TooltipDirective,\n    ClassListDirective,\n    IconComponent,\n    HasValueDirective,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class MicroModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BadgeDirective"
                        },
                        {
                            "name": "ClassListDirective"
                        },
                        {
                            "name": "FocusDirective"
                        },
                        {
                            "name": "HasValueDirective"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "ScrollDirectionDirective"
                        },
                        {
                            "name": "SetAttributeDirective"
                        },
                        {
                            "name": "TooltipDirective"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BadgeDirective"
                        },
                        {
                            "name": "ClassListDirective"
                        },
                        {
                            "name": "FocusDirective"
                        },
                        {
                            "name": "HasValueDirective"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "ScrollDirectionDirective"
                        },
                        {
                            "name": "SetAttributeDirective"
                        },
                        {
                            "name": "SetComponentAttributeDirective"
                        },
                        {
                            "name": "TooltipDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NavListModule",
            "id": "module-NavListModule-96ca43f56f9f162861ffc6054f6b0a82fb93515cb380b4199f5f2de0211b6c484d58e40e438724e61086107fe4cf42418d5d6e75b9c996bfcc3280441ed4aea1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/nav-list/nav-list.component.ts",
            "methods": [],
            "sourceCode": "import {\n  Component,\n  ContentChildren,\n  Input,\n  NgModule,\n  QueryList,\n} from '@angular/core';\n\nimport { NavListItemComponent } from './nav-list-item/nav-list-item.component';\nimport { Color, Icon } from '../api';\nimport { MicroModule } from '../micro/micro.module';\n\n@Component({\n  selector: 'tb-nav-list',\n  standalone: true,\n  imports: [MicroModule],\n  template: `\n    <div class=\"nav-list\">\n      <ng-container *ngFor=\"let child of children\">\n        <ng-container\n          *ngComponentOutlet=\"componentType; inputs: childValue(child)\"\n        ></ng-container>\n      </ng-container>\n    </div>\n  `,\n})\nexport class NavListComponent {\n  @Input() __ngContext__ = '';\n  @Input() componentType = NavListItemComponent;\n\n  @ContentChildren(NavListItemComponent)\n  children?: QueryList<NavListItemComponent>;\n\n  @Input() color: Color = 'primary';\n  @Input() icon: Icon = 'info';\n\n  childValue(child: NavListItemComponent): Record<string, any> {\n    const { ref, ...rest } = child;\n    return rest;\n  }\n}\n\n@NgModule({\n  imports: [NavListComponent, NavListItemComponent],\n  exports: [NavListComponent, NavListItemComponent],\n})\nexport class NavListModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "NavListComponent"
                        },
                        {
                            "name": "NavListItemComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NavListComponent"
                        },
                        {
                            "name": "NavListItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabModule",
            "id": "module-TabModule-9dee7ebf27e96733407d4e5d905bc5522a1764a6ee10787f4b77391aed2ce716f73113fd5c3654f897a10ca40192aa893fcd66d15b1b695425571b7607accc48",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/tab/tab.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { TabDirective } from './tab.directive';\r\nimport { TabContainerComponent } from './tab-container.component';\r\n\r\n@NgModule({\r\n  declarations: [TabDirective],\r\n  imports: [TabContainerComponent],\r\n  exports: [TabContainerComponent, TabDirective],\r\n})\r\nexport class TabModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TabContainerComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabContainerComponent"
                        },
                        {
                            "name": "TabDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'red',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/alert works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app-auth works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app-inventory works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/colors works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/fonts works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/list works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { label: 'Triger 1' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Triger 1/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'primary',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/nav-list works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/notification works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/stepper works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sticky-notes works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab-container works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/table works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/toolbar works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Raised Button',\n    variant: 'raised',\n    color: 'secondary',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Raised Button/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Combined',\n    variant: 'basic',\n    icon: 'info',\n    color: 'primary',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Combined/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    icon: 'info',\n    color: 'secondary',\n    variant: 'stroked',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/icon-button works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sample-buttons works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/boolean-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: '',\n    label: '',\n    error: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/common-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: '',\n    value: '',\n    type: 'text',\n    autocomplete: 'on',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: '',\n    name: 'category',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'category',\n    variant: 'basic',\n    icon: 'category',\n\n    options: [\n      { icon: 'computer', value: 'PC' },\n      { icon: 'bed', value: 'Furniture' },\n      { icon: 'water', value: 'Food' },\n    ],\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByLabelText(/Category/gi)).toBeTruthy();\n    const elem = canvas.getByLabelText(/Category/gi);\n    userEvent.click(elem);\n\n    const option1 = canvas.getByTestId('B 1');\n\n    userEvent.click(option1, { delay: 200 });\n\n    // userEvent.selectOptions(elem, 'Option 1');\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'name',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'Age',\n    variant: 'basic',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const inputElement = canvas.getByLabelText(/Age/gi);\n    expect(inputElement).toBeTruthy();\n    userEvent.type(inputElement, '12345');\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/search-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: '',\n    name: 'category',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'category',\n    variant: 'basic',\n    icon: 'category',\n    options: [\n      { icon: 'info', value: 'A 1' },\n      { icon: 'info', value: 'B 1' },\n      { icon: 'info', value: 'C 1' },\n      { icon: 'info', value: 'D 1' },\n      { icon: 'info', value: 'E 1' },\n      { icon: 'info', value: 'F 1' },\n      { icon: 'info', value: 'G 1' },\n      { icon: 'info', value: 'H 1' },\n      {\n        icon: 'info',\n        value: 'Very long option. Very long option . Very long option',\n      },\n      { icon: 'info', value: 'I 1' },\n      { icon: 'info', value: 'J 1' },\n      { icon: 'info', value: 'K 1 ' },\n      { icon: 'info', value: 'K 1' },\n    ],\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByLabelText(/Category/gi)).toBeTruthy();\n    const elem = canvas.getByLabelText(/Category/gi);\n    userEvent.click(elem);\n\n    const option1 = canvas.getByTestId('B 1');\n\n    userEvent.click(option1, { delay: 200 });\n\n    // userEvent.selectOptions(elem, 'Option 1');\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: '',\n    name: 'name',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'Name',\n    variant: 'basic',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const inputElement = canvas.getByLabelText(/Name/gi);\n\n    expect(inputElement).toBeTruthy();\n\n    userEvent.type(inputElement, 'How you doing');\n    expect(canvas.getByText(/info/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    color: 'primary',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/list-item works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    fill: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/icon works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/nav-list-item works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'tab',\n    borderPosition: 'bottom',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab-button works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/paginator works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "ListOfDays",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n]"
            },
            {
                "name": "ListOfMonths",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n]"
            },
            {
                "name": "LoginForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    children: [\n      {\n        type: 'text',\n        name: 'username',\n        color: 'primary',\n        autocomplete: 'email',\n        label: 'Username',\n        icon: 'email',\n      },\n      {\n        type: 'password',\n        name: 'password',\n        color: 'primary',\n        autocomplete: 'current-password',\n        label: 'Password',\n        icon: 'email',\n      },\n    ] as InputComponent[],\n  } as any,\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AlertComponent>",
                "defaultValue": "{\n  component: AlertComponent,\n  title: 'AlertComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppAuthComponent>",
                "defaultValue": "{\n  component: AppAuthComponent,\n  title: 'AppAuthComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppInventoryComponent>",
                "defaultValue": "{\n  component: AppInventoryComponent,\n  title: 'AppInventoryComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorsComponent>",
                "defaultValue": "{\n  component: ColorsComponent,\n  title: 'ColorsComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FontsComponent>",
                "defaultValue": "{\n  component: FontsComponent,\n  title: 'FontsComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormComponent>",
                "defaultValue": "{\n  component: FormComponent,\n  title: 'FormComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ListComponent>",
                "defaultValue": "{\n  component: ListComponent,\n  title: 'ListComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MenuComponent>",
                "defaultValue": "{\n  component: MenuComponent,\n  title: 'MenuComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavListComponent>",
                "defaultValue": "{\n  component: NavListComponent,\n  title: 'NavListComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NotificationComponent>",
                "defaultValue": "{\n  component: NotificationComponent,\n  title: 'NotificationComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StepperComponent>",
                "defaultValue": "{\n  component: StepperComponent,\n  title: 'StepperComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StickyNotesComponent>",
                "defaultValue": "{\n  component: StickyNotesComponent,\n  title: 'StickyNotesComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabContainerComponent>",
                "defaultValue": "{\n  component: TabContainerComponent,\n  title: 'TabContainerComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\n  component: TableComponent,\n  title: 'TableComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToolbarComponent>",
                "defaultValue": "{\n  component: ToolbarComponent,\n  title: 'ToolbarComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  component: ButtonComponent,\n  title: 'Button Regular',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CombinedButtonComponent>",
                "defaultValue": "{\n  component: CombinedButtonComponent,\n  title: 'Button Combined',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<IconButtonComponent>",
                "defaultValue": "{\n  component: IconButtonComponent,\n  title: 'Button Icon',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SampleButtonsComponent>",
                "defaultValue": "{\n  component: SampleButtonsComponent,\n  title: 'Button',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BooleanInputComponent>",
                "defaultValue": "{\n  component: BooleanInputComponent,\n  title: 'Input Boolean',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CommonInputComponent>",
                "defaultValue": "{\n  component: CommonInputComponent,\n  title: 'CommonInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateInputComponent>",
                "defaultValue": "{\n  component: DateInputComponent,\n  title: 'DateInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DatePickerComponent>",
                "defaultValue": "{\n  component: DatePickerComponent,\n  title: 'Input Date',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\n  component: InputComponent,\n  title: 'Input',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MultipleSelectInputComponent>",
                "defaultValue": "{\n  component: MultipleSelectInputComponent,\n  title: 'Input Multi Select',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NumberInputComponent>",
                "defaultValue": "{\n  component: NumberInputComponent,\n  title: 'Input Number',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SearchInputComponent>",
                "defaultValue": "{\n  component: SearchInputComponent,\n  title: 'SearchInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectInputComponent>",
                "defaultValue": "{\n  component: SelectInputComponent,\n  title: 'Input Select',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextInputComponent>",
                "defaultValue": "{\n  component: TextInputComponent,\n  title: 'Input Text',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ListItemComponent>",
                "defaultValue": "{\n  component: ListItemComponent,\n  title: 'ListItemComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<IconComponent>",
                "defaultValue": "{\n  component: IconComponent,\n  title: 'IconComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavListItemComponent>",
                "defaultValue": "{\n  component: NavListItemComponent,\n  title: 'NavListItemComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabButtonComponent>",
                "defaultValue": "{\n  component: TabButtonComponent,\n  title: 'TabButtonComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PaginatorComponent>",
                "defaultValue": "{\n  component: PaginatorComponent,\n  title: 'PaginatorComponent',\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'red',\n    icon: 'info',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    children: [\n      {\n        type: 'text',\n        name: 'firstName',\n        color: 'primary',\n        autocomplete: 'given-name',\n        label: 'First Name',\n        icon: 'person',\n      },\n    ] as InputComponent[],\n  } as any,\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'warn',\n    icon: 'home',\n    children: [\n      { label: 'List 1', icon: 'apps', color: 'primary' },\n      { label: 'List 2' },\n      { label: 'List 3', color: 'primary' },\n      { label: 'List 4' },\n    ] as any,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Triger 1',\n    color: 'primary',\n    openDirection: 'bottom',\n    children: [\n      { label: 'Label 1', icon: 'info' },\n      { label: 'Label 2', icon: 'info' },\n      { label: 'Label 3', icon: 'info' },\n      { label: 'Label 4', icon: 'info' },\n    ],\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'primary',\n    icon: 'info',\n\n    children: [\n      {\n        label: 'First Item',\n        icon: 'info',\n        color: 'warn',\n      } as NavListItemComponent,\n      {\n        label: 'Secondar Item',\n        icon: 'apps',\n        color: 'red',\n      } as NavListItemComponent,\n      {\n        label: 'Third Item',\n        icon: 'key',\n        color: 'secondary',\n      } as NavListItemComponent,\n    ] as any,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n    variant: 'basic',\n    color: 'primary',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Combined',\n    variant: 'basic',\n    icon: 'info',\n    color: 'primary',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    icon: 'info',\n    color: 'secondary',\n    variant:'raised'\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: '',\n    label: '',\n    error: '',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: '',\n    name: 'name',\n    autocomplete: 'off',\n    color: 'warn',\n    label: 'Date of birth',\n    icon: 'info',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: '',\n    value: '',\n    type: 'text',\n    autocomplete: 'on',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: '',\n    name: 'category',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'category',\n    variant: 'basic',\n    icon: 'category',\n\n    options: [\n      { icon: 'computer', value: 'PC' },\n      { icon: 'bed', value: 'Furniture' },\n      { icon: 'water', value: 'Food' },\n    ],\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'name',\n    color: 'accent',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: '123',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: '',\n    name: 'category',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'category',\n    variant: 'basic',\n    icon: 'category',\n    options: [\n      { icon: 'info', value: 'Option 1' },\n      { icon: 'info', value: 'Option 2' },\n      { icon: 'info', value: 'Option 3' },\n    ],\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: '',\n    name: 'name',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    color: 'primary',\n    icon: 'info',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    fill: '',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    icon: 'info',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'tab',\n    borderPosition: 'bottom',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            }
        ],
        "functions": [
            {
                "name": "monthTable",
                "file": "libs/material/src/api/month-table.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Return 6weeks</p>\n",
                "args": [
                    {
                        "name": "years",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "month",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 33,
                            "end": 38,
                            "flags": 8388608,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "years"
                        },
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 27,
                            "end": 32,
                            "flags": 8388608,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "name": {
                            "pos": 50,
                            "end": 55,
                            "flags": 8388608,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "month"
                        },
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 44,
                            "end": 49,
                            "flags": 8388608,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "tagName": {
                            "pos": 61,
                            "end": 68,
                            "flags": 8388608,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "returns"
                        },
                        "comment": ""
                    }
                ]
            },
            {
                "name": "slideFromRightOnEnter",
                "file": "libs/material/src/api/animations.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "BadgePosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top-right\" | \"top-left\" | \"bottom-left\" | \"bottom-right\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"regular\" | \"big\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButtonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"button\" | \"icon-button\" | \"combined-button\" | \"tab-button\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButttonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"stroked\" | \"inbox\" | \"tab\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Color",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"accent\" | \"warn\" | \"red\" | \"green\" | \"black\" | \"white\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Day",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"Sunday\" | \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "DayNum",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Direction",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top\" | \"right\" | \"bottom\" | \"left\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Hour",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"signature\" | \"10k\" | \"10mp\" | \"11mp\" | \"123\" | \"12mp\" | \"13mp\" | \"14mp\" | \"15mp\" | \"16mp\" | \"17mp\" | \"18_up_rating\" | \"18mp\" | \"19mp\" | \"1k_plus\" | \"1k\" | \"1x_mobiledata\" | \"20mp\" | \"21mp\" | \"22mp\" | \"23mp\" | \"24mp\" | \"2k_plus\" | \"2k\" | \"2mp\" | \"30fps_select\" | \"30fps\" | \"360\" | \"3d_rotation\" | \"3g_mobiledata\" | \"3k_plus\" | \"3k\" | \"3mp\" | \"3p\" | \"4g_mobiledata\" | \"4g_plus_mobiledata\" | \"4k_plus\" | \"4k\" | \"4mp\" | \"5g\" | \"5k_plus\" | \"5k\" | \"5mp\" | \"6_ft_apart\" | \"60fps_select\" | \"60fps\" | \"6k_plus\" | \"6k\" | \"6mp\" | \"7k_plus\" | \"7k\" | \"7mp\" | \"8k_plus\" | \"8k\" | \"8mp\" | \"9k_plus\" | \"9k\" | \"9mp\" | \"abc\" | \"ac_unit\" | \"access_alarm\" | \"access_alarms\" | \"access_time_filled\" | \"access_time\" | \"accessibility_new\" | \"accessibility\" | \"accessible_forward\" | \"accessible\" | \"account_balance_wallet\" | \"account_balance\" | \"account_box\" | \"account_circle\" | \"account_tree\" | \"ad_units\" | \"adb\" | \"add_a_photo\" | \"add_alarm\" | \"add_alert\" | \"add_box\" | \"add_business\" | \"add_card\" | \"add_chart\" | \"add_circle_outline\" | \"add_circle\" | \"add_comment\" | \"add_home_work\" | \"add_home\" | \"add_ic_call\" | \"add_link\" | \"add_location_alt\" | \"add_location\" | \"add_moderator\" | \"add_photo_alternate\" | \"add_reaction\" | \"add_road\" | \"add_shopping_cart\" | \"add_task\" | \"add_to_drive\" | \"add_to_home_screen\" | \"add_to_photos\" | \"add_to_queue\" | \"add\" | \"addchart\" | \"adf_scanner\" | \"adjust\" | \"admin_panel_settings\" | \"ads_click\" | \"agriculture\" | \"air\" | \"airline_seat_flat_angled\" | \"airline_seat_flat\" | \"airline_seat_individual_suite\" | \"airline_seat_legroom_extra\" | \"airline_seat_legroom_normal\" | \"airline_seat_legroom_reduced\" | \"airline_seat_recline_extra\" | \"airline_seat_recline_normal\" | \"airline_stops\" | \"airlines\" | \"airplane_ticket\" | \"airplanemode_active\" | \"airplanemode_inactive\" | \"airplay\" | \"airport_shuttle\" | \"alarm_add\" | \"alarm_off\" | \"alarm_on\" | \"alarm\" | \"album\" | \"align_horizontal_center\" | \"align_horizontal_left\" | \"align_horizontal_right\" | \"align_vertical_bottom\" | \"align_vertical_center\" | \"align_vertical_top\" | \"all_inbox\" | \"all_inclusive\" | \"all_out\" | \"alt_route\" | \"alternate_email\" | \"analytics\" | \"anchor\" | \"android\" | \"animation\" | \"announcement\" | \"aod\" | \"apartment\" | \"api\" | \"app_blocking\" | \"app_registration\" | \"app_settings_alt\" | \"app_shortcut\" | \"approval\" | \"apps_outage\" | \"apps\" | \"architecture\" | \"archive\" | \"area_chart\" | \"arrow_back_ios_new\" | \"arrow_back_ios\" | \"arrow_back\" | \"arrow_circle_down\" | \"arrow_circle_left\" | \"arrow_circle_right\" | \"arrow_circle_up\" | \"arrow_downward\" | \"arrow_drop_down_circle\" | \"arrow_drop_down\" | \"arrow_drop_up\" | \"arrow_forward_ios\" | \"arrow_forward\" | \"arrow_left\" | \"arrow_outward\" | \"arrow_right_alt\" | \"arrow_right\" | \"arrow_upward\" | \"art_track\" | \"article\" | \"aspect_ratio\" | \"assessment\" | \"assignment_ind\" | \"assignment_late\" | \"assignment_return\" | \"assignment_returned\" | \"assignment_turned_in\" | \"assignment\" | \"assist_walker\" | \"assistant_direction\" | \"assistant_photo\" | \"assistant\" | \"assured_workload\" | \"atm\" | \"attach_email\" | \"attach_file\" | \"attach_money\" | \"attachment\" | \"attractions\" | \"attribution\" | \"audio_file\" | \"audiotrack\" | \"auto_awesome_mosaic\" | \"auto_awesome_motion\" | \"auto_awesome\" | \"auto_delete\" | \"auto_fix_high\" | \"auto_fix_normal\" | \"auto_fix_off\" | \"auto_graph\" | \"auto_mode\" | \"auto_stories\" | \"autofps_select\" | \"autorenew\" | \"av_timer\" | \"baby_changing_station\" | \"back_hand\" | \"backpack\" | \"backspace\" | \"backup_table\" | \"backup\" | \"badge\" | \"bakery_dining\" | \"balance\" | \"balcony\" | \"ballot\" | \"bar_chart\" | \"batch_prediction\" | \"bathroom\" | \"bathtub\" | \"battery_0_bar\" | \"battery_1_bar\" | \"battery_2_bar\" | \"battery_3_bar\" | \"battery_4_bar\" | \"battery_5_bar\" | \"battery_6_bar\" | \"battery_alert\" | \"battery_charging_full\" | \"battery_full\" | \"battery_saver\" | \"battery_std\" | \"battery_unknown\" | \"beach_access\" | \"bed\" | \"bedroom_baby\" | \"bedroom_child\" | \"bedroom_parent\" | \"bedtime_off\" | \"bedtime\" | \"beenhere\" | \"bento\" | \"bike_scooter\" | \"biotech\" | \"blender\" | \"blind\" | \"blinds_closed\" | \"blinds\" | \"block\" | \"bloodtype\" | \"bluetooth_audio\" | \"bluetooth_connected\" | \"bluetooth_disabled\" | \"bluetooth_drive\" | \"bluetooth_searching\" | \"bluetooth\" | \"blur_circular\" | \"blur_linear\" | \"blur_off\" | \"blur_on\" | \"bolt\" | \"book_online\" | \"book\" | \"bookmark_add\" | \"bookmark_added\" | \"bookmark_border\" | \"bookmark_remove\" | \"bookmark\" | \"bookmarks\" | \"border_all\" | \"border_bottom\" | \"border_clear\" | \"border_color\" | \"border_horizontal\" | \"border_inner\" | \"border_left\" | \"border_outer\" | \"border_right\" | \"border_style\" | \"border_top\" | \"border_vertical\" | \"boy\" | \"branding_watermark\" | \"breakfast_dining\" | \"brightness_1\" | \"brightness_2\" | \"brightness_3\" | \"brightness_4\" | \"brightness_5\" | \"brightness_6\" | \"brightness_7\" | \"brightness_auto\" | \"brightness_high\" | \"brightness_low\" | \"brightness_medium\" | \"broadcast_on_home\" | \"broadcast_on_personal\" | \"broken_image\" | \"browse_gallery\" | \"browser_not_supported\" | \"browser_updated\" | \"brunch_dining\" | \"brush\" | \"bubble_chart\" | \"bug_report\" | \"build_circle\" | \"build\" | \"bungalow\" | \"burst_mode\" | \"bus_alert\" | \"business_center\" | \"business\" | \"cabin\" | \"cable\" | \"cached\" | \"cake\" | \"calculate\" | \"calendar_month\" | \"calendar_today\" | \"calendar_view_day\" | \"calendar_view_month\" | \"calendar_view_week\" | \"call_end\" | \"call_made\" | \"call_merge\" | \"call_missed_outgoing\" | \"call_missed\" | \"call_received\" | \"call_split\" | \"call_to_action\" | \"call\" | \"camera_alt\" | \"camera_enhance\" | \"camera_front\" | \"camera_indoor\" | \"camera_outdoor\" | \"camera_rear\" | \"camera_roll\" | \"camera\" | \"cameraswitch\" | \"campaign\" | \"cancel_presentation\" | \"cancel_schedule_send\" | \"cancel\" | \"candlestick_chart\" | \"car_crash\" | \"car_rental\" | \"car_repair\" | \"card_giftcard\" | \"card_membership\" | \"card_travel\" | \"carpenter\" | \"cases\" | \"casino\" | \"cast_connected\" | \"cast_for_education\" | \"cast\" | \"castle\" | \"catching_pokemon\" | \"category\" | \"celebration\" | \"cell_tower\" | \"cell_wifi\" | \"center_focus_strong\" | \"center_focus_weak\" | \"chair_alt\" | \"chair\" | \"chalet\" | \"change_circle\" | \"change_history\" | \"charging_station\" | \"chat_bubble_outline\" | \"chat_bubble\" | \"chat\" | \"check_box_outline_blank\" | \"check_box\" | \"check_circle_outline\" | \"check_circle\" | \"check\" | \"checklist_rtl\" | \"checklist\" | \"checkroom\" | \"chevron_left\" | \"chevron_right\" | \"child_care\" | \"child_friendly\" | \"chrome_reader_mode\" | \"church\" | \"circle_notifications\" | \"circle\" | \"class\" | \"clean_hands\" | \"cleaning_services\" | \"clear_all\" | \"clear\" | \"close_fullscreen\" | \"close\" | \"closed_caption_disabled\" | \"closed_caption_off\" | \"closed_caption\" | \"cloud_circle\" | \"cloud_done\" | \"cloud_download\" | \"cloud_off\" | \"cloud_queue\" | \"cloud_sync\" | \"cloud_upload\" | \"cloud\" | \"co_present\" | \"co2\" | \"code_off\" | \"code\" | \"coffee_maker\" | \"coffee\" | \"collections_bookmark\" | \"collections\" | \"color_lens\" | \"colorize\" | \"comment_bank\" | \"comment\" | \"comments_disabled\" | \"commit\" | \"commute\" | \"compare_arrows\" | \"compare\" | \"compass_calibration\" | \"compost\" | \"compress\" | \"computer\" | \"confirmation_number\" | \"connect_without_contact\" | \"connected_tv\" | \"connecting_airports\" | \"construction\" | \"contact_emergency\" | \"contact_mail\" | \"contact_page\" | \"contact_phone\" | \"contact_support\" | \"contactless\" | \"contacts\" | \"content_copy\" | \"content_cut\" | \"content_paste_go\" | \"content_paste_off\" | \"content_paste_search\" | \"content_paste\" | \"contrast\" | \"control_camera\" | \"control_point_duplicate\" | \"control_point\" | \"cookie\" | \"copy_all\" | \"copyright\" | \"coronavirus\" | \"corporate_fare\" | \"cottage\" | \"countertops\" | \"create_new_folder\" | \"create\" | \"credit_card_off\" | \"credit_card\" | \"credit_score\" | \"crib\" | \"crisis_alert\" | \"crop_16_9\" | \"crop_3_2\" | \"crop_5_4\" | \"crop_7_5\" | \"crop_din\" | \"crop_free\" | \"crop_landscape\" | \"crop_original\" | \"crop_portrait\" | \"crop_rotate\" | \"crop_square\" | \"crop\" | \"cruelty_free\" | \"css\" | \"currency_bitcoin\" | \"currency_exchange\" | \"currency_franc\" | \"currency_lira\" | \"currency_pound\" | \"currency_ruble\" | \"currency_rupee\" | \"currency_yen\" | \"currency_yuan\" | \"curtains_closed\" | \"curtains\" | \"cyclone\" | \"dangerous\" | \"dark_mode\" | \"dashboard_customize\" | \"dashboard\" | \"data_array\" | \"data_exploration\" | \"data_object\" | \"data_saver_off\" | \"data_saver_on\" | \"data_thresholding\" | \"data_usage\" | \"dataset_linked\" | \"dataset\" | \"date_range\" | \"deblur\" | \"deck\" | \"dehaze\" | \"delete_forever\" | \"delete_outline\" | \"delete_sweep\" | \"delete\" | \"delivery_dining\" | \"density_large\" | \"density_medium\" | \"density_small\" | \"departure_board\" | \"description\" | \"deselect\" | \"design_services\" | \"desk\" | \"desktop_access_disabled\" | \"desktop_mac\" | \"desktop_windows\" | \"details\" | \"developer_board_off\" | \"developer_board\" | \"developer_mode\" | \"device_hub\" | \"device_thermostat\" | \"device_unknown\" | \"devices_fold\" | \"devices_other\" | \"devices\" | \"dialer_sip\" | \"dialpad\" | \"diamond\" | \"difference\" | \"dining\" | \"dinner_dining\" | \"directions_bike\" | \"directions_boat_filled\" | \"directions_boat\" | \"directions_bus_filled\" | \"directions_bus\" | \"directions_car_filled\" | \"directions_car\" | \"directions_off\" | \"directions_railway_filled\" | \"directions_railway\" | \"directions_run\" | \"directions_subway_filled\" | \"directions_subway\" | \"directions_transit_filled\" | \"directions_transit\" | \"directions_walk\" | \"directions\" | \"dirty_lens\" | \"disabled_by_default\" | \"disabled_visible\" | \"disc_full\" | \"discount\" | \"display_settings\" | \"diversity_1\" | \"diversity_2\" | \"diversity_3\" | \"dns\" | \"do_disturb_alt\" | \"do_disturb_off\" | \"do_disturb_on\" | \"do_disturb\" | \"do_not_disturb_alt\" | \"do_not_disturb_off\" | \"do_not_disturb_on_total_silence\" | \"do_not_disturb_on\" | \"do_not_disturb\" | \"do_not_step\" | \"do_not_touch\" | \"dock\" | \"document_scanner\" | \"domain_add\" | \"domain_disabled\" | \"domain_verification\" | \"domain\" | \"done_all\" | \"done_outline\" | \"done\" | \"donut_large\" | \"donut_small\" | \"door_back\" | \"door_front\" | \"door_sliding\" | \"doorbell\" | \"double_arrow\" | \"downhill_skiing\" | \"download_done\" | \"download_for_offline\" | \"download\" | \"downloading\" | \"drafts\" | \"drag_handle\" | \"drag_indicator\" | \"draw\" | \"drive_eta\" | \"drive_file_move_rtl\" | \"drive_file_move\" | \"drive_file_rename_outline\" | \"drive_folder_upload\" | \"dry_cleaning\" | \"dry\" | \"duo\" | \"dvr\" | \"dynamic_feed\" | \"dynamic_form\" | \"e_mobiledata\" | \"earbuds_battery\" | \"earbuds\" | \"east\" | \"edgesensor_high\" | \"edgesensor_low\" | \"edit_attributes\" | \"edit_calendar\" | \"edit_location_alt\" | \"edit_location\" | \"edit_note\" | \"edit_notifications\" | \"edit_off\" | \"edit_road\" | \"edit\" | \"egg_alt\" | \"egg\" | \"eject\" | \"elderly_woman\" | \"elderly\" | \"electric_bike\" | \"electric_bolt\" | \"electric_car\" | \"electric_meter\" | \"electric_moped\" | \"electric_rickshaw\" | \"electric_scooter\" | \"electrical_services\" | \"elevator\" | \"email\" | \"emergency_recording\" | \"emergency_share\" | \"emergency\" | \"emoji_emotions\" | \"emoji_events\" | \"emoji_food_beverage\" | \"emoji_nature\" | \"emoji_objects\" | \"emoji_people\" | \"emoji_symbols\" | \"emoji_transportation\" | \"energy_savings_leaf\" | \"engineering\" | \"enhanced_encryption\" | \"equalizer\" | \"error_outline\" | \"error\" | \"escalator_warning\" | \"escalator\" | \"euro_symbol\" | \"euro\" | \"ev_station\" | \"event_available\" | \"event_busy\" | \"event_note\" | \"event_repeat\" | \"event_seat\" | \"event\" | \"exit_to_app\" | \"expand_circle_down\" | \"expand_less\" | \"expand_more\" | \"expand\" | \"explicit\" | \"explore_off\" | \"explore\" | \"exposure_neg_1\" | \"exposure_neg_2\" | \"exposure_plus_1\" | \"exposure_plus_2\" | \"exposure_zero\" | \"exposure\" | \"extension_off\" | \"extension\" | \"face_2\" | \"face_3\" | \"face_4\" | \"face_5\" | \"face_6\" | \"face_retouching_natural\" | \"face_retouching_off\" | \"face_unlock\" | \"face\" | \"fact_check\" | \"factory\" | \"family_restroom\" | \"fast_forward\" | \"fast_rewind\" | \"fastfood\" | \"favorite_border\" | \"favorite\" | \"fax\" | \"featured_play_list\" | \"featured_video\" | \"feed\" | \"feedback\" | \"female\" | \"fence\" | \"festival\" | \"fiber_dvr\" | \"fiber_manual_record\" | \"fiber_new\" | \"fiber_pin\" | \"fiber_smart_record\" | \"file_copy\" | \"file_download_done\" | \"file_download_off\" | \"file_download\" | \"file_open\" | \"file_present\" | \"file_upload\" | \"filter_1\" | \"filter_2\" | \"filter_3\" | \"filter_4\" | \"filter_5\" | \"filter_6\" | \"filter_7\" | \"filter_8\" | \"filter_9_plus\" | \"filter_9\" | \"filter_alt_off\" | \"filter_alt\" | \"filter_b_and_w\" | \"filter_center_focus\" | \"filter_drama\" | \"filter_frames\" | \"filter_hdr\" | \"filter_list_off\" | \"filter_list\" | \"filter_none\" | \"filter_tilt_shift\" | \"filter_vintage\" | \"filter\" | \"find_in_page\" | \"find_replace\" | \"fingerprint\" | \"fire_extinguisher\" | \"fire_hydrant_alt\" | \"fire_truck\" | \"fireplace\" | \"first_page\" | \"fit_screen\" | \"fitbit\" | \"fitness_center\" | \"flag_circle\" | \"flag\" | \"flaky\" | \"flare\" | \"flash_auto\" | \"flash_off\" | \"flash_on\" | \"flashlight_off\" | \"flashlight_on\" | \"flatware\" | \"flight_class\" | \"flight_land\" | \"flight_takeoff\" | \"flight\" | \"flip_camera_android\" | \"flip_camera_ios\" | \"flip_to_back\" | \"flip_to_front\" | \"flip\" | \"flood\" | \"fluorescent\" | \"flutter_dash\" | \"fmd_bad\" | \"fmd_good\" | \"folder_copy\" | \"folder_delete\" | \"folder_off\" | \"folder_open\" | \"folder_shared\" | \"folder_special\" | \"folder_zip\" | \"folder\" | \"follow_the_signs\" | \"font_download_off\" | \"font_download\" | \"food_bank\" | \"forest\" | \"fork_left\" | \"fork_right\" | \"format_align_center\" | \"format_align_justify\" | \"format_align_left\" | \"format_align_right\" | \"format_bold\" | \"format_clear\" | \"format_color_fill\" | \"format_color_reset\" | \"format_color_text\" | \"format_indent_decrease\" | \"format_indent_increase\" | \"format_italic\" | \"format_line_spacing\" | \"format_list_bulleted\" | \"format_list_numbered_rtl\" | \"format_list_numbered\" | \"format_overline\" | \"format_paint\" | \"format_quote\" | \"format_shapes\" | \"format_size\" | \"format_strikethrough\" | \"format_textdirection_l_to_r\" | \"format_textdirection_r_to_l\" | \"format_underlined\" | \"fort\" | \"forum\" | \"forward_10\" | \"forward_30\" | \"forward_5\" | \"forward_to_inbox\" | \"forward\" | \"foundation\" | \"free_breakfast\" | \"free_cancellation\" | \"front_hand\" | \"fullscreen_exit\" | \"fullscreen\" | \"functions\" | \"g_mobiledata\" | \"g_translate\" | \"gamepad\" | \"games\" | \"garage\" | \"gas_meter\" | \"gavel\" | \"generating_tokens\" | \"gesture\" | \"get_app\" | \"gif_box\" | \"gif\" | \"girl\" | \"gite\" | \"golf_course\" | \"gpp_bad\" | \"gpp_good\" | \"gpp_maybe\" | \"gps_fixed\" | \"gps_not_fixed\" | \"gps_off\" | \"grade\" | \"gradient\" | \"grading\" | \"grain\" | \"graphic_eq\" | \"grass\" | \"grid_3x3\" | \"grid_4x4\" | \"grid_goldenratio\" | \"grid_off\" | \"grid_on\" | \"grid_view\" | \"group_add\" | \"group_off\" | \"group_remove\" | \"group_work\" | \"group\" | \"groups_2\" | \"groups_3\" | \"groups\" | \"h_mobiledata\" | \"h_plus_mobiledata\" | \"hail\" | \"handshake\" | \"handyman\" | \"hardware\" | \"hd\" | \"hdr_auto_select\" | \"hdr_auto\" | \"hdr_enhanced_select\" | \"hdr_off_select\" | \"hdr_off\" | \"hdr_on_select\" | \"hdr_on\" | \"hdr_plus\" | \"hdr_strong\" | \"hdr_weak\" | \"headphones_battery\" | \"headphones\" | \"headset_mic\" | \"headset_off\" | \"headset\" | \"healing\" | \"health_and_safety\" | \"hearing_disabled\" | \"hearing\" | \"heart_broken\" | \"heat_pump\" | \"height\" | \"help_center\" | \"help_outline\" | \"help\" | \"hevc\" | \"hexagon\" | \"hide_image\" | \"hide_source\" | \"high_quality\" | \"highlight_alt\" | \"highlight_off\" | \"highlight\" | \"hiking\" | \"history_edu\" | \"history_toggle_off\" | \"history\" | \"hive\" | \"hls_off\" | \"hls\" | \"holiday_village\" | \"home_max\" | \"home_mini\" | \"home_repair_service\" | \"home_work\" | \"home\" | \"horizontal_distribute\" | \"horizontal_rule\" | \"horizontal_split\" | \"hot_tub\" | \"hotel_class\" | \"hotel\" | \"hourglass_bottom\" | \"hourglass_disabled\" | \"hourglass_empty\" | \"hourglass_full\" | \"hourglass_top\" | \"house_siding\" | \"house\" | \"houseboat\" | \"how_to_reg\" | \"how_to_vote\" | \"html\" | \"http\" | \"https\" | \"hub\" | \"hvac\" | \"ice_skating\" | \"icecream\" | \"image_aspect_ratio\" | \"image_not_supported\" | \"image_search\" | \"image\" | \"imagesearch_roller\" | \"import_contacts\" | \"import_export\" | \"important_devices\" | \"inbox\" | \"incomplete_circle\" | \"indeterminate_check_box\" | \"info_outline\" | \"info\" | \"input\" | \"insert_chart_outlined\" | \"insert_chart\" | \"insert_comment\" | \"insert_drive_file\" | \"insert_emoticon\" | \"insert_invitation\" | \"insert_link\" | \"insert_page_break\" | \"insert_photo\" | \"insights\" | \"install_desktop\" | \"install_mobile\" | \"integration_instructions\" | \"interests\" | \"interpreter_mode\" | \"inventory_2\" | \"inventory\" | \"invert_colors_off\" | \"invert_colors\" | \"ios_share\" | \"iron\" | \"iso\" | \"javascript\" | \"join_full\" | \"join_inner\" | \"join_left\" | \"join_right\" | \"kayaking\" | \"kebab_dining\" | \"key_off\" | \"key\" | \"keyboard_alt\" | \"keyboard_arrow_down\" | \"keyboard_arrow_left\" | \"keyboard_arrow_right\" | \"keyboard_arrow_up\" | \"keyboard_backspace\" | \"keyboard_capslock\" | \"keyboard_command_key\" | \"keyboard_control_key\" | \"keyboard_double_arrow_down\" | \"keyboard_double_arrow_left\" | \"keyboard_double_arrow_right\" | \"keyboard_double_arrow_up\" | \"keyboard_hide\" | \"keyboard_option_key\" | \"keyboard_return\" | \"keyboard_tab\" | \"keyboard_voice\" | \"keyboard\" | \"king_bed\" | \"kitchen\" | \"kitesurfing\" | \"label_important_outline\" | \"label_important\" | \"label_off\" | \"label\" | \"lan\" | \"landscape\" | \"landslide\" | \"language\" | \"laptop_chromebook\" | \"laptop_mac\" | \"laptop_windows\" | \"laptop\" | \"last_page\" | \"launch\" | \"layers_clear\" | \"layers\" | \"leaderboard\" | \"leak_add\" | \"leak_remove\" | \"legend_toggle\" | \"lens_blur\" | \"lens\" | \"library_add_check\" | \"library_add\" | \"library_books\" | \"library_music\" | \"light_mode\" | \"light\" | \"lightbulb_circle\" | \"lightbulb_outline\" | \"lightbulb\" | \"line_axis\" | \"line_style\" | \"line_weight\" | \"linear_scale\" | \"link_off\" | \"link\" | \"linked_camera\" | \"liquor\" | \"list_alt\" | \"list\" | \"live_help\" | \"live_tv\" | \"living\" | \"local_activity\" | \"local_airport\" | \"local_atm\" | \"local_bar\" | \"local_cafe\" | \"local_car_wash\" | \"local_convenience_store\" | \"local_dining\" | \"local_drink\" | \"local_fire_department\" | \"local_florist\" | \"local_gas_station\" | \"local_grocery_store\" | \"local_hospital\" | \"local_hotel\" | \"local_laundry_service\" | \"local_library\" | \"local_mall\" | \"local_movies\" | \"local_offer\" | \"local_parking\" | \"local_pharmacy\" | \"local_phone\" | \"local_pizza\" | \"local_play\" | \"local_police\" | \"local_post_office\" | \"local_printshop\" | \"local_see\" | \"local_shipping\" | \"local_taxi\" | \"location_city\" | \"location_disabled\" | \"location_off\" | \"location_on\" | \"location_searching\" | \"lock_clock\" | \"lock_open\" | \"lock_outline\" | \"lock_person\" | \"lock_reset\" | \"lock\" | \"login\" | \"logo_dev\" | \"logout\" | \"looks_3\" | \"looks_4\" | \"looks_5\" | \"looks_6\" | \"looks_one\" | \"looks_two\" | \"looks\" | \"loop\" | \"loupe\" | \"low_priority\" | \"loyalty\" | \"lte_mobiledata\" | \"lte_plus_mobiledata\" | \"luggage\" | \"lunch_dining\" | \"lyrics\" | \"macro_off\" | \"mail_lock\" | \"mail_outline\" | \"mail\" | \"male\" | \"man_2\" | \"man_3\" | \"man_4\" | \"man\" | \"manage_accounts\" | \"manage_history\" | \"manage_search\" | \"map\" | \"maps_home_work\" | \"maps_ugc\" | \"margin\" | \"mark_as_unread\" | \"mark_chat_read\" | \"mark_chat_unread\" | \"mark_email_read\" | \"mark_email_unread\" | \"mark_unread_chat_alt\" | \"markunread_mailbox\" | \"markunread\" | \"masks\" | \"maximize\" | \"media_bluetooth_off\" | \"media_bluetooth_on\" | \"mediation\" | \"medical_information\" | \"medical_services\" | \"medication_liquid\" | \"medication\" | \"meeting_room\" | \"memory\" | \"menu_book\" | \"menu_open\" | \"menu\" | \"merge_type\" | \"merge\" | \"message\" | \"mic_external_off\" | \"mic_external_on\" | \"mic_none\" | \"mic_off\" | \"mic\" | \"microwave\" | \"military_tech\" | \"minimize\" | \"minor_crash\" | \"miscellaneous_services\" | \"missed_video_call\" | \"mms\" | \"mobile_friendly\" | \"mobile_off\" | \"mobile_screen_share\" | \"mobiledata_off\" | \"mode_comment\" | \"mode_edit_outline\" | \"mode_edit\" | \"mode_fan_off\" | \"mode_night\" | \"mode_of_travel\" | \"mode_standby\" | \"mode\" | \"model_training\" | \"monetization_on\" | \"money_off_csred\" | \"money_off\" | \"money\" | \"monitor_heart\" | \"monitor_weight\" | \"monitor\" | \"monochrome_photos\" | \"mood_bad\" | \"mood\" | \"moped\" | \"more_horiz\" | \"more_time\" | \"more_vert\" | \"more\" | \"mosque\" | \"motion_photos_auto\" | \"motion_photos_off\" | \"motion_photos_on\" | \"motion_photos_pause\" | \"motion_photos_paused\" | \"mouse\" | \"move_down\" | \"move_to_inbox\" | \"move_up\" | \"movie_creation\" | \"movie_filter\" | \"movie\" | \"moving\" | \"mp\" | \"multiline_chart\" | \"multiple_stop\" | \"museum\" | \"music_note\" | \"music_off\" | \"music_video\" | \"my_location\" | \"nat\" | \"nature_people\" | \"nature\" | \"navigate_before\" | \"navigate_next\" | \"navigation\" | \"near_me_disabled\" | \"near_me\" | \"nearby_error\" | \"nearby_off\" | \"nest_cam_wired_stand\" | \"network_cell\" | \"network_check\" | \"network_locked\" | \"network_ping\" | \"network_wifi_1_bar\" | \"network_wifi_2_bar\" | \"network_wifi_3_bar\" | \"network_wifi\" | \"new_label\" | \"new_releases\" | \"newspaper\" | \"next_plan\" | \"next_week\" | \"nfc\" | \"night_shelter\" | \"nightlife\" | \"nightlight_round\" | \"nightlight\" | \"nights_stay\" | \"no_accounts\" | \"no_adult_content\" | \"no_backpack\" | \"no_cell\" | \"no_crash\" | \"no_drinks\" | \"no_encryption_gmailerrorred\" | \"no_encryption\" | \"no_flash\" | \"no_food\" | \"no_luggage\" | \"no_meals\" | \"no_meeting_room\" | \"no_photography\" | \"no_sim\" | \"no_stroller\" | \"no_transfer\" | \"noise_aware\" | \"noise_control_off\" | \"nordic_walking\" | \"north_east\" | \"north_west\" | \"north\" | \"not_accessible\" | \"not_interested\" | \"not_listed_location\" | \"not_started\" | \"note_add\" | \"note_alt\" | \"note\" | \"notes\" | \"notification_add\" | \"notification_important\" | \"notifications_active\" | \"notifications_none\" | \"notifications_off\" | \"notifications_paused\" | \"notifications\" | \"numbers\" | \"offline_bolt\" | \"offline_pin\" | \"offline_share\" | \"oil_barrel\" | \"on_device_training\" | \"ondemand_video\" | \"online_prediction\" | \"opacity\" | \"open_in_browser\" | \"open_in_full\" | \"open_in_new_off\" | \"open_in_new\" | \"open_with\" | \"other_houses\" | \"outbound\" | \"outbox\" | \"outdoor_grill\" | \"outlet\" | \"outlined_flag\" | \"output\" | \"padding\" | \"pages\" | \"pageview\" | \"paid\" | \"palette\" | \"pan_tool_alt\" | \"pan_tool\" | \"panorama_fish_eye\" | \"panorama_horizontal_select\" | \"panorama_horizontal\" | \"panorama_photosphere_select\" | \"panorama_photosphere\" | \"panorama_vertical_select\" | \"panorama_vertical\" | \"panorama_wide_angle_select\" | \"panorama_wide_angle\" | \"panorama\" | \"paragliding\" | \"park\" | \"party_mode\" | \"password\" | \"pattern\" | \"pause_circle_filled\" | \"pause_circle_outline\" | \"pause_circle\" | \"pause_presentation\" | \"pause\" | \"payment\" | \"payments\" | \"pedal_bike\" | \"pending_actions\" | \"pending\" | \"pentagon\" | \"people_alt\" | \"people_outline\" | \"people\" | \"percent\" | \"perm_camera_mic\" | \"perm_contact_calendar\" | \"perm_data_setting\" | \"perm_device_information\" | \"perm_identity\" | \"perm_media\" | \"perm_phone_msg\" | \"perm_scan_wifi\" | \"person_2\" | \"person_3\" | \"person_4\" | \"person_add_alt_1\" | \"person_add_alt\" | \"person_add_disabled\" | \"person_add\" | \"person_off\" | \"person_outline\" | \"person_pin_circle\" | \"person_pin\" | \"person_remove_alt_1\" | \"person_remove\" | \"person_search\" | \"person\" | \"personal_injury\" | \"personal_video\" | \"pest_control_rodent\" | \"pest_control\" | \"pets\" | \"phishing\" | \"phone_android\" | \"phone_bluetooth_speaker\" | \"phone_callback\" | \"phone_disabled\" | \"phone_enabled\" | \"phone_forwarded\" | \"phone_iphone\" | \"phone_locked\" | \"phone_missed\" | \"phone_paused\" | \"phone\" | \"phonelink_erase\" | \"phonelink_lock\" | \"phonelink_off\" | \"phonelink_ring\" | \"phonelink_setup\" | \"phonelink\" | \"photo_album\" | \"photo_camera_back\" | \"photo_camera_front\" | \"photo_camera\" | \"photo_filter\" | \"photo_library\" | \"photo_size_select_actual\" | \"photo_size_select_large\" | \"photo_size_select_small\" | \"photo\" | \"php\" | \"piano_off\" | \"piano\" | \"picture_as_pdf\" | \"picture_in_picture_alt\" | \"picture_in_picture\" | \"pie_chart_outline\" | \"pie_chart\" | \"pin_drop\" | \"pin_end\" | \"pin_invoke\" | \"pin\" | \"pinch\" | \"pivot_table_chart\" | \"pix\" | \"place\" | \"plagiarism\" | \"play_arrow\" | \"play_circle_filled\" | \"play_circle_outline\" | \"play_circle\" | \"play_disabled\" | \"play_for_work\" | \"play_lesson\" | \"playlist_add_check_circle\" | \"playlist_add_check\" | \"playlist_add_circle\" | \"playlist_add\" | \"playlist_play\" | \"playlist_remove\" | \"plumbing\" | \"plus_one\" | \"podcasts\" | \"point_of_sale\" | \"policy\" | \"poll\" | \"polyline\" | \"polymer\" | \"pool\" | \"portable_wifi_off\" | \"portrait\" | \"post_add\" | \"power_input\" | \"power_off\" | \"power_settings_new\" | \"power\" | \"precision_manufacturing\" | \"pregnant_woman\" | \"present_to_all\" | \"preview\" | \"price_change\" | \"price_check\" | \"print_disabled\" | \"print\" | \"priority_high\" | \"privacy_tip\" | \"private_connectivity\" | \"production_quantity_limits\" | \"propane_tank\" | \"propane\" | \"psychology_alt\" | \"psychology\" | \"public_off\" | \"public\" | \"publish\" | \"published_with_changes\" | \"punch_clock\" | \"push_pin\" | \"qr_code_2\" | \"qr_code_scanner\" | \"qr_code\" | \"query_builder\" | \"query_stats\" | \"question_answer\" | \"question_mark\" | \"queue_music\" | \"queue_play_next\" | \"queue\" | \"quickreply\" | \"quiz\" | \"r_mobiledata\" | \"radar\" | \"radio_button_checked\" | \"radio_button_unchecked\" | \"radio\" | \"railway_alert\" | \"ramen_dining\" | \"ramp_left\" | \"ramp_right\" | \"rate_review\" | \"raw_off\" | \"raw_on\" | \"read_more\" | \"real_estate_agent\" | \"receipt_long\" | \"receipt\" | \"recent_actors\" | \"recommend\" | \"record_voice_over\" | \"rectangle\" | \"recycling\" | \"redeem\" | \"redo\" | \"reduce_capacity\" | \"refresh\" | \"remember_me\" | \"remove_circle_outline\" | \"remove_circle\" | \"remove_done\" | \"remove_from_queue\" | \"remove_moderator\" | \"remove_red_eye\" | \"remove_road\" | \"remove_shopping_cart\" | \"remove\" | \"reorder\" | \"repartition\" | \"repeat_on\" | \"repeat_one_on\" | \"repeat_one\" | \"repeat\" | \"replay_10\" | \"replay_30\" | \"replay_5\" | \"replay_circle_filled\" | \"replay\" | \"reply_all\" | \"reply\" | \"report_gmailerrorred\" | \"report_off\" | \"report_problem\" | \"report\" | \"request_page\" | \"request_quote\" | \"reset_tv\" | \"restart_alt\" | \"restaurant_menu\" | \"restaurant\" | \"restore_from_trash\" | \"restore_page\" | \"restore\" | \"reviews\" | \"rice_bowl\" | \"ring_volume\" | \"rocket_launch\" | \"rocket\" | \"roller_shades_closed\" | \"roller_shades\" | \"roller_skating\" | \"roofing\" | \"room_preferences\" | \"room_service\" | \"room\" | \"rotate_90_degrees_ccw\" | \"rotate_90_degrees_cw\" | \"rotate_left\" | \"rotate_right\" | \"roundabout_left\" | \"roundabout_right\" | \"rounded_corner\" | \"route\" | \"router\" | \"rowing\" | \"rss_feed\" | \"rsvp\" | \"rtt\" | \"rule_folder\" | \"rule\" | \"run_circle\" | \"running_with_errors\" | \"rv_hookup\" | \"safety_check\" | \"safety_divider\" | \"sailing\" | \"sanitizer\" | \"satellite_alt\" | \"satellite\" | \"save_alt\" | \"save_as\" | \"save\" | \"saved_search\" | \"savings\" | \"scale\" | \"scanner\" | \"scatter_plot\" | \"schedule_send\" | \"schedule\" | \"schema\" | \"school\" | \"science\" | \"score\" | \"scoreboard\" | \"screen_lock_landscape\" | \"screen_lock_portrait\" | \"screen_lock_rotation\" | \"screen_rotation_alt\" | \"screen_rotation\" | \"screen_search_desktop\" | \"screen_share\" | \"screenshot_monitor\" | \"screenshot\" | \"scuba_diving\" | \"sd_card_alert\" | \"sd_card\" | \"sd_storage\" | \"sd\" | \"search_off\" | \"search\" | \"security_update_good\" | \"security_update_warning\" | \"security_update\" | \"security\" | \"segment\" | \"select_all\" | \"self_improvement\" | \"sell\" | \"send_and_archive\" | \"send_time_extension\" | \"send_to_mobile\" | \"send\" | \"sensor_door\" | \"sensor_occupied\" | \"sensor_window\" | \"sensors_off\" | \"sensors\" | \"sentiment_dissatisfied\" | \"sentiment_neutral\" | \"sentiment_satisfied_alt\" | \"sentiment_satisfied\" | \"sentiment_very_dissatisfied\" | \"sentiment_very_satisfied\" | \"set_meal\" | \"settings_accessibility\" | \"settings_applications\" | \"settings_backup_restore\" | \"settings_bluetooth\" | \"settings_brightness\" | \"settings_cell\" | \"settings_ethernet\" | \"settings_input_antenna\" | \"settings_input_component\" | \"settings_input_composite\" | \"settings_input_hdmi\" | \"settings_input_svideo\" | \"settings_overscan\" | \"settings_phone\" | \"settings_power\" | \"settings_remote\" | \"settings_suggest\" | \"settings_system_daydream\" | \"settings_voice\" | \"settings\" | \"severe_cold\" | \"shape_line\" | \"share_location\" | \"share\" | \"shield_moon\" | \"shield\" | \"shop_2\" | \"shop_two\" | \"shop\" | \"shopping_bag\" | \"shopping_basket\" | \"shopping_cart_checkout\" | \"shopping_cart\" | \"short_text\" | \"shortcut\" | \"show_chart\" | \"shower\" | \"shuffle_on\" | \"shuffle\" | \"shutter_speed\" | \"sick\" | \"sign_language\" | \"signal_cellular_0_bar\" | \"signal_cellular_4_bar\" | \"signal_cellular_alt_1_bar\" | \"signal_cellular_alt_2_bar\" | \"signal_cellular_alt\" | \"signal_cellular_connected_no_internet_0_bar\" | \"signal_cellular_connected_no_internet_4_bar\" | \"signal_cellular_no_sim\" | \"signal_cellular_nodata\" | \"signal_cellular_null\" | \"signal_cellular_off\" | \"signal_wifi_0_bar\" | \"signal_wifi_4_bar_lock\" | \"signal_wifi_4_bar\" | \"signal_wifi_bad\" | \"signal_wifi_connected_no_internet_4\" | \"signal_wifi_off\" | \"signal_wifi_statusbar_4_bar\" | \"signal_wifi_statusbar_connected_no_internet_4\" | \"signal_wifi_statusbar_null\" | \"signpost\" | \"sim_card_alert\" | \"sim_card_download\" | \"sim_card\" | \"single_bed\" | \"sip\" | \"skateboarding\" | \"skip_next\" | \"skip_previous\" | \"sledding\" | \"slideshow\" | \"slow_motion_video\" | \"smart_button\" | \"smart_display\" | \"smart_screen\" | \"smart_toy\" | \"smartphone\" | \"smoke_free\" | \"smoking_rooms\" | \"sms_failed\" | \"sms\" | \"snippet_folder\" | \"snooze\" | \"snowboarding\" | \"snowmobile\" | \"snowshoeing\" | \"soap\" | \"social_distance\" | \"solar_power\" | \"sort_by_alpha\" | \"sort\" | \"sos\" | \"soup_kitchen\" | \"source\" | \"south_america\" | \"south_east\" | \"south_west\" | \"south\" | \"spa\" | \"space_bar\" | \"space_dashboard\" | \"spatial_audio_off\" | \"spatial_audio\" | \"spatial_tracking\" | \"speaker_group\" | \"speaker_notes_off\" | \"speaker_notes\" | \"speaker_phone\" | \"speaker\" | \"speed\" | \"spellcheck\" | \"splitscreen\" | \"spoke\" | \"sports_bar\" | \"sports_baseball\" | \"sports_basketball\" | \"sports_cricket\" | \"sports_esports\" | \"sports_football\" | \"sports_golf\" | \"sports_gymnastics\" | \"sports_handball\" | \"sports_hockey\" | \"sports_kabaddi\" | \"sports_martial_arts\" | \"sports_mma\" | \"sports_motorsports\" | \"sports_rugby\" | \"sports_score\" | \"sports_soccer\" | \"sports_tennis\" | \"sports_volleyball\" | \"sports\" | \"square_foot\" | \"square\" | \"ssid_chart\" | \"stacked_bar_chart\" | \"stacked_line_chart\" | \"stadium\" | \"stairs\" | \"star_border_purple500\" | \"star_border\" | \"star_half\" | \"star_outline\" | \"star_purple500\" | \"star_rate\" | \"star\" | \"stars\" | \"start\" | \"stay_current_landscape\" | \"stay_current_portrait\" | \"stay_primary_landscape\" | \"stay_primary_portrait\" | \"sticky_note_2\" | \"stop_circle\" | \"stop_screen_share\" | \"stop\" | \"storage\" | \"store_mall_directory\" | \"store\" | \"storefront\" | \"storm\" | \"straight\" | \"straighten\" | \"stream\" | \"streetview\" | \"strikethrough_s\" | \"stroller\" | \"style\" | \"subdirectory_arrow_left\" | \"subdirectory_arrow_right\" | \"subject\" | \"subscript\" | \"subscriptions\" | \"subtitles_off\" | \"subtitles\" | \"subway\" | \"summarize\" | \"superscript\" | \"supervised_user_circle\" | \"supervisor_account\" | \"support_agent\" | \"support\" | \"surfing\" | \"surround_sound\" | \"swap_calls\" | \"swap_horiz\" | \"swap_horizontal_circle\" | \"swap_vert\" | \"swap_vertical_circle\" | \"swipe_down_alt\" | \"swipe_down\" | \"swipe_left_alt\" | \"swipe_left\" | \"swipe_right_alt\" | \"swipe_right\" | \"swipe_up_alt\" | \"swipe_up\" | \"swipe_vertical\" | \"swipe\" | \"switch_access_shortcut_add\" | \"switch_access_shortcut\" | \"switch_account\" | \"switch_camera\" | \"switch_left\" | \"switch_right\" | \"switch_video\" | \"synagogue\" | \"sync_alt\" | \"sync_disabled\" | \"sync_lock\" | \"sync_problem\" | \"sync\" | \"system_security_update_good\" | \"system_security_update_warning\" | \"system_security_update\" | \"system_update_alt\" | \"system_update\" | \"tab_unselected\" | \"tab\" | \"table_bar\" | \"table_chart\" | \"table_restaurant\" | \"table_rows\" | \"table_view\" | \"tablet_android\" | \"tablet_mac\" | \"tablet\" | \"tag_faces\" | \"tag\" | \"takeout_dining\" | \"tap_and_play\" | \"tapas\" | \"task_alt\" | \"task\" | \"taxi_alert\" | \"temple_buddhist\" | \"temple_hindu\" | \"terminal\" | \"terrain\" | \"text_decrease\" | \"text_fields\" | \"text_format\" | \"text_increase\" | \"text_rotate_up\" | \"text_rotate_vertical\" | \"text_rotation_angledown\" | \"text_rotation_angleup\" | \"text_rotation_down\" | \"text_rotation_none\" | \"text_snippet\" | \"textsms\" | \"texture\" | \"theater_comedy\" | \"theaters\" | \"thermostat_auto\" | \"thermostat\" | \"thumb_down_alt\" | \"thumb_down_off_alt\" | \"thumb_down\" | \"thumb_up_alt\" | \"thumb_up_off_alt\" | \"thumb_up\" | \"thumbs_up_down\" | \"thunderstorm\" | \"time_to_leave\" | \"timelapse\" | \"timeline\" | \"timer_10_select\" | \"timer_10\" | \"timer_3_select\" | \"timer_3\" | \"timer_off\" | \"timer\" | \"tips_and_updates\" | \"tire_repair\" | \"title\" | \"toc\" | \"today\" | \"toggle_off\" | \"toggle_on\" | \"token\" | \"toll\" | \"tonality\" | \"topic\" | \"tornado\" | \"touch_app\" | \"tour\" | \"toys\" | \"track_changes\" | \"traffic\" | \"train\" | \"tram\" | \"transcribe\" | \"transfer_within_a_station\" | \"transform\" | \"transgender\" | \"transit_enterexit\" | \"translate\" | \"travel_explore\" | \"trending_down\" | \"trending_flat\" | \"trending_up\" | \"trip_origin\" | \"troubleshoot\" | \"try\" | \"tsunami\" | \"tty\" | \"tune\" | \"tungsten\" | \"turn_left\" | \"turn_right\" | \"turn_sharp_left\" | \"turn_sharp_right\" | \"turn_slight_left\" | \"turn_slight_right\" | \"turned_in_not\" | \"turned_in\" | \"tv_off\" | \"tv\" | \"two_wheeler\" | \"type_specimen\" | \"u_turn_left\" | \"u_turn_right\" | \"umbrella\" | \"unarchive\" | \"undo\" | \"unfold_less_double\" | \"unfold_less\" | \"unfold_more_double\" | \"unfold_more\" | \"unpublished\" | \"unsubscribe\" | \"upcoming\" | \"update_disabled\" | \"update\" | \"upgrade\" | \"upload_file\" | \"upload\" | \"usb_off\" | \"usb\" | \"vaccines\" | \"vape_free\" | \"vaping_rooms\" | \"verified_user\" | \"verified\" | \"vertical_align_bottom\" | \"vertical_align_center\" | \"vertical_align_top\" | \"vertical_distribute\" | \"vertical_shades_closed\" | \"vertical_shades\" | \"vertical_split\" | \"vibration\" | \"video_call\" | \"video_camera_back\" | \"video_camera_front\" | \"video_chat\" | \"video_file\" | \"video_label\" | \"video_library\" | \"video_settings\" | \"video_stable\" | \"videocam_off\" | \"videocam\" | \"videogame_asset_off\" | \"videogame_asset\" | \"view_agenda\" | \"view_array\" | \"view_carousel\" | \"view_column\" | \"view_comfy_alt\" | \"view_comfy\" | \"view_compact_alt\" | \"view_compact\" | \"view_cozy\" | \"view_day\" | \"view_headline\" | \"view_in_ar\" | \"view_kanban\" | \"view_list\" | \"view_module\" | \"view_quilt\" | \"view_sidebar\" | \"view_stream\" | \"view_timeline\" | \"view_week\" | \"vignette\" | \"villa\" | \"visibility_off\" | \"visibility\" | \"voice_chat\" | \"voice_over_off\" | \"voicemail\" | \"volcano\" | \"volume_down\" | \"volume_mute\" | \"volume_off\" | \"volume_up\" | \"volunteer_activism\" | \"vpn_key_off\" | \"vpn_key\" | \"vpn_lock\" | \"vrpano\" | \"wallet\" | \"wallpaper\" | \"warehouse\" | \"warning_amber\" | \"warning\" | \"wash\" | \"watch_later\" | \"watch_off\" | \"watch\" | \"water_damage\" | \"water_drop\" | \"water\" | \"waterfall_chart\" | \"waves\" | \"waving_hand\" | \"wb_auto\" | \"wb_cloudy\" | \"wb_incandescent\" | \"wb_iridescent\" | \"wb_shade\" | \"wb_sunny\" | \"wb_twilight\" | \"wc\" | \"web_asset_off\" | \"web_asset\" | \"web_stories\" | \"web\" | \"webhook\" | \"weekend\" | \"west\" | \"whatshot\" | \"wheelchair_pickup\" | \"where_to_vote\" | \"widgets\" | \"width_full\" | \"width_normal\" | \"width_wide\" | \"wifi_1_bar\" | \"wifi_2_bar\" | \"wifi_calling_3\" | \"wifi_calling\" | \"wifi_channel\" | \"wifi_find\" | \"wifi_lock\" | \"wifi_off\" | \"wifi_password\" | \"wifi_protected_setup\" | \"wifi_tethering_error\" | \"wifi_tethering_off\" | \"wifi_tethering\" | \"wifi\" | \"wind_power\" | \"window\" | \"wine_bar\" | \"woman_2\" | \"woman\" | \"work_history\" | \"work_off\" | \"work_outline\" | \"work\" | \"workspace_premium\" | \"workspaces\" | \"wrap_text\" | \"wrong_location\" | \"wysiwyg\" | \"yard\" | \"youtube_searched_for\" | \"zoom_in_map\" | \"zoom_in\" | \"zoom_out_map\" | \"zoom_out\"",
                "file": "libs/material/src/api/icon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "InputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"number\" | \"boolean\" | \"date\" | \"select\" | \"multi-select\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "InputVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ButttonVariant",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Minute",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\" | \"25\" | \"26\" | \"27\" | \"28\" | \"29\" | \"30\" | \"31\" | \"32\" | \"33\" | \"34\" | \"35\" | \"36\" | \"37\" | \"38\" | \"39\" | \"40\" | \"41\" | \"42\" | \"43\" | \"44\" | \"45\" | \"46\" | \"47\" | \"48\" | \"49\" | \"50\" | \"51\" | \"52\" | \"53\" | \"54\" | \"55\" | \"56\" | \"57\" | \"58\" | \"59\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "MonthNames",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"January\" | \"February\" | \"March\" | \"April\" | \"May\" | \"June\" | \"July\" | \"August\" | \"September\" | \"October\" | \"November\" | \"December\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "MonthNum",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"0\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | number",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "SelectOption",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AlertComponent>",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AppAuthComponent>",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AppInventoryComponent>",
                "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorsComponent>",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FontsComponent>",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormComponent>",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ListComponent>",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MenuComponent>",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavListComponent>",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NotificationComponent>",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StepperComponent>",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StickyNotesComponent>",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabContainerComponent>",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "libs/material/src/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToolbarComponent>",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CombinedButtonComponent>",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<IconButtonComponent>",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SampleButtonsComponent>",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BooleanInputComponent>",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CommonInputComponent>",
                "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateInputComponent>",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DatePickerComponent>",
                "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MultipleSelectInputComponent>",
                "file": "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NumberInputComponent>",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SearchInputComponent>",
                "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectInputComponent>",
                "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextInputComponent>",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ListItemComponent>",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<IconComponent>",
                "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavListItemComponent>",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabButtonComponent>",
                "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PaginatorComponent>",
                "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "TabContainerType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sidenav\" | \"tab\"",
                "file": "libs/material/src/tab/tab-container.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/material/src/alert/alert.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'red',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/alert works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AlertComponent>",
                    "defaultValue": "{\n  component: AlertComponent,\n  title: 'AlertComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'red',\n    icon: 'info',\n  },\n}"
                }
            ],
            "libs/material/src/app-auth/app-auth.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app-auth works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppAuthComponent>",
                    "defaultValue": "{\n  component: AppAuthComponent,\n  title: 'AppAuthComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/app-inventory/app-inventory.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app-inventory works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppInventoryComponent>",
                    "defaultValue": "{\n  component: AppInventoryComponent,\n  title: 'AppInventoryComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/colors/colors.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/colors works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorsComponent>",
                    "defaultValue": "{\n  component: ColorsComponent,\n  title: 'ColorsComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/fonts/fonts.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/fonts works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FontsComponent>",
                    "defaultValue": "{\n  component: FontsComponent,\n  title: 'FontsComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/form/form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "LoginForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    children: [\n      {\n        type: 'text',\n        name: 'username',\n        color: 'primary',\n        autocomplete: 'email',\n        label: 'Username',\n        icon: 'email',\n      },\n      {\n        type: 'password',\n        name: 'password',\n        color: 'primary',\n        autocomplete: 'current-password',\n        label: 'Password',\n        icon: 'email',\n      },\n    ] as InputComponent[],\n  } as any,\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormComponent>",
                    "defaultValue": "{\n  component: FormComponent,\n  title: 'FormComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    children: [\n      {\n        type: 'text',\n        name: 'firstName',\n        color: 'primary',\n        autocomplete: 'given-name',\n        label: 'First Name',\n        icon: 'person',\n      },\n    ] as InputComponent[],\n  } as any,\n}"
                }
            ],
            "libs/material/src/list/list.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/list works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ListComponent>",
                    "defaultValue": "{\n  component: ListComponent,\n  title: 'ListComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'warn',\n    icon: 'home',\n    children: [\n      { label: 'List 1', icon: 'apps', color: 'primary' },\n      { label: 'List 2' },\n      { label: 'List 3', color: 'primary' },\n      { label: 'List 4' },\n    ] as any,\n  },\n}"
                }
            ],
            "libs/material/src/menu/menu.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { label: 'Triger 1' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Triger 1/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MenuComponent>",
                    "defaultValue": "{\n  component: MenuComponent,\n  title: 'MenuComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Triger 1',\n    color: 'primary',\n    openDirection: 'bottom',\n    children: [\n      { label: 'Label 1', icon: 'info' },\n      { label: 'Label 2', icon: 'info' },\n      { label: 'Label 3', icon: 'info' },\n      { label: 'Label 4', icon: 'info' },\n    ],\n  },\n}"
                }
            ],
            "libs/material/src/nav-list/nav-list.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'primary',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/nav-list works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavListComponent>",
                    "defaultValue": "{\n  component: NavListComponent,\n  title: 'NavListComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'primary',\n    icon: 'info',\n\n    children: [\n      {\n        label: 'First Item',\n        icon: 'info',\n        color: 'warn',\n      } as NavListItemComponent,\n      {\n        label: 'Secondar Item',\n        icon: 'apps',\n        color: 'red',\n      } as NavListItemComponent,\n      {\n        label: 'Third Item',\n        icon: 'key',\n        color: 'secondary',\n      } as NavListItemComponent,\n    ] as any,\n  },\n}"
                }
            ],
            "libs/material/src/notification/notification.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/notification works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NotificationComponent>",
                    "defaultValue": "{\n  component: NotificationComponent,\n  title: 'NotificationComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/stepper/stepper.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/stepper works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StepperComponent>",
                    "defaultValue": "{\n  component: StepperComponent,\n  title: 'StepperComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/sticky-notes/sticky-notes.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sticky-notes works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StickyNotesComponent>",
                    "defaultValue": "{\n  component: StickyNotesComponent,\n  title: 'StickyNotesComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/tab/tab-container.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab-container works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabContainerComponent>",
                    "defaultValue": "{\n  component: TabContainerComponent,\n  title: 'TabContainerComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/table/table.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/table works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\n  component: TableComponent,\n  title: 'TableComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/toolbar/toolbar.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/toolbar works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToolbarComponent>",
                    "defaultValue": "{\n  component: ToolbarComponent,\n  title: 'ToolbarComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/button/button/button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Raised Button',\n    variant: 'raised',\n    color: 'secondary',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Raised Button/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  component: ButtonComponent,\n  title: 'Button Regular',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n    variant: 'basic',\n    color: 'primary',\n  },\n}"
                }
            ],
            "libs/material/src/button/combined-button/combined-button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Combined',\n    variant: 'basic',\n    icon: 'info',\n    color: 'primary',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Combined/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CombinedButtonComponent>",
                    "defaultValue": "{\n  component: CombinedButtonComponent,\n  title: 'Button Combined',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Combined',\n    variant: 'basic',\n    icon: 'info',\n    color: 'primary',\n  },\n}"
                }
            ],
            "libs/material/src/button/icon-button/icon-button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    icon: 'info',\n    color: 'secondary',\n    variant: 'stroked',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/icon-button works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<IconButtonComponent>",
                    "defaultValue": "{\n  component: IconButtonComponent,\n  title: 'Button Icon',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    icon: 'info',\n    color: 'secondary',\n    variant:'raised'\n  },\n}"
                }
            ],
            "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sample-buttons works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SampleButtonsComponent>",
                    "defaultValue": "{\n  component: SampleButtonsComponent,\n  title: 'Button',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/form/boolean-input/boolean-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/boolean-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BooleanInputComponent>",
                    "defaultValue": "{\n  component: BooleanInputComponent,\n  title: 'Input Boolean',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/form/common-input/common-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: '',\n    label: '',\n    error: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/common-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CommonInputComponent>",
                    "defaultValue": "{\n  component: CommonInputComponent,\n  title: 'CommonInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: '',\n    label: '',\n    error: '',\n  },\n}"
                }
            ],
            "libs/material/src/form/date-input/date-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateInputComponent>",
                    "defaultValue": "{\n  component: DateInputComponent,\n  title: 'DateInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/form/date-picker/date-picker.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DatePickerComponent>",
                    "defaultValue": "{\n  component: DatePickerComponent,\n  title: 'Input Date',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: '',\n    name: 'name',\n    autocomplete: 'off',\n    color: 'warn',\n    label: 'Date of birth',\n    icon: 'info',\n  },\n}"
                }
            ],
            "libs/material/src/form/input/input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: '',\n    value: '',\n    type: 'text',\n    autocomplete: 'on',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\n  component: InputComponent,\n  title: 'Input',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: '',\n    value: '',\n    type: 'text',\n    autocomplete: 'on',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n}"
                }
            ],
            "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: '',\n    name: 'category',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'category',\n    variant: 'basic',\n    icon: 'category',\n\n    options: [\n      { icon: 'computer', value: 'PC' },\n      { icon: 'bed', value: 'Furniture' },\n      { icon: 'water', value: 'Food' },\n    ],\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByLabelText(/Category/gi)).toBeTruthy();\n    const elem = canvas.getByLabelText(/Category/gi);\n    userEvent.click(elem);\n\n    const option1 = canvas.getByTestId('B 1');\n\n    userEvent.click(option1, { delay: 200 });\n\n    // userEvent.selectOptions(elem, 'Option 1');\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MultipleSelectInputComponent>",
                    "defaultValue": "{\n  component: MultipleSelectInputComponent,\n  title: 'Input Multi Select',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: '',\n    name: 'category',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'category',\n    variant: 'basic',\n    icon: 'category',\n\n    options: [\n      { icon: 'computer', value: 'PC' },\n      { icon: 'bed', value: 'Furniture' },\n      { icon: 'water', value: 'Food' },\n    ],\n  },\n}"
                }
            ],
            "libs/material/src/form/number-input/number-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'name',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'Age',\n    variant: 'basic',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const inputElement = canvas.getByLabelText(/Age/gi);\n    expect(inputElement).toBeTruthy();\n    userEvent.type(inputElement, '12345');\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NumberInputComponent>",
                    "defaultValue": "{\n  component: NumberInputComponent,\n  title: 'Input Number',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'name',\n    color: 'accent',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: '123',\n  },\n}"
                }
            ],
            "libs/material/src/form/search-input/search-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/search-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SearchInputComponent>",
                    "defaultValue": "{\n  component: SearchInputComponent,\n  title: 'SearchInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/form/select-input/select-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: '',\n    name: 'category',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'category',\n    variant: 'basic',\n    icon: 'category',\n    options: [\n      { icon: 'info', value: 'A 1' },\n      { icon: 'info', value: 'B 1' },\n      { icon: 'info', value: 'C 1' },\n      { icon: 'info', value: 'D 1' },\n      { icon: 'info', value: 'E 1' },\n      { icon: 'info', value: 'F 1' },\n      { icon: 'info', value: 'G 1' },\n      { icon: 'info', value: 'H 1' },\n      {\n        icon: 'info',\n        value: 'Very long option. Very long option . Very long option',\n      },\n      { icon: 'info', value: 'I 1' },\n      { icon: 'info', value: 'J 1' },\n      { icon: 'info', value: 'K 1 ' },\n      { icon: 'info', value: 'K 1' },\n    ],\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByLabelText(/Category/gi)).toBeTruthy();\n    const elem = canvas.getByLabelText(/Category/gi);\n    userEvent.click(elem);\n\n    const option1 = canvas.getByTestId('B 1');\n\n    userEvent.click(option1, { delay: 200 });\n\n    // userEvent.selectOptions(elem, 'Option 1');\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectInputComponent>",
                    "defaultValue": "{\n  component: SelectInputComponent,\n  title: 'Input Select',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: '',\n    name: 'category',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'category',\n    variant: 'basic',\n    icon: 'category',\n    options: [\n      { icon: 'info', value: 'Option 1' },\n      { icon: 'info', value: 'Option 2' },\n      { icon: 'info', value: 'Option 3' },\n    ],\n  },\n}"
                }
            ],
            "libs/material/src/form/text-input/text-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: '',\n    name: 'name',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'Name',\n    variant: 'basic',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const inputElement = canvas.getByLabelText(/Name/gi);\n\n    expect(inputElement).toBeTruthy();\n\n    userEvent.type(inputElement, 'How you doing');\n    expect(canvas.getByText(/info/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextInputComponent>",
                    "defaultValue": "{\n  component: TextInputComponent,\n  title: 'Input Text',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: '',\n    name: 'name',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n}"
                }
            ],
            "libs/material/src/list/list-item/list-item.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    color: 'primary',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/list-item works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ListItemComponent>",
                    "defaultValue": "{\n  component: ListItemComponent,\n  title: 'ListItemComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    color: 'primary',\n    icon: 'info',\n  },\n}"
                }
            ],
            "libs/material/src/micro/icon/icon.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    fill: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/icon works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<IconComponent>",
                    "defaultValue": "{\n  component: IconComponent,\n  title: 'IconComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    fill: '',\n  },\n}"
                }
            ],
            "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/nav-list-item works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavListItemComponent>",
                    "defaultValue": "{\n  component: NavListItemComponent,\n  title: 'NavListItemComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    icon: 'info',\n  },\n}"
                }
            ],
            "libs/material/src/tab/tab-button/tab-button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'tab',\n    borderPosition: 'bottom',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab-button works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabButtonComponent>",
                    "defaultValue": "{\n  component: TabButtonComponent,\n  title: 'TabButtonComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'tab',\n    borderPosition: 'bottom',\n  },\n}"
                }
            ],
            "libs/material/src/table/paginator/paginator.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/paginator works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PaginatorComponent>",
                    "defaultValue": "{\n  component: PaginatorComponent,\n  title: 'PaginatorComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/api/types.ts": [
                {
                    "name": "ListOfDays",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n]"
                },
                {
                    "name": "ListOfMonths",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n]"
                }
            ]
        },
        "groupedFunctions": {
            "libs/material/src/api/month-table.ts": [
                {
                    "name": "monthTable",
                    "file": "libs/material/src/api/month-table.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Return 6weeks</p>\n",
                    "args": [
                        {
                            "name": "years",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 33,
                                "end": 38,
                                "flags": 8388608,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "years"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 27,
                                "end": 32,
                                "flags": 8388608,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 50,
                                "end": 55,
                                "flags": 8388608,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "month"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 44,
                                "end": 49,
                                "flags": 8388608,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 61,
                                "end": 68,
                                "flags": 8388608,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "libs/material/src/api/animations.ts": [
                {
                    "name": "slideFromRightOnEnter",
                    "file": "libs/material/src/api/animations.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/material/src/api/types.ts": [
                {
                    "name": "BadgePosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top-right\" | \"top-left\" | \"bottom-left\" | \"bottom-right\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"regular\" | \"big\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ButtonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"button\" | \"icon-button\" | \"combined-button\" | \"tab-button\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ButttonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"stroked\" | \"inbox\" | \"tab\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "Color",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"accent\" | \"warn\" | \"red\" | \"green\" | \"black\" | \"white\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "Day",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"Sunday\" | \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "DayNum",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "Direction",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top\" | \"right\" | \"bottom\" | \"left\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "Hour",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "InputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"number\" | \"boolean\" | \"date\" | \"select\" | \"multi-select\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "InputVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ButttonVariant",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "Minute",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\" | \"25\" | \"26\" | \"27\" | \"28\" | \"29\" | \"30\" | \"31\" | \"32\" | \"33\" | \"34\" | \"35\" | \"36\" | \"37\" | \"38\" | \"39\" | \"40\" | \"41\" | \"42\" | \"43\" | \"44\" | \"45\" | \"46\" | \"47\" | \"48\" | \"49\" | \"50\" | \"51\" | \"52\" | \"53\" | \"54\" | \"55\" | \"56\" | \"57\" | \"58\" | \"59\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "MonthNames",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"January\" | \"February\" | \"March\" | \"April\" | \"May\" | \"June\" | \"July\" | \"August\" | \"September\" | \"October\" | \"November\" | \"December\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "MonthNum",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"0\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | number",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "SelectOption",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "libs/material/src/api/icon.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"signature\" | \"10k\" | \"10mp\" | \"11mp\" | \"123\" | \"12mp\" | \"13mp\" | \"14mp\" | \"15mp\" | \"16mp\" | \"17mp\" | \"18_up_rating\" | \"18mp\" | \"19mp\" | \"1k_plus\" | \"1k\" | \"1x_mobiledata\" | \"20mp\" | \"21mp\" | \"22mp\" | \"23mp\" | \"24mp\" | \"2k_plus\" | \"2k\" | \"2mp\" | \"30fps_select\" | \"30fps\" | \"360\" | \"3d_rotation\" | \"3g_mobiledata\" | \"3k_plus\" | \"3k\" | \"3mp\" | \"3p\" | \"4g_mobiledata\" | \"4g_plus_mobiledata\" | \"4k_plus\" | \"4k\" | \"4mp\" | \"5g\" | \"5k_plus\" | \"5k\" | \"5mp\" | \"6_ft_apart\" | \"60fps_select\" | \"60fps\" | \"6k_plus\" | \"6k\" | \"6mp\" | \"7k_plus\" | \"7k\" | \"7mp\" | \"8k_plus\" | \"8k\" | \"8mp\" | \"9k_plus\" | \"9k\" | \"9mp\" | \"abc\" | \"ac_unit\" | \"access_alarm\" | \"access_alarms\" | \"access_time_filled\" | \"access_time\" | \"accessibility_new\" | \"accessibility\" | \"accessible_forward\" | \"accessible\" | \"account_balance_wallet\" | \"account_balance\" | \"account_box\" | \"account_circle\" | \"account_tree\" | \"ad_units\" | \"adb\" | \"add_a_photo\" | \"add_alarm\" | \"add_alert\" | \"add_box\" | \"add_business\" | \"add_card\" | \"add_chart\" | \"add_circle_outline\" | \"add_circle\" | \"add_comment\" | \"add_home_work\" | \"add_home\" | \"add_ic_call\" | \"add_link\" | \"add_location_alt\" | \"add_location\" | \"add_moderator\" | \"add_photo_alternate\" | \"add_reaction\" | \"add_road\" | \"add_shopping_cart\" | \"add_task\" | \"add_to_drive\" | \"add_to_home_screen\" | \"add_to_photos\" | \"add_to_queue\" | \"add\" | \"addchart\" | \"adf_scanner\" | \"adjust\" | \"admin_panel_settings\" | \"ads_click\" | \"agriculture\" | \"air\" | \"airline_seat_flat_angled\" | \"airline_seat_flat\" | \"airline_seat_individual_suite\" | \"airline_seat_legroom_extra\" | \"airline_seat_legroom_normal\" | \"airline_seat_legroom_reduced\" | \"airline_seat_recline_extra\" | \"airline_seat_recline_normal\" | \"airline_stops\" | \"airlines\" | \"airplane_ticket\" | \"airplanemode_active\" | \"airplanemode_inactive\" | \"airplay\" | \"airport_shuttle\" | \"alarm_add\" | \"alarm_off\" | \"alarm_on\" | \"alarm\" | \"album\" | \"align_horizontal_center\" | \"align_horizontal_left\" | \"align_horizontal_right\" | \"align_vertical_bottom\" | \"align_vertical_center\" | \"align_vertical_top\" | \"all_inbox\" | \"all_inclusive\" | \"all_out\" | \"alt_route\" | \"alternate_email\" | \"analytics\" | \"anchor\" | \"android\" | \"animation\" | \"announcement\" | \"aod\" | \"apartment\" | \"api\" | \"app_blocking\" | \"app_registration\" | \"app_settings_alt\" | \"app_shortcut\" | \"approval\" | \"apps_outage\" | \"apps\" | \"architecture\" | \"archive\" | \"area_chart\" | \"arrow_back_ios_new\" | \"arrow_back_ios\" | \"arrow_back\" | \"arrow_circle_down\" | \"arrow_circle_left\" | \"arrow_circle_right\" | \"arrow_circle_up\" | \"arrow_downward\" | \"arrow_drop_down_circle\" | \"arrow_drop_down\" | \"arrow_drop_up\" | \"arrow_forward_ios\" | \"arrow_forward\" | \"arrow_left\" | \"arrow_outward\" | \"arrow_right_alt\" | \"arrow_right\" | \"arrow_upward\" | \"art_track\" | \"article\" | \"aspect_ratio\" | \"assessment\" | \"assignment_ind\" | \"assignment_late\" | \"assignment_return\" | \"assignment_returned\" | \"assignment_turned_in\" | \"assignment\" | \"assist_walker\" | \"assistant_direction\" | \"assistant_photo\" | \"assistant\" | \"assured_workload\" | \"atm\" | \"attach_email\" | \"attach_file\" | \"attach_money\" | \"attachment\" | \"attractions\" | \"attribution\" | \"audio_file\" | \"audiotrack\" | \"auto_awesome_mosaic\" | \"auto_awesome_motion\" | \"auto_awesome\" | \"auto_delete\" | \"auto_fix_high\" | \"auto_fix_normal\" | \"auto_fix_off\" | \"auto_graph\" | \"auto_mode\" | \"auto_stories\" | \"autofps_select\" | \"autorenew\" | \"av_timer\" | \"baby_changing_station\" | \"back_hand\" | \"backpack\" | \"backspace\" | \"backup_table\" | \"backup\" | \"badge\" | \"bakery_dining\" | \"balance\" | \"balcony\" | \"ballot\" | \"bar_chart\" | \"batch_prediction\" | \"bathroom\" | \"bathtub\" | \"battery_0_bar\" | \"battery_1_bar\" | \"battery_2_bar\" | \"battery_3_bar\" | \"battery_4_bar\" | \"battery_5_bar\" | \"battery_6_bar\" | \"battery_alert\" | \"battery_charging_full\" | \"battery_full\" | \"battery_saver\" | \"battery_std\" | \"battery_unknown\" | \"beach_access\" | \"bed\" | \"bedroom_baby\" | \"bedroom_child\" | \"bedroom_parent\" | \"bedtime_off\" | \"bedtime\" | \"beenhere\" | \"bento\" | \"bike_scooter\" | \"biotech\" | \"blender\" | \"blind\" | \"blinds_closed\" | \"blinds\" | \"block\" | \"bloodtype\" | \"bluetooth_audio\" | \"bluetooth_connected\" | \"bluetooth_disabled\" | \"bluetooth_drive\" | \"bluetooth_searching\" | \"bluetooth\" | \"blur_circular\" | \"blur_linear\" | \"blur_off\" | \"blur_on\" | \"bolt\" | \"book_online\" | \"book\" | \"bookmark_add\" | \"bookmark_added\" | \"bookmark_border\" | \"bookmark_remove\" | \"bookmark\" | \"bookmarks\" | \"border_all\" | \"border_bottom\" | \"border_clear\" | \"border_color\" | \"border_horizontal\" | \"border_inner\" | \"border_left\" | \"border_outer\" | \"border_right\" | \"border_style\" | \"border_top\" | \"border_vertical\" | \"boy\" | \"branding_watermark\" | \"breakfast_dining\" | \"brightness_1\" | \"brightness_2\" | \"brightness_3\" | \"brightness_4\" | \"brightness_5\" | \"brightness_6\" | \"brightness_7\" | \"brightness_auto\" | \"brightness_high\" | \"brightness_low\" | \"brightness_medium\" | \"broadcast_on_home\" | \"broadcast_on_personal\" | \"broken_image\" | \"browse_gallery\" | \"browser_not_supported\" | \"browser_updated\" | \"brunch_dining\" | \"brush\" | \"bubble_chart\" | \"bug_report\" | \"build_circle\" | \"build\" | \"bungalow\" | \"burst_mode\" | \"bus_alert\" | \"business_center\" | \"business\" | \"cabin\" | \"cable\" | \"cached\" | \"cake\" | \"calculate\" | \"calendar_month\" | \"calendar_today\" | \"calendar_view_day\" | \"calendar_view_month\" | \"calendar_view_week\" | \"call_end\" | \"call_made\" | \"call_merge\" | \"call_missed_outgoing\" | \"call_missed\" | \"call_received\" | \"call_split\" | \"call_to_action\" | \"call\" | \"camera_alt\" | \"camera_enhance\" | \"camera_front\" | \"camera_indoor\" | \"camera_outdoor\" | \"camera_rear\" | \"camera_roll\" | \"camera\" | \"cameraswitch\" | \"campaign\" | \"cancel_presentation\" | \"cancel_schedule_send\" | \"cancel\" | \"candlestick_chart\" | \"car_crash\" | \"car_rental\" | \"car_repair\" | \"card_giftcard\" | \"card_membership\" | \"card_travel\" | \"carpenter\" | \"cases\" | \"casino\" | \"cast_connected\" | \"cast_for_education\" | \"cast\" | \"castle\" | \"catching_pokemon\" | \"category\" | \"celebration\" | \"cell_tower\" | \"cell_wifi\" | \"center_focus_strong\" | \"center_focus_weak\" | \"chair_alt\" | \"chair\" | \"chalet\" | \"change_circle\" | \"change_history\" | \"charging_station\" | \"chat_bubble_outline\" | \"chat_bubble\" | \"chat\" | \"check_box_outline_blank\" | \"check_box\" | \"check_circle_outline\" | \"check_circle\" | \"check\" | \"checklist_rtl\" | \"checklist\" | \"checkroom\" | \"chevron_left\" | \"chevron_right\" | \"child_care\" | \"child_friendly\" | \"chrome_reader_mode\" | \"church\" | \"circle_notifications\" | \"circle\" | \"class\" | \"clean_hands\" | \"cleaning_services\" | \"clear_all\" | \"clear\" | \"close_fullscreen\" | \"close\" | \"closed_caption_disabled\" | \"closed_caption_off\" | \"closed_caption\" | \"cloud_circle\" | \"cloud_done\" | \"cloud_download\" | \"cloud_off\" | \"cloud_queue\" | \"cloud_sync\" | \"cloud_upload\" | \"cloud\" | \"co_present\" | \"co2\" | \"code_off\" | \"code\" | \"coffee_maker\" | \"coffee\" | \"collections_bookmark\" | \"collections\" | \"color_lens\" | \"colorize\" | \"comment_bank\" | \"comment\" | \"comments_disabled\" | \"commit\" | \"commute\" | \"compare_arrows\" | \"compare\" | \"compass_calibration\" | \"compost\" | \"compress\" | \"computer\" | \"confirmation_number\" | \"connect_without_contact\" | \"connected_tv\" | \"connecting_airports\" | \"construction\" | \"contact_emergency\" | \"contact_mail\" | \"contact_page\" | \"contact_phone\" | \"contact_support\" | \"contactless\" | \"contacts\" | \"content_copy\" | \"content_cut\" | \"content_paste_go\" | \"content_paste_off\" | \"content_paste_search\" | \"content_paste\" | \"contrast\" | \"control_camera\" | \"control_point_duplicate\" | \"control_point\" | \"cookie\" | \"copy_all\" | \"copyright\" | \"coronavirus\" | \"corporate_fare\" | \"cottage\" | \"countertops\" | \"create_new_folder\" | \"create\" | \"credit_card_off\" | \"credit_card\" | \"credit_score\" | \"crib\" | \"crisis_alert\" | \"crop_16_9\" | \"crop_3_2\" | \"crop_5_4\" | \"crop_7_5\" | \"crop_din\" | \"crop_free\" | \"crop_landscape\" | \"crop_original\" | \"crop_portrait\" | \"crop_rotate\" | \"crop_square\" | \"crop\" | \"cruelty_free\" | \"css\" | \"currency_bitcoin\" | \"currency_exchange\" | \"currency_franc\" | \"currency_lira\" | \"currency_pound\" | \"currency_ruble\" | \"currency_rupee\" | \"currency_yen\" | \"currency_yuan\" | \"curtains_closed\" | \"curtains\" | \"cyclone\" | \"dangerous\" | \"dark_mode\" | \"dashboard_customize\" | \"dashboard\" | \"data_array\" | \"data_exploration\" | \"data_object\" | \"data_saver_off\" | \"data_saver_on\" | \"data_thresholding\" | \"data_usage\" | \"dataset_linked\" | \"dataset\" | \"date_range\" | \"deblur\" | \"deck\" | \"dehaze\" | \"delete_forever\" | \"delete_outline\" | \"delete_sweep\" | \"delete\" | \"delivery_dining\" | \"density_large\" | \"density_medium\" | \"density_small\" | \"departure_board\" | \"description\" | \"deselect\" | \"design_services\" | \"desk\" | \"desktop_access_disabled\" | \"desktop_mac\" | \"desktop_windows\" | \"details\" | \"developer_board_off\" | \"developer_board\" | \"developer_mode\" | \"device_hub\" | \"device_thermostat\" | \"device_unknown\" | \"devices_fold\" | \"devices_other\" | \"devices\" | \"dialer_sip\" | \"dialpad\" | \"diamond\" | \"difference\" | \"dining\" | \"dinner_dining\" | \"directions_bike\" | \"directions_boat_filled\" | \"directions_boat\" | \"directions_bus_filled\" | \"directions_bus\" | \"directions_car_filled\" | \"directions_car\" | \"directions_off\" | \"directions_railway_filled\" | \"directions_railway\" | \"directions_run\" | \"directions_subway_filled\" | \"directions_subway\" | \"directions_transit_filled\" | \"directions_transit\" | \"directions_walk\" | \"directions\" | \"dirty_lens\" | \"disabled_by_default\" | \"disabled_visible\" | \"disc_full\" | \"discount\" | \"display_settings\" | \"diversity_1\" | \"diversity_2\" | \"diversity_3\" | \"dns\" | \"do_disturb_alt\" | \"do_disturb_off\" | \"do_disturb_on\" | \"do_disturb\" | \"do_not_disturb_alt\" | \"do_not_disturb_off\" | \"do_not_disturb_on_total_silence\" | \"do_not_disturb_on\" | \"do_not_disturb\" | \"do_not_step\" | \"do_not_touch\" | \"dock\" | \"document_scanner\" | \"domain_add\" | \"domain_disabled\" | \"domain_verification\" | \"domain\" | \"done_all\" | \"done_outline\" | \"done\" | \"donut_large\" | \"donut_small\" | \"door_back\" | \"door_front\" | \"door_sliding\" | \"doorbell\" | \"double_arrow\" | \"downhill_skiing\" | \"download_done\" | \"download_for_offline\" | \"download\" | \"downloading\" | \"drafts\" | \"drag_handle\" | \"drag_indicator\" | \"draw\" | \"drive_eta\" | \"drive_file_move_rtl\" | \"drive_file_move\" | \"drive_file_rename_outline\" | \"drive_folder_upload\" | \"dry_cleaning\" | \"dry\" | \"duo\" | \"dvr\" | \"dynamic_feed\" | \"dynamic_form\" | \"e_mobiledata\" | \"earbuds_battery\" | \"earbuds\" | \"east\" | \"edgesensor_high\" | \"edgesensor_low\" | \"edit_attributes\" | \"edit_calendar\" | \"edit_location_alt\" | \"edit_location\" | \"edit_note\" | \"edit_notifications\" | \"edit_off\" | \"edit_road\" | \"edit\" | \"egg_alt\" | \"egg\" | \"eject\" | \"elderly_woman\" | \"elderly\" | \"electric_bike\" | \"electric_bolt\" | \"electric_car\" | \"electric_meter\" | \"electric_moped\" | \"electric_rickshaw\" | \"electric_scooter\" | \"electrical_services\" | \"elevator\" | \"email\" | \"emergency_recording\" | \"emergency_share\" | \"emergency\" | \"emoji_emotions\" | \"emoji_events\" | \"emoji_food_beverage\" | \"emoji_nature\" | \"emoji_objects\" | \"emoji_people\" | \"emoji_symbols\" | \"emoji_transportation\" | \"energy_savings_leaf\" | \"engineering\" | \"enhanced_encryption\" | \"equalizer\" | \"error_outline\" | \"error\" | \"escalator_warning\" | \"escalator\" | \"euro_symbol\" | \"euro\" | \"ev_station\" | \"event_available\" | \"event_busy\" | \"event_note\" | \"event_repeat\" | \"event_seat\" | \"event\" | \"exit_to_app\" | \"expand_circle_down\" | \"expand_less\" | \"expand_more\" | \"expand\" | \"explicit\" | \"explore_off\" | \"explore\" | \"exposure_neg_1\" | \"exposure_neg_2\" | \"exposure_plus_1\" | \"exposure_plus_2\" | \"exposure_zero\" | \"exposure\" | \"extension_off\" | \"extension\" | \"face_2\" | \"face_3\" | \"face_4\" | \"face_5\" | \"face_6\" | \"face_retouching_natural\" | \"face_retouching_off\" | \"face_unlock\" | \"face\" | \"fact_check\" | \"factory\" | \"family_restroom\" | \"fast_forward\" | \"fast_rewind\" | \"fastfood\" | \"favorite_border\" | \"favorite\" | \"fax\" | \"featured_play_list\" | \"featured_video\" | \"feed\" | \"feedback\" | \"female\" | \"fence\" | \"festival\" | \"fiber_dvr\" | \"fiber_manual_record\" | \"fiber_new\" | \"fiber_pin\" | \"fiber_smart_record\" | \"file_copy\" | \"file_download_done\" | \"file_download_off\" | \"file_download\" | \"file_open\" | \"file_present\" | \"file_upload\" | \"filter_1\" | \"filter_2\" | \"filter_3\" | \"filter_4\" | \"filter_5\" | \"filter_6\" | \"filter_7\" | \"filter_8\" | \"filter_9_plus\" | \"filter_9\" | \"filter_alt_off\" | \"filter_alt\" | \"filter_b_and_w\" | \"filter_center_focus\" | \"filter_drama\" | \"filter_frames\" | \"filter_hdr\" | \"filter_list_off\" | \"filter_list\" | \"filter_none\" | \"filter_tilt_shift\" | \"filter_vintage\" | \"filter\" | \"find_in_page\" | \"find_replace\" | \"fingerprint\" | \"fire_extinguisher\" | \"fire_hydrant_alt\" | \"fire_truck\" | \"fireplace\" | \"first_page\" | \"fit_screen\" | \"fitbit\" | \"fitness_center\" | \"flag_circle\" | \"flag\" | \"flaky\" | \"flare\" | \"flash_auto\" | \"flash_off\" | \"flash_on\" | \"flashlight_off\" | \"flashlight_on\" | \"flatware\" | \"flight_class\" | \"flight_land\" | \"flight_takeoff\" | \"flight\" | \"flip_camera_android\" | \"flip_camera_ios\" | \"flip_to_back\" | \"flip_to_front\" | \"flip\" | \"flood\" | \"fluorescent\" | \"flutter_dash\" | \"fmd_bad\" | \"fmd_good\" | \"folder_copy\" | \"folder_delete\" | \"folder_off\" | \"folder_open\" | \"folder_shared\" | \"folder_special\" | \"folder_zip\" | \"folder\" | \"follow_the_signs\" | \"font_download_off\" | \"font_download\" | \"food_bank\" | \"forest\" | \"fork_left\" | \"fork_right\" | \"format_align_center\" | \"format_align_justify\" | \"format_align_left\" | \"format_align_right\" | \"format_bold\" | \"format_clear\" | \"format_color_fill\" | \"format_color_reset\" | \"format_color_text\" | \"format_indent_decrease\" | \"format_indent_increase\" | \"format_italic\" | \"format_line_spacing\" | \"format_list_bulleted\" | \"format_list_numbered_rtl\" | \"format_list_numbered\" | \"format_overline\" | \"format_paint\" | \"format_quote\" | \"format_shapes\" | \"format_size\" | \"format_strikethrough\" | \"format_textdirection_l_to_r\" | \"format_textdirection_r_to_l\" | \"format_underlined\" | \"fort\" | \"forum\" | \"forward_10\" | \"forward_30\" | \"forward_5\" | \"forward_to_inbox\" | \"forward\" | \"foundation\" | \"free_breakfast\" | \"free_cancellation\" | \"front_hand\" | \"fullscreen_exit\" | \"fullscreen\" | \"functions\" | \"g_mobiledata\" | \"g_translate\" | \"gamepad\" | \"games\" | \"garage\" | \"gas_meter\" | \"gavel\" | \"generating_tokens\" | \"gesture\" | \"get_app\" | \"gif_box\" | \"gif\" | \"girl\" | \"gite\" | \"golf_course\" | \"gpp_bad\" | \"gpp_good\" | \"gpp_maybe\" | \"gps_fixed\" | \"gps_not_fixed\" | \"gps_off\" | \"grade\" | \"gradient\" | \"grading\" | \"grain\" | \"graphic_eq\" | \"grass\" | \"grid_3x3\" | \"grid_4x4\" | \"grid_goldenratio\" | \"grid_off\" | \"grid_on\" | \"grid_view\" | \"group_add\" | \"group_off\" | \"group_remove\" | \"group_work\" | \"group\" | \"groups_2\" | \"groups_3\" | \"groups\" | \"h_mobiledata\" | \"h_plus_mobiledata\" | \"hail\" | \"handshake\" | \"handyman\" | \"hardware\" | \"hd\" | \"hdr_auto_select\" | \"hdr_auto\" | \"hdr_enhanced_select\" | \"hdr_off_select\" | \"hdr_off\" | \"hdr_on_select\" | \"hdr_on\" | \"hdr_plus\" | \"hdr_strong\" | \"hdr_weak\" | \"headphones_battery\" | \"headphones\" | \"headset_mic\" | \"headset_off\" | \"headset\" | \"healing\" | \"health_and_safety\" | \"hearing_disabled\" | \"hearing\" | \"heart_broken\" | \"heat_pump\" | \"height\" | \"help_center\" | \"help_outline\" | \"help\" | \"hevc\" | \"hexagon\" | \"hide_image\" | \"hide_source\" | \"high_quality\" | \"highlight_alt\" | \"highlight_off\" | \"highlight\" | \"hiking\" | \"history_edu\" | \"history_toggle_off\" | \"history\" | \"hive\" | \"hls_off\" | \"hls\" | \"holiday_village\" | \"home_max\" | \"home_mini\" | \"home_repair_service\" | \"home_work\" | \"home\" | \"horizontal_distribute\" | \"horizontal_rule\" | \"horizontal_split\" | \"hot_tub\" | \"hotel_class\" | \"hotel\" | \"hourglass_bottom\" | \"hourglass_disabled\" | \"hourglass_empty\" | \"hourglass_full\" | \"hourglass_top\" | \"house_siding\" | \"house\" | \"houseboat\" | \"how_to_reg\" | \"how_to_vote\" | \"html\" | \"http\" | \"https\" | \"hub\" | \"hvac\" | \"ice_skating\" | \"icecream\" | \"image_aspect_ratio\" | \"image_not_supported\" | \"image_search\" | \"image\" | \"imagesearch_roller\" | \"import_contacts\" | \"import_export\" | \"important_devices\" | \"inbox\" | \"incomplete_circle\" | \"indeterminate_check_box\" | \"info_outline\" | \"info\" | \"input\" | \"insert_chart_outlined\" | \"insert_chart\" | \"insert_comment\" | \"insert_drive_file\" | \"insert_emoticon\" | \"insert_invitation\" | \"insert_link\" | \"insert_page_break\" | \"insert_photo\" | \"insights\" | \"install_desktop\" | \"install_mobile\" | \"integration_instructions\" | \"interests\" | \"interpreter_mode\" | \"inventory_2\" | \"inventory\" | \"invert_colors_off\" | \"invert_colors\" | \"ios_share\" | \"iron\" | \"iso\" | \"javascript\" | \"join_full\" | \"join_inner\" | \"join_left\" | \"join_right\" | \"kayaking\" | \"kebab_dining\" | \"key_off\" | \"key\" | \"keyboard_alt\" | \"keyboard_arrow_down\" | \"keyboard_arrow_left\" | \"keyboard_arrow_right\" | \"keyboard_arrow_up\" | \"keyboard_backspace\" | \"keyboard_capslock\" | \"keyboard_command_key\" | \"keyboard_control_key\" | \"keyboard_double_arrow_down\" | \"keyboard_double_arrow_left\" | \"keyboard_double_arrow_right\" | \"keyboard_double_arrow_up\" | \"keyboard_hide\" | \"keyboard_option_key\" | \"keyboard_return\" | \"keyboard_tab\" | \"keyboard_voice\" | \"keyboard\" | \"king_bed\" | \"kitchen\" | \"kitesurfing\" | \"label_important_outline\" | \"label_important\" | \"label_off\" | \"label\" | \"lan\" | \"landscape\" | \"landslide\" | \"language\" | \"laptop_chromebook\" | \"laptop_mac\" | \"laptop_windows\" | \"laptop\" | \"last_page\" | \"launch\" | \"layers_clear\" | \"layers\" | \"leaderboard\" | \"leak_add\" | \"leak_remove\" | \"legend_toggle\" | \"lens_blur\" | \"lens\" | \"library_add_check\" | \"library_add\" | \"library_books\" | \"library_music\" | \"light_mode\" | \"light\" | \"lightbulb_circle\" | \"lightbulb_outline\" | \"lightbulb\" | \"line_axis\" | \"line_style\" | \"line_weight\" | \"linear_scale\" | \"link_off\" | \"link\" | \"linked_camera\" | \"liquor\" | \"list_alt\" | \"list\" | \"live_help\" | \"live_tv\" | \"living\" | \"local_activity\" | \"local_airport\" | \"local_atm\" | \"local_bar\" | \"local_cafe\" | \"local_car_wash\" | \"local_convenience_store\" | \"local_dining\" | \"local_drink\" | \"local_fire_department\" | \"local_florist\" | \"local_gas_station\" | \"local_grocery_store\" | \"local_hospital\" | \"local_hotel\" | \"local_laundry_service\" | \"local_library\" | \"local_mall\" | \"local_movies\" | \"local_offer\" | \"local_parking\" | \"local_pharmacy\" | \"local_phone\" | \"local_pizza\" | \"local_play\" | \"local_police\" | \"local_post_office\" | \"local_printshop\" | \"local_see\" | \"local_shipping\" | \"local_taxi\" | \"location_city\" | \"location_disabled\" | \"location_off\" | \"location_on\" | \"location_searching\" | \"lock_clock\" | \"lock_open\" | \"lock_outline\" | \"lock_person\" | \"lock_reset\" | \"lock\" | \"login\" | \"logo_dev\" | \"logout\" | \"looks_3\" | \"looks_4\" | \"looks_5\" | \"looks_6\" | \"looks_one\" | \"looks_two\" | \"looks\" | \"loop\" | \"loupe\" | \"low_priority\" | \"loyalty\" | \"lte_mobiledata\" | \"lte_plus_mobiledata\" | \"luggage\" | \"lunch_dining\" | \"lyrics\" | \"macro_off\" | \"mail_lock\" | \"mail_outline\" | \"mail\" | \"male\" | \"man_2\" | \"man_3\" | \"man_4\" | \"man\" | \"manage_accounts\" | \"manage_history\" | \"manage_search\" | \"map\" | \"maps_home_work\" | \"maps_ugc\" | \"margin\" | \"mark_as_unread\" | \"mark_chat_read\" | \"mark_chat_unread\" | \"mark_email_read\" | \"mark_email_unread\" | \"mark_unread_chat_alt\" | \"markunread_mailbox\" | \"markunread\" | \"masks\" | \"maximize\" | \"media_bluetooth_off\" | \"media_bluetooth_on\" | \"mediation\" | \"medical_information\" | \"medical_services\" | \"medication_liquid\" | \"medication\" | \"meeting_room\" | \"memory\" | \"menu_book\" | \"menu_open\" | \"menu\" | \"merge_type\" | \"merge\" | \"message\" | \"mic_external_off\" | \"mic_external_on\" | \"mic_none\" | \"mic_off\" | \"mic\" | \"microwave\" | \"military_tech\" | \"minimize\" | \"minor_crash\" | \"miscellaneous_services\" | \"missed_video_call\" | \"mms\" | \"mobile_friendly\" | \"mobile_off\" | \"mobile_screen_share\" | \"mobiledata_off\" | \"mode_comment\" | \"mode_edit_outline\" | \"mode_edit\" | \"mode_fan_off\" | \"mode_night\" | \"mode_of_travel\" | \"mode_standby\" | \"mode\" | \"model_training\" | \"monetization_on\" | \"money_off_csred\" | \"money_off\" | \"money\" | \"monitor_heart\" | \"monitor_weight\" | \"monitor\" | \"monochrome_photos\" | \"mood_bad\" | \"mood\" | \"moped\" | \"more_horiz\" | \"more_time\" | \"more_vert\" | \"more\" | \"mosque\" | \"motion_photos_auto\" | \"motion_photos_off\" | \"motion_photos_on\" | \"motion_photos_pause\" | \"motion_photos_paused\" | \"mouse\" | \"move_down\" | \"move_to_inbox\" | \"move_up\" | \"movie_creation\" | \"movie_filter\" | \"movie\" | \"moving\" | \"mp\" | \"multiline_chart\" | \"multiple_stop\" | \"museum\" | \"music_note\" | \"music_off\" | \"music_video\" | \"my_location\" | \"nat\" | \"nature_people\" | \"nature\" | \"navigate_before\" | \"navigate_next\" | \"navigation\" | \"near_me_disabled\" | \"near_me\" | \"nearby_error\" | \"nearby_off\" | \"nest_cam_wired_stand\" | \"network_cell\" | \"network_check\" | \"network_locked\" | \"network_ping\" | \"network_wifi_1_bar\" | \"network_wifi_2_bar\" | \"network_wifi_3_bar\" | \"network_wifi\" | \"new_label\" | \"new_releases\" | \"newspaper\" | \"next_plan\" | \"next_week\" | \"nfc\" | \"night_shelter\" | \"nightlife\" | \"nightlight_round\" | \"nightlight\" | \"nights_stay\" | \"no_accounts\" | \"no_adult_content\" | \"no_backpack\" | \"no_cell\" | \"no_crash\" | \"no_drinks\" | \"no_encryption_gmailerrorred\" | \"no_encryption\" | \"no_flash\" | \"no_food\" | \"no_luggage\" | \"no_meals\" | \"no_meeting_room\" | \"no_photography\" | \"no_sim\" | \"no_stroller\" | \"no_transfer\" | \"noise_aware\" | \"noise_control_off\" | \"nordic_walking\" | \"north_east\" | \"north_west\" | \"north\" | \"not_accessible\" | \"not_interested\" | \"not_listed_location\" | \"not_started\" | \"note_add\" | \"note_alt\" | \"note\" | \"notes\" | \"notification_add\" | \"notification_important\" | \"notifications_active\" | \"notifications_none\" | \"notifications_off\" | \"notifications_paused\" | \"notifications\" | \"numbers\" | \"offline_bolt\" | \"offline_pin\" | \"offline_share\" | \"oil_barrel\" | \"on_device_training\" | \"ondemand_video\" | \"online_prediction\" | \"opacity\" | \"open_in_browser\" | \"open_in_full\" | \"open_in_new_off\" | \"open_in_new\" | \"open_with\" | \"other_houses\" | \"outbound\" | \"outbox\" | \"outdoor_grill\" | \"outlet\" | \"outlined_flag\" | \"output\" | \"padding\" | \"pages\" | \"pageview\" | \"paid\" | \"palette\" | \"pan_tool_alt\" | \"pan_tool\" | \"panorama_fish_eye\" | \"panorama_horizontal_select\" | \"panorama_horizontal\" | \"panorama_photosphere_select\" | \"panorama_photosphere\" | \"panorama_vertical_select\" | \"panorama_vertical\" | \"panorama_wide_angle_select\" | \"panorama_wide_angle\" | \"panorama\" | \"paragliding\" | \"park\" | \"party_mode\" | \"password\" | \"pattern\" | \"pause_circle_filled\" | \"pause_circle_outline\" | \"pause_circle\" | \"pause_presentation\" | \"pause\" | \"payment\" | \"payments\" | \"pedal_bike\" | \"pending_actions\" | \"pending\" | \"pentagon\" | \"people_alt\" | \"people_outline\" | \"people\" | \"percent\" | \"perm_camera_mic\" | \"perm_contact_calendar\" | \"perm_data_setting\" | \"perm_device_information\" | \"perm_identity\" | \"perm_media\" | \"perm_phone_msg\" | \"perm_scan_wifi\" | \"person_2\" | \"person_3\" | \"person_4\" | \"person_add_alt_1\" | \"person_add_alt\" | \"person_add_disabled\" | \"person_add\" | \"person_off\" | \"person_outline\" | \"person_pin_circle\" | \"person_pin\" | \"person_remove_alt_1\" | \"person_remove\" | \"person_search\" | \"person\" | \"personal_injury\" | \"personal_video\" | \"pest_control_rodent\" | \"pest_control\" | \"pets\" | \"phishing\" | \"phone_android\" | \"phone_bluetooth_speaker\" | \"phone_callback\" | \"phone_disabled\" | \"phone_enabled\" | \"phone_forwarded\" | \"phone_iphone\" | \"phone_locked\" | \"phone_missed\" | \"phone_paused\" | \"phone\" | \"phonelink_erase\" | \"phonelink_lock\" | \"phonelink_off\" | \"phonelink_ring\" | \"phonelink_setup\" | \"phonelink\" | \"photo_album\" | \"photo_camera_back\" | \"photo_camera_front\" | \"photo_camera\" | \"photo_filter\" | \"photo_library\" | \"photo_size_select_actual\" | \"photo_size_select_large\" | \"photo_size_select_small\" | \"photo\" | \"php\" | \"piano_off\" | \"piano\" | \"picture_as_pdf\" | \"picture_in_picture_alt\" | \"picture_in_picture\" | \"pie_chart_outline\" | \"pie_chart\" | \"pin_drop\" | \"pin_end\" | \"pin_invoke\" | \"pin\" | \"pinch\" | \"pivot_table_chart\" | \"pix\" | \"place\" | \"plagiarism\" | \"play_arrow\" | \"play_circle_filled\" | \"play_circle_outline\" | \"play_circle\" | \"play_disabled\" | \"play_for_work\" | \"play_lesson\" | \"playlist_add_check_circle\" | \"playlist_add_check\" | \"playlist_add_circle\" | \"playlist_add\" | \"playlist_play\" | \"playlist_remove\" | \"plumbing\" | \"plus_one\" | \"podcasts\" | \"point_of_sale\" | \"policy\" | \"poll\" | \"polyline\" | \"polymer\" | \"pool\" | \"portable_wifi_off\" | \"portrait\" | \"post_add\" | \"power_input\" | \"power_off\" | \"power_settings_new\" | \"power\" | \"precision_manufacturing\" | \"pregnant_woman\" | \"present_to_all\" | \"preview\" | \"price_change\" | \"price_check\" | \"print_disabled\" | \"print\" | \"priority_high\" | \"privacy_tip\" | \"private_connectivity\" | \"production_quantity_limits\" | \"propane_tank\" | \"propane\" | \"psychology_alt\" | \"psychology\" | \"public_off\" | \"public\" | \"publish\" | \"published_with_changes\" | \"punch_clock\" | \"push_pin\" | \"qr_code_2\" | \"qr_code_scanner\" | \"qr_code\" | \"query_builder\" | \"query_stats\" | \"question_answer\" | \"question_mark\" | \"queue_music\" | \"queue_play_next\" | \"queue\" | \"quickreply\" | \"quiz\" | \"r_mobiledata\" | \"radar\" | \"radio_button_checked\" | \"radio_button_unchecked\" | \"radio\" | \"railway_alert\" | \"ramen_dining\" | \"ramp_left\" | \"ramp_right\" | \"rate_review\" | \"raw_off\" | \"raw_on\" | \"read_more\" | \"real_estate_agent\" | \"receipt_long\" | \"receipt\" | \"recent_actors\" | \"recommend\" | \"record_voice_over\" | \"rectangle\" | \"recycling\" | \"redeem\" | \"redo\" | \"reduce_capacity\" | \"refresh\" | \"remember_me\" | \"remove_circle_outline\" | \"remove_circle\" | \"remove_done\" | \"remove_from_queue\" | \"remove_moderator\" | \"remove_red_eye\" | \"remove_road\" | \"remove_shopping_cart\" | \"remove\" | \"reorder\" | \"repartition\" | \"repeat_on\" | \"repeat_one_on\" | \"repeat_one\" | \"repeat\" | \"replay_10\" | \"replay_30\" | \"replay_5\" | \"replay_circle_filled\" | \"replay\" | \"reply_all\" | \"reply\" | \"report_gmailerrorred\" | \"report_off\" | \"report_problem\" | \"report\" | \"request_page\" | \"request_quote\" | \"reset_tv\" | \"restart_alt\" | \"restaurant_menu\" | \"restaurant\" | \"restore_from_trash\" | \"restore_page\" | \"restore\" | \"reviews\" | \"rice_bowl\" | \"ring_volume\" | \"rocket_launch\" | \"rocket\" | \"roller_shades_closed\" | \"roller_shades\" | \"roller_skating\" | \"roofing\" | \"room_preferences\" | \"room_service\" | \"room\" | \"rotate_90_degrees_ccw\" | \"rotate_90_degrees_cw\" | \"rotate_left\" | \"rotate_right\" | \"roundabout_left\" | \"roundabout_right\" | \"rounded_corner\" | \"route\" | \"router\" | \"rowing\" | \"rss_feed\" | \"rsvp\" | \"rtt\" | \"rule_folder\" | \"rule\" | \"run_circle\" | \"running_with_errors\" | \"rv_hookup\" | \"safety_check\" | \"safety_divider\" | \"sailing\" | \"sanitizer\" | \"satellite_alt\" | \"satellite\" | \"save_alt\" | \"save_as\" | \"save\" | \"saved_search\" | \"savings\" | \"scale\" | \"scanner\" | \"scatter_plot\" | \"schedule_send\" | \"schedule\" | \"schema\" | \"school\" | \"science\" | \"score\" | \"scoreboard\" | \"screen_lock_landscape\" | \"screen_lock_portrait\" | \"screen_lock_rotation\" | \"screen_rotation_alt\" | \"screen_rotation\" | \"screen_search_desktop\" | \"screen_share\" | \"screenshot_monitor\" | \"screenshot\" | \"scuba_diving\" | \"sd_card_alert\" | \"sd_card\" | \"sd_storage\" | \"sd\" | \"search_off\" | \"search\" | \"security_update_good\" | \"security_update_warning\" | \"security_update\" | \"security\" | \"segment\" | \"select_all\" | \"self_improvement\" | \"sell\" | \"send_and_archive\" | \"send_time_extension\" | \"send_to_mobile\" | \"send\" | \"sensor_door\" | \"sensor_occupied\" | \"sensor_window\" | \"sensors_off\" | \"sensors\" | \"sentiment_dissatisfied\" | \"sentiment_neutral\" | \"sentiment_satisfied_alt\" | \"sentiment_satisfied\" | \"sentiment_very_dissatisfied\" | \"sentiment_very_satisfied\" | \"set_meal\" | \"settings_accessibility\" | \"settings_applications\" | \"settings_backup_restore\" | \"settings_bluetooth\" | \"settings_brightness\" | \"settings_cell\" | \"settings_ethernet\" | \"settings_input_antenna\" | \"settings_input_component\" | \"settings_input_composite\" | \"settings_input_hdmi\" | \"settings_input_svideo\" | \"settings_overscan\" | \"settings_phone\" | \"settings_power\" | \"settings_remote\" | \"settings_suggest\" | \"settings_system_daydream\" | \"settings_voice\" | \"settings\" | \"severe_cold\" | \"shape_line\" | \"share_location\" | \"share\" | \"shield_moon\" | \"shield\" | \"shop_2\" | \"shop_two\" | \"shop\" | \"shopping_bag\" | \"shopping_basket\" | \"shopping_cart_checkout\" | \"shopping_cart\" | \"short_text\" | \"shortcut\" | \"show_chart\" | \"shower\" | \"shuffle_on\" | \"shuffle\" | \"shutter_speed\" | \"sick\" | \"sign_language\" | \"signal_cellular_0_bar\" | \"signal_cellular_4_bar\" | \"signal_cellular_alt_1_bar\" | \"signal_cellular_alt_2_bar\" | \"signal_cellular_alt\" | \"signal_cellular_connected_no_internet_0_bar\" | \"signal_cellular_connected_no_internet_4_bar\" | \"signal_cellular_no_sim\" | \"signal_cellular_nodata\" | \"signal_cellular_null\" | \"signal_cellular_off\" | \"signal_wifi_0_bar\" | \"signal_wifi_4_bar_lock\" | \"signal_wifi_4_bar\" | \"signal_wifi_bad\" | \"signal_wifi_connected_no_internet_4\" | \"signal_wifi_off\" | \"signal_wifi_statusbar_4_bar\" | \"signal_wifi_statusbar_connected_no_internet_4\" | \"signal_wifi_statusbar_null\" | \"signpost\" | \"sim_card_alert\" | \"sim_card_download\" | \"sim_card\" | \"single_bed\" | \"sip\" | \"skateboarding\" | \"skip_next\" | \"skip_previous\" | \"sledding\" | \"slideshow\" | \"slow_motion_video\" | \"smart_button\" | \"smart_display\" | \"smart_screen\" | \"smart_toy\" | \"smartphone\" | \"smoke_free\" | \"smoking_rooms\" | \"sms_failed\" | \"sms\" | \"snippet_folder\" | \"snooze\" | \"snowboarding\" | \"snowmobile\" | \"snowshoeing\" | \"soap\" | \"social_distance\" | \"solar_power\" | \"sort_by_alpha\" | \"sort\" | \"sos\" | \"soup_kitchen\" | \"source\" | \"south_america\" | \"south_east\" | \"south_west\" | \"south\" | \"spa\" | \"space_bar\" | \"space_dashboard\" | \"spatial_audio_off\" | \"spatial_audio\" | \"spatial_tracking\" | \"speaker_group\" | \"speaker_notes_off\" | \"speaker_notes\" | \"speaker_phone\" | \"speaker\" | \"speed\" | \"spellcheck\" | \"splitscreen\" | \"spoke\" | \"sports_bar\" | \"sports_baseball\" | \"sports_basketball\" | \"sports_cricket\" | \"sports_esports\" | \"sports_football\" | \"sports_golf\" | \"sports_gymnastics\" | \"sports_handball\" | \"sports_hockey\" | \"sports_kabaddi\" | \"sports_martial_arts\" | \"sports_mma\" | \"sports_motorsports\" | \"sports_rugby\" | \"sports_score\" | \"sports_soccer\" | \"sports_tennis\" | \"sports_volleyball\" | \"sports\" | \"square_foot\" | \"square\" | \"ssid_chart\" | \"stacked_bar_chart\" | \"stacked_line_chart\" | \"stadium\" | \"stairs\" | \"star_border_purple500\" | \"star_border\" | \"star_half\" | \"star_outline\" | \"star_purple500\" | \"star_rate\" | \"star\" | \"stars\" | \"start\" | \"stay_current_landscape\" | \"stay_current_portrait\" | \"stay_primary_landscape\" | \"stay_primary_portrait\" | \"sticky_note_2\" | \"stop_circle\" | \"stop_screen_share\" | \"stop\" | \"storage\" | \"store_mall_directory\" | \"store\" | \"storefront\" | \"storm\" | \"straight\" | \"straighten\" | \"stream\" | \"streetview\" | \"strikethrough_s\" | \"stroller\" | \"style\" | \"subdirectory_arrow_left\" | \"subdirectory_arrow_right\" | \"subject\" | \"subscript\" | \"subscriptions\" | \"subtitles_off\" | \"subtitles\" | \"subway\" | \"summarize\" | \"superscript\" | \"supervised_user_circle\" | \"supervisor_account\" | \"support_agent\" | \"support\" | \"surfing\" | \"surround_sound\" | \"swap_calls\" | \"swap_horiz\" | \"swap_horizontal_circle\" | \"swap_vert\" | \"swap_vertical_circle\" | \"swipe_down_alt\" | \"swipe_down\" | \"swipe_left_alt\" | \"swipe_left\" | \"swipe_right_alt\" | \"swipe_right\" | \"swipe_up_alt\" | \"swipe_up\" | \"swipe_vertical\" | \"swipe\" | \"switch_access_shortcut_add\" | \"switch_access_shortcut\" | \"switch_account\" | \"switch_camera\" | \"switch_left\" | \"switch_right\" | \"switch_video\" | \"synagogue\" | \"sync_alt\" | \"sync_disabled\" | \"sync_lock\" | \"sync_problem\" | \"sync\" | \"system_security_update_good\" | \"system_security_update_warning\" | \"system_security_update\" | \"system_update_alt\" | \"system_update\" | \"tab_unselected\" | \"tab\" | \"table_bar\" | \"table_chart\" | \"table_restaurant\" | \"table_rows\" | \"table_view\" | \"tablet_android\" | \"tablet_mac\" | \"tablet\" | \"tag_faces\" | \"tag\" | \"takeout_dining\" | \"tap_and_play\" | \"tapas\" | \"task_alt\" | \"task\" | \"taxi_alert\" | \"temple_buddhist\" | \"temple_hindu\" | \"terminal\" | \"terrain\" | \"text_decrease\" | \"text_fields\" | \"text_format\" | \"text_increase\" | \"text_rotate_up\" | \"text_rotate_vertical\" | \"text_rotation_angledown\" | \"text_rotation_angleup\" | \"text_rotation_down\" | \"text_rotation_none\" | \"text_snippet\" | \"textsms\" | \"texture\" | \"theater_comedy\" | \"theaters\" | \"thermostat_auto\" | \"thermostat\" | \"thumb_down_alt\" | \"thumb_down_off_alt\" | \"thumb_down\" | \"thumb_up_alt\" | \"thumb_up_off_alt\" | \"thumb_up\" | \"thumbs_up_down\" | \"thunderstorm\" | \"time_to_leave\" | \"timelapse\" | \"timeline\" | \"timer_10_select\" | \"timer_10\" | \"timer_3_select\" | \"timer_3\" | \"timer_off\" | \"timer\" | \"tips_and_updates\" | \"tire_repair\" | \"title\" | \"toc\" | \"today\" | \"toggle_off\" | \"toggle_on\" | \"token\" | \"toll\" | \"tonality\" | \"topic\" | \"tornado\" | \"touch_app\" | \"tour\" | \"toys\" | \"track_changes\" | \"traffic\" | \"train\" | \"tram\" | \"transcribe\" | \"transfer_within_a_station\" | \"transform\" | \"transgender\" | \"transit_enterexit\" | \"translate\" | \"travel_explore\" | \"trending_down\" | \"trending_flat\" | \"trending_up\" | \"trip_origin\" | \"troubleshoot\" | \"try\" | \"tsunami\" | \"tty\" | \"tune\" | \"tungsten\" | \"turn_left\" | \"turn_right\" | \"turn_sharp_left\" | \"turn_sharp_right\" | \"turn_slight_left\" | \"turn_slight_right\" | \"turned_in_not\" | \"turned_in\" | \"tv_off\" | \"tv\" | \"two_wheeler\" | \"type_specimen\" | \"u_turn_left\" | \"u_turn_right\" | \"umbrella\" | \"unarchive\" | \"undo\" | \"unfold_less_double\" | \"unfold_less\" | \"unfold_more_double\" | \"unfold_more\" | \"unpublished\" | \"unsubscribe\" | \"upcoming\" | \"update_disabled\" | \"update\" | \"upgrade\" | \"upload_file\" | \"upload\" | \"usb_off\" | \"usb\" | \"vaccines\" | \"vape_free\" | \"vaping_rooms\" | \"verified_user\" | \"verified\" | \"vertical_align_bottom\" | \"vertical_align_center\" | \"vertical_align_top\" | \"vertical_distribute\" | \"vertical_shades_closed\" | \"vertical_shades\" | \"vertical_split\" | \"vibration\" | \"video_call\" | \"video_camera_back\" | \"video_camera_front\" | \"video_chat\" | \"video_file\" | \"video_label\" | \"video_library\" | \"video_settings\" | \"video_stable\" | \"videocam_off\" | \"videocam\" | \"videogame_asset_off\" | \"videogame_asset\" | \"view_agenda\" | \"view_array\" | \"view_carousel\" | \"view_column\" | \"view_comfy_alt\" | \"view_comfy\" | \"view_compact_alt\" | \"view_compact\" | \"view_cozy\" | \"view_day\" | \"view_headline\" | \"view_in_ar\" | \"view_kanban\" | \"view_list\" | \"view_module\" | \"view_quilt\" | \"view_sidebar\" | \"view_stream\" | \"view_timeline\" | \"view_week\" | \"vignette\" | \"villa\" | \"visibility_off\" | \"visibility\" | \"voice_chat\" | \"voice_over_off\" | \"voicemail\" | \"volcano\" | \"volume_down\" | \"volume_mute\" | \"volume_off\" | \"volume_up\" | \"volunteer_activism\" | \"vpn_key_off\" | \"vpn_key\" | \"vpn_lock\" | \"vrpano\" | \"wallet\" | \"wallpaper\" | \"warehouse\" | \"warning_amber\" | \"warning\" | \"wash\" | \"watch_later\" | \"watch_off\" | \"watch\" | \"water_damage\" | \"water_drop\" | \"water\" | \"waterfall_chart\" | \"waves\" | \"waving_hand\" | \"wb_auto\" | \"wb_cloudy\" | \"wb_incandescent\" | \"wb_iridescent\" | \"wb_shade\" | \"wb_sunny\" | \"wb_twilight\" | \"wc\" | \"web_asset_off\" | \"web_asset\" | \"web_stories\" | \"web\" | \"webhook\" | \"weekend\" | \"west\" | \"whatshot\" | \"wheelchair_pickup\" | \"where_to_vote\" | \"widgets\" | \"width_full\" | \"width_normal\" | \"width_wide\" | \"wifi_1_bar\" | \"wifi_2_bar\" | \"wifi_calling_3\" | \"wifi_calling\" | \"wifi_channel\" | \"wifi_find\" | \"wifi_lock\" | \"wifi_off\" | \"wifi_password\" | \"wifi_protected_setup\" | \"wifi_tethering_error\" | \"wifi_tethering_off\" | \"wifi_tethering\" | \"wifi\" | \"wind_power\" | \"window\" | \"wine_bar\" | \"woman_2\" | \"woman\" | \"work_history\" | \"work_off\" | \"work_outline\" | \"work\" | \"workspace_premium\" | \"workspaces\" | \"wrap_text\" | \"wrong_location\" | \"wysiwyg\" | \"yard\" | \"youtube_searched_for\" | \"zoom_in_map\" | \"zoom_in\" | \"zoom_out_map\" | \"zoom_out\"",
                    "file": "libs/material/src/api/icon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "libs/material/src/alert/alert.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AlertComponent>",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/app-auth/app-auth.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AppAuthComponent>",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/app-inventory/app-inventory.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AppInventoryComponent>",
                    "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/colors/colors.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorsComponent>",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/fonts/fonts.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FontsComponent>",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormComponent>",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/list/list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ListComponent>",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/menu/menu.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MenuComponent>",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/nav-list/nav-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavListComponent>",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/notification/notification.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NotificationComponent>",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/stepper/stepper.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StepperComponent>",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/sticky-notes/sticky-notes.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StickyNotesComponent>",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/tab/tab-container.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabContainerComponent>",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/table/table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "libs/material/src/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/toolbar/toolbar.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToolbarComponent>",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/button/button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/combined-button/combined-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CombinedButtonComponent>",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/icon-button/icon-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<IconButtonComponent>",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SampleButtonsComponent>",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/boolean-input/boolean-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BooleanInputComponent>",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/common-input/common-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CommonInputComponent>",
                    "file": "libs/material/src/form/common-input/common-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/date-input/date-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateInputComponent>",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/date-picker/date-picker.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DatePickerComponent>",
                    "file": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/input/input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MultipleSelectInputComponent>",
                    "file": "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/number-input/number-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NumberInputComponent>",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/search-input/search-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SearchInputComponent>",
                    "file": "libs/material/src/form/search-input/search-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/select-input/select-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectInputComponent>",
                    "file": "libs/material/src/form/select-input/select-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/text-input/text-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextInputComponent>",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/list/list-item/list-item.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ListItemComponent>",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/micro/icon/icon.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<IconComponent>",
                    "file": "libs/material/src/micro/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavListItemComponent>",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/tab/tab-button/tab-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabButtonComponent>",
                    "file": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/table/paginator/paginator.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PaginatorComponent>",
                    "file": "libs/material/src/table/paginator/paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/tab/tab-container.component.ts": [
                {
                    "name": "TabContainerType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sidenav\" | \"tab\"",
                    "file": "libs/material/src/tab/tab-container.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "libs/material/src/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/animations.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "slideFromRightOnEnter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/form-value.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FormValue",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/month-table.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "monthTable",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/api/types.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ListOfDays",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/types.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ListOfMonths",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppAuthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-inventory/app-inventory.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppInventoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CombinedButtonComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/common-button/common-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommonButtonComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconButtonComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SampleButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FontsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BooleanInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/common-input/common-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/common-input/common-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommonInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-picker/date-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-picker/date-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form-actions/form-actions.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FormActionsDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 7,
                "coverageCount": "1/13",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/multiple-select-input/multiple-select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/multiple-select-input/multiple-select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultipleSelectInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/search-input/search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/search-input/search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/select-input/select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/select-input/select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 7,
                "coverageCount": "1/14",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/badge/badge.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BadgeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/class-list/class-list.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ClassListDirective",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/focus/focus.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FocusDirective",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/micro/has-value/has-value.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "HasValueDirective",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/scroll-direction/scroll-direction.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ScrollDirectionDirective",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/set-attribute/set-attribute.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SetAttributeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/set-component-attribute/set-component-attribute.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SetComponentAttributeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/tooltip/tooltip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TooltipDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavListItemComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StickyNotesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-button/tab-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-button/tab-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabButtonComponent",
                "coveragePercent": 7,
                "coverageCount": "1/13",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TabDirective",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/paginator/paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/paginator/paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}