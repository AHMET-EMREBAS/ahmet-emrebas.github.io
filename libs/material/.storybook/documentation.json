{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "BadgeDirective",
            "id": "directive-BadgeDirective-58d7ba4cbbc12c4aabc831ec3d912e159207468c2d95ecb7738c54132f78bf1f18da0e099541c0dd94c68738c3086d31211b726734d57de85542465225a9974a",
            "file": "libs/material/src/micro/badge/badge.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport { Color } from './../../api';\n\n@Directive({\n  selector: '[tbBadge]',\n  standalone: true,\n})\nexport class BadgeDirective implements AfterViewInit {\n  @Input() tbBadge?: string;\n  @Input() tbBadgePosition:\n    | 'top-right'\n    | 'top-left'\n    | 'bottom-left'\n    | 'bottom-right' = 'top-right';\n  @Input() tbBadgeColor: Color = 'primary';\n  constructor(private readonly elementRef: ElementRef<HTMLElement>) {}\n\n  ngAfterViewInit(): void {\n    if (this.tbBadge) {\n      this.elementRef.nativeElement.setAttribute('data-badge', this.tbBadge);\n      this.elementRef.nativeElement.setAttribute(\n        'data-badge-position',\n        this.tbBadgePosition\n      );\n      this.elementRef.nativeElement.setAttribute(\n        'data-badge-color',\n        this.tbBadgeColor\n      );\n    }\n  }\n}\n",
            "selector": "[tbBadge]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbBadge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tbBadgeColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "tbBadgePosition",
                    "defaultValue": "'top-right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"top-right\" | \"top-left\" | \"bottom-left\" | \"bottom-right\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ClassListDirective",
            "id": "directive-ClassListDirective-456e787d75da6afab214b19e256c636fe55e3de568b7801310446f08f251ecabb7dd47f82bd1007139c74e3aeb359dd4aa6a2f605801b279695bd4825f8c8292",
            "file": "libs/material/src/micro/class-list/class-list.directive.ts",
            "type": "directive",
            "description": "<p>Class list items whose name either not starts with &quot;__&quot; nor ends with &quot;Event&quot;</p>\n",
            "rawdescription": "\n\nClass list items whose name either not starts with \"__\" nor ends with \"Event\"\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\n\n/**\n * Class list items whose name either not starts with \"__\" nor ends with \"Event\"\n */\n@Directive({\n  selector: '[tbClassList]',\n  standalone: true,\n})\nexport class ClassListDirective implements AfterViewInit {\n  @Input() tbClassList?: Record<string, any>;\n  constructor(public readonly elementRef: ElementRef<HTMLElement>) {}\n\n  ngAfterViewInit(): void {\n    console.log(this.tbClassList);\n    if (this.tbClassList) {\n      console.log('Adding classes');\n      const entries = Object.entries(this.tbClassList);\n      console.log(entries);\n      for (const [key, value] of entries) {\n        if (\n          value === '' ||\n          key.startsWith('tooltip') ||\n          key.startsWith('__') ||\n          key.startsWith('native') ||\n          key.startsWith('ng') ||\n          key.startsWith('can') ||\n          key.startsWith('emit') ||\n          key.startsWith('handle') ||\n          key.startsWith('children') ||\n          key.startsWith('child') ||\n          key.endsWith('Event') ||\n          key.endsWith('Ref')\n        ) {\n          continue;\n        }\n        console.log('adding the class:', key, value);\n        this.elementRef.nativeElement.classList.add(value);\n      }\n    }\n  }\n}\n",
            "selector": "[tbClassList]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbClassList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Record<string | any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "FocusDirective",
            "id": "directive-FocusDirective-3227cc3eeea7a35be38bf49ddcbc8a7f1f494c117996e4b8ff9e4c7e19a8ab92fabfd5d3d9cb7966ce14ceb3c851371a7819852268e01a4f86f536f61121500d",
            "file": "libs/material/src/micro/focus/focus.directive.ts",
            "type": "directive",
            "description": "<p>Focus element after view init.</p>\n",
            "rawdescription": "\n\nFocus element after view init.\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n/**\n * Focus element after view init.\n */\n@Directive({\n  selector: '[tbFocus]',\n  standalone: true,\n})\nexport class FocusDirective implements AfterViewInit {\n  constructor(private readonly elementRef: ElementRef<HTMLElement>) {}\n  ngAfterViewInit(): void {\n    this.elementRef.nativeElement.focus();\n  }\n}\n",
            "selector": "[tbFocus]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "FormActionsDirective",
            "id": "directive-FormActionsDirective-3b14336835f052022d637015a05de9c12ff46c8c31552ecc4f1b46a6eae56e14c7deebf61ad0ea711841e4ac55ba1258996744314ab34be2a1cd0cbbd173f40b",
            "file": "libs/material/src/form/form-actions/form-actions.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[tbFormActions]',\n  standalone: true,\n})\nexport class FormActionsDirective {\n  constructor(public readonly templateRef: TemplateRef<unknown>) {}\n}\n",
            "selector": "[tbFormActions]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "HasValueDirective",
            "id": "directive-HasValueDirective-1ce2d9ff0c146ce23aa9706b094f3ec3b798c473539927ceef5d11b730023adb73ecae4c001b56ff2ef3c7a976f597bf1ac3ccf81ff1259c0b2134d6bdeb2973",
            "file": "libs/material/src/form/has-value/has-value.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[tbHasValue]',\n  standalone: true,\n})\nexport class HasValueDirective implements AfterViewInit {\n  constructor(private readonly elementRef: ElementRef<HTMLInputElement>) {}\n\n  ngAfterViewInit(): void {\n    this.elementRef.nativeElement.addEventListener(\n      'input',\n      (event: InputEvent | any) => {\n        const data = event.data;\n        if (data?.length > 0) {\n          this.markAsHasValue();\n        } else {\n          this.markAsHasNovalue();\n        }\n      }\n    );\n  }\n\n  private markAsHasValue() {\n    this.elementRef.nativeElement.setAttribute('has-value', 'true');\n  }\n  private markAsHasNovalue() {\n    this.elementRef.nativeElement.setAttribute('has-value', 'false');\n  }\n}\n",
            "selector": "[tbHasValue]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "markAsHasNovalue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "markAsHasValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLInputElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLInputElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ScrollDirectionDirective",
            "id": "directive-ScrollDirectionDirective-71816ef9e3fe5b850e7f78ffa6d8b4491f5da377ebea420212c50151e98c0997ed6dd382514094bf3c178b938e360274b61760444afca43737ef0d4f6dafd08a",
            "file": "libs/material/src/micro/scroll-direction/scroll-direction.directive.ts",
            "type": "directive",
            "description": "<p>Change scroll direction to x axis</p>\n",
            "rawdescription": "\n\nChange scroll direction to x axis\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, OnDestroy } from '@angular/core';\nimport { Subscription, debounceTime, fromEvent } from 'rxjs';\n\n/**\n * Change scroll direction to x axis\n */\n@Directive({\n  selector: '[tbScrollX]',\n  standalone: true,\n})\nexport class ScrollDirectionDirective implements AfterViewInit, OnDestroy {\n  subscription?: Subscription;\n\n  constructor(private readonly elementRef: ElementRef<HTMLDivElement>) {}\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.elementRef.nativeElement.onwheel = (event) => {\n      if (!event.shiftKey) {\n        event.preventDefault();\n      }\n    };\n    this.subscription = fromEvent<WheelEvent>(\n      this.elementRef.nativeElement,\n      'wheel'\n    )\n      .pipe(debounceTime(100))\n      .subscribe((e) => {\n        if (!e.shiftKey)\n          this.elementRef.nativeElement.scrollBy({\n            left: e.deltaY * 2,\n            behavior: 'smooth',\n          });\n      });\n  }\n}\n",
            "selector": "[tbScrollX]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLDivElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLDivElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SetAttributeDirective",
            "id": "directive-SetAttributeDirective-f5eb746ad36311034ccd62e5930036c91ff44f4993aec41b0a17b179c75a76c9ffd6cf8d67fd12c9e9596c3df51612849564bc7181a9eca5ed1606662e45d8f3",
            "file": "libs/material/src/micro/set-attribute/set-attribute.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  AfterViewInit,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\n@Directive({ selector: '[tbSetAttribute]', standalone: true })\nexport class SetAttributeDirective implements AfterViewInit {\n  @Input() tbSetAttribute?: Record<string, any>;\n  constructor(public readonly elementRef: ElementRef<HTMLElement>) {}\n\n  ngAfterViewInit(): void {\n    if (this.tbSetAttribute) {\n      const entries = Object.entries(this.tbSetAttribute);\n      for (const [key, value] of entries) {\n        if (key.startsWith('__')) {\n          return;\n        }\n        this.elementRef.nativeElement.setAttribute(key, value);\n      }\n    }\n  }\n}\n",
            "selector": "[tbSetAttribute]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbSetAttribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Record<string | any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SetComponentAttributeDirective",
            "id": "directive-SetComponentAttributeDirective-e14bf51aaf72f77af35993201b1a88a29d31b052eaf10cf0dc96fe75f238eb331631bc683c9f7bf421dcc38863181382bb0cd63bd6eb896beb094d0e1c599ee1",
            "file": "libs/material/src/micro/set-component-attribute/set-component-attribute.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  AfterViewInit,\n  ComponentRef,\n  Directive,\n  Input,\n  OnInit,\n} from '@angular/core';\n\n@Directive({\n  selector: '[tbSetComponentAttribute]',\n  standalone: true,\n})\nexport class SetComponentAttributeDirective implements OnInit {\n  @Input() componentRef?: ComponentRef<any>;\n  @Input() tbSetComponentAttribute?: Record<string, any>;\n\n  ngOnInit(): void {\n    if (this.tbSetComponentAttribute) {\n      console.log(this.componentRef);\n      const attributes = Object.entries(this.tbSetComponentAttribute);\n      for (const [key, value] of attributes) {\n        if (key.startsWith('__')) {\n          continue;\n        }\n        console.log(`Adding input : ${key}  : ${value}`);\n        this.componentRef?.setInput(key, value);\n      }\n    }\n  }\n}\n",
            "selector": "[tbSetComponentAttribute]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "componentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "ComponentRef<any>",
                    "decorators": []
                },
                {
                    "name": "tbSetComponentAttribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Record<string | any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "TabDirective",
            "id": "directive-TabDirective-d50438b6913651f22cd13d2d500d8d60d67073159f575ceecbd165aaad746f220b478d38ac983653d4ac0178b619ba69ccf046b18e05e169bdc8dd7580db3231",
            "file": "libs/material/src/tab/tab.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({ selector: '[tbTab]' })\r\nexport class TabDirective {\r\n  constructor(public templateRef: TemplateRef<TabDirective>) {}\r\n}\r\n",
            "selector": "[tbTab]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<TabDirective>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<TabDirective>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<TabDirective>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TooltipDirective",
            "id": "directive-TooltipDirective-3a7bc08bec7b933f4157bf313298d42401ea7ea8702f3822915a6e1f14c0cdb9771e20fefcc2773b91c416dc94ac0a8fbae42b85f7f8253ee20652f958a8e70e",
            "file": "libs/material/src/micro/tooltip/tooltip.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport { Position } from './../../api';\n\n@Directive({\n  selector: '[tbTooltip]',\n  standalone: true,\n})\nexport class TooltipDirective implements AfterViewInit {\n  @Input() tbTooltip?: string = '';\n  @Input() tbTooltipPosition?: Position = 'bottom';\n  constructor(private readonly elementRef: ElementRef<HTMLButtonElement>) {}\n\n  ngAfterViewInit(): void {\n    const e = this.elementRef.nativeElement;\n    e.setAttribute('aria-label', this.tbTooltip || '');\n    e.setAttribute('tooltip-position', this.tbTooltipPosition || 'bottom');\n  }\n}\n",
            "selector": "[tbTooltip]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tbTooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tbTooltipPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Position",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLButtonElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLButtonElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AlertComponent",
            "id": "component-AlertComponent-139ca96ea71907982b0a5361f9d59cc1ed86aa05ece62b26928dfb95683bf85e7e3d55769f4672faee30f4efc1d71884ee94c2aef494c79624fff3ff688fccff",
            "file": "libs/material/src/alert/alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-alert",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\" {{ color }}\" role=\"alert\">    <span class=\"icon\">{{ icon }}</span>\n    <span>{{ message }}</span>\n    <div class=\"grow-1\"></div>\n    <tb-icon-button\n      [color]=\"color\"\n      icon=\"close\"\n      variant=\"inbox\"\n      size=\"small\"\n      (click)=\"emitCloseEvent()\"\n    ></tb-icon-button>\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "'Message'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closeEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emitCloseEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "IconButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Color, Icon } from '../api';\nimport { IconButtonComponent } from '../button';\nimport { MicroModule } from '../micro/micro.module';\n\n@Component({\n  selector: 'tb-alert',\n  standalone: true,\n  imports: [MicroModule, IconButtonComponent],\n  template: `<div class=\" {{ color }}\" role=\"alert\">\n    <span class=\"icon\">{{ icon }}</span>\n    <span>{{ message }}</span>\n    <div class=\"grow-1\"></div>\n    <tb-icon-button\n      [color]=\"color\"\n      icon=\"close\"\n      variant=\"inbox\"\n      size=\"small\"\n      (click)=\"emitCloseEvent()\"\n    ></tb-icon-button>\n  </div>`,\n})\nexport class AlertComponent {\n  @Output() closeEvent = new EventEmitter();\n  @Input() color: Color = 'primary';\n  @Input() icon: Icon = 'info';\n  @Input() message = 'Message';\n  @Input() closable = true;\n\n  emitCloseEvent() {\n    this.closeEvent.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AppAuthComponent",
            "id": "component-AppAuthComponent-1a6012821c08a242562a1ea3362076c34cef7b6b9a40fea7b08887cf4d854756982581286361a07d565b74bb692d32e1313e037246e790dce2fc35524edd9b45",
            "file": "libs/material/src/app-auth/app-auth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-app-auth",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-auth.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "forgotPasswordEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                },
                {
                    "name": "loginEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "secureEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "signupEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "submitForgotForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitLoginForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitSecureForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitSignupForm",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "TabModule",
                    "type": "module"
                },
                {
                    "name": "FormModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { TabModule } from '../tab/tab.module';\nimport { ButtonComponent } from '../button';\nimport { FormModule } from '../form/form.module';\nimport { MicroModule } from '../micro/micro.module';\n\n@Component({\n  selector: 'tb-app-auth',\n  standalone: true,\n  imports: [MicroModule, TabModule, FormModule, ButtonComponent],\n  templateUrl: './app-auth.component.html',\n})\nexport class AppAuthComponent {\n  @Output() loginEvent = new EventEmitter();\n  @Output() forgotPasswordEvent = new EventEmitter();\n  @Output() secureEvent = new EventEmitter();\n  @Output() signupEvent = new EventEmitter();\n\n  submitLoginForm(formValue: Record<string, unknown>) {\n    this.loginEvent.emit(formValue);\n  }\n  submitForgotForm(formValue: Record<string, unknown>) {\n    this.forgotPasswordEvent.emit(formValue);\n  }\n  submitSecureForm(formValue: Record<string, unknown>) {\n    this.secureEvent.emit(formValue);\n  }\n  submitSignupForm(formValue: Record<string, unknown>) {\n    this.signupEvent.emit(formValue);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<tb-tab-container>\n  <ng-template [tbTab]=\"{ label: 'Login', color: 'primary' }\">\n    <tb-form (submitEvent)=\"submitLoginForm($event)\">\n      <tb-input\n        name=\"username\"\n        icon=\"person\"\n        color=\"primary\"\n        label=\"Username\"\n        type=\"text\"\n      ></tb-input>\n      <tb-input\n        name=\"password\"\n        icon=\"password\"\n        color=\"accent\"\n        label=\"Password\"\n        type=\"password\"\n      ></tb-input>\n\n      <ng-template tbFormActions>\n        <tb-button\n          nativeType=\"submit\"\n          icon=\"login\"\n          label=\"Login\"\n          variant=\"raised\"\n        ></tb-button>\n        <tb-button\n          nativeType=\"reset\"\n          icon=\"refresh\"\n          label=\"Rest\"\n          variant=\"stroked\"\n        ></tb-button>\n      </ng-template>\n    </tb-form>\n  </ng-template>\n\n  <ng-template [tbTab]=\"{ label: 'Forgot password', color: 'secondary' }\">\n    <tb-form (submitEvent)=\"submitForgotForm($event)\">\n      <tb-input\n        name=\"username\"\n        icon=\"person\"\n        color=\"primary\"\n        label=\"Username\"\n        type=\"text\"\n      ></tb-input>\n\n      <ng-template tbFormActions>\n        <tb-button\n          nativeType=\"submit\"\n          icon=\"login\"\n          label=\"Send me one time login code\"\n          variant=\"raised\"\n        ></tb-button>\n        <tb-button\n          nativeType=\"reset\"\n          icon=\"refresh\"\n          label=\"Rest\"\n          variant=\"stroked\"\n        ></tb-button>\n      </ng-template>\n    </tb-form>\n  </ng-template>\n  <ng-template  [tbTab]=\"{ label: 'Secure Login', color: 'accent' }\">\n    <tb-form (submitEvent)=\"submitSecureForm($event)\">\n      <tb-input\n        name=\"key\"\n        icon=\"key\"\n        color=\"primary\"\n        label=\"One time secure code\"\n        type=\"text\"\n      ></tb-input>\n\n      <ng-template tbFormActions>\n        <tb-button\n          nativeType=\"submit\"\n          icon=\"login\"\n          label=\"Login with secuirty key\"\n          variant=\"raised\"\n        ></tb-button>\n        <tb-button\n          nativeType=\"reset\"\n          icon=\"refresh\"\n          label=\"Rest\"\n          variant=\"stroked\"\n        ></tb-button>\n      </ng-template>\n    </tb-form>\n  </ng-template>\n  <ng-template  [tbTab]=\"{ label: 'Signup', color: 'warn' }\">\n    <tb-form (submitEvent)=\"submitSignupForm($event)\">\n      <tb-input\n        name=\"username\"\n        name=\"username\"\n        icon=\"person\"\n        color=\"primary\"\n        label=\"Username\"\n        type=\"text\"\n      ></tb-input>\n      <tb-input\n        name=\"password\"\n        icon=\"password\"\n        color=\"accent\"\n        label=\"Password\"\n        type=\"password\"\n      ></tb-input>\n\n      <ng-template tbFormActions>\n        <tb-button\n          nativeType=\"submit\"\n          icon=\"signature\"\n          label=\"Signup\"\n          variant=\"raised\"\n        ></tb-button>\n        <tb-button\n          nativeType=\"reset\"\n          icon=\"refresh\"\n          label=\"Rest\"\n          variant=\"stroked\"\n        ></tb-button>\n      </ng-template>\n    </tb-form>\n  </ng-template>\n</tb-tab-container>\n"
        },
        {
            "name": "AppInventoryComponent",
            "id": "component-AppInventoryComponent-a288d2f35e6bfd0af6a125204c28cc435ef49f85d599de255b1023632f477d02f41c86490cd27b42d27e55e6fb06baea4e83bd8ce7f005454585e279a7fd7685",
            "file": "libs/material/src/app-inventory/app-inventory.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-app-inventory",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-inventory.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "TabModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ButtonComponent } from '../button';\nimport { TabModule } from '../tab/tab.module';\nimport { MicroModule } from '../micro/micro.module';\n@Component({\n  selector: 'tb-app-inventory',\n  standalone: true,\n  imports: [MicroModule, TabModule, ButtonComponent],\n  templateUrl: './app-inventory.component.html',\n  styles: [],\n})\nexport class AppInventoryComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<tb-tab-container type=\"sidenav\">\n  <ng-template tbTab><h1>inventory</h1></ng-template>\n  <ng-template tbTab><h1>category</h1></ng-template>\n  <ng-template tbTab><h1>pricing</h1></ng-template>\n  <ng-template tbTab><h1>quantity</h1></ng-template>\n  <ng-template tbTab><h1>reports</h1></ng-template>\n</tb-tab-container>\n"
        },
        {
            "name": "ArrayInputComponent",
            "id": "component-ArrayInputComponent-ad87671e7dbbeab998ce10f641ccb0356320b130f7455d6e69783d3e0cb529ccf6e5dd9c80dc1197dfc980a5c3017e4016a8fa12eaf21ca37a863bad385f3ed7",
            "file": "libs/material/src/form/array-input/array-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-array-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./array-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-array-input',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './array-input.component.html',\n  styles: [],\n})\nexport class ArrayInputComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>array-input works!</p>\n"
        },
        {
            "name": "BooleanInputComponent",
            "id": "component-BooleanInputComponent-87c671fc5b61fab360157cf806f873770d2eba003ba5ec53a3cbf3f0b6a9182b877994e59ea9cf7066fdec61d1140f576b339b7bf42f3b89ff43aa3b77f4fee3",
            "file": "libs/material/src/form/boolean-input/boolean-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-boolean-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./boolean-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-boolean-input',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './boolean-input.component.html',\n  styles: [],\n})\nexport class BooleanInputComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>boolean-input works!</p>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-5d50dd707d85b8145a63d3b91685f1888a47135368aa17406613074b7f5de82ed23ad0b863eb56d1d826a4d1bffbeb5237d6bf73225a3c300989639e7fb45b4b",
            "file": "libs/material/src/button/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button   class=\"button {{ color }} {{ variant }} {{ size }}\"\n   (click)=\"emit()\"\n   [tbTooltip]=\"tooltip\"\n   [tbTooltipPosition]=\"tooltipPosition\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "tooltipPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Position",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonButtonComponent } from '../common-button';\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-button',\n  standalone: true,\n  imports: [MicroModule],\n  template: ` <button\n    class=\"button {{ color }} {{ variant }} {{ size }}\"\n    (click)=\"emit()\"\n    [tbTooltip]=\"tooltip\"\n    [tbTooltipPosition]=\"tooltipPosition\"\n  >\n    {{ label }}\n  </button>`,\n  styles: [],\n})\nexport class ButtonComponent extends CommonButtonComponent {\n  @Input() label?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonButtonComponent"
        },
        {
            "name": "ColorsComponent",
            "id": "component-ColorsComponent-d09453123e60ae49fb410f134057636028aaa7b21691efbecbe3200a8c96740d6d368f843339033e8fc9974d3099ba040d3f9330e7429d8c3897438382542987",
            "file": "libs/material/src/colors/colors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-colors",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./colors.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-colors',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './colors.component.html',\n  styles: [],\n})\nexport class ColorsComponent {\n  /** @ignore */\n  colors = [\n    'primary',\n    'secondary',\n    'accent',\n    'warn',\n    'red',\n    'green',\n    'black',\n    'white',\n  ];\n\n  /** @ignore */\n  colorVariants = this.colors.map((e) => [\n    e,\n    ...[\n      'light',\n      'lighter',\n      'dark',\n      'darker',\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      10,\n    ].map((v) => e + '-' + v),\n  ]);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"flex column gap-3 center\">\n  <div class=\"flex gap-3 wrap\" *ngFor=\"let variants of colorVariants\">\n    <div\n      class=\"flex text-center center\"\n      style=\"\n      background-color: var(--{{ color }}); \n      color:var(--{{ color }}-face)\n      \"\n      *ngFor=\"let color of variants\"\n      style=\"width: 100px; height: 100px\"\n    >\n      <span> .{{ color }} </span>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "CombinedButtonComponent",
            "id": "component-CombinedButtonComponent-cc67e09d8454e75a57d79a4a18ab001a7d0c9d783eb972e9585fad7996943f2c9e0a6fd9f0498b99997159e01b272c146e08af0533f40898d456058b9f90dd62",
            "file": "libs/material/src/button/combined-button/combined-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-combined-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button    class=\"combined-button  {{ color }} {{ variant }} {{ size }}\"\n  >\n    <span class=\"icon\" *ngIf=\"icon\">{{ icon }}</span>\n    <span *ngIf=\"label\">{{ label }}</span>\n  </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "tooltipPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Position",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CommonButtonComponent } from '../common-button';\nimport { Icon } from '../../api';\n\n@Component({\n  selector: 'tb-combined-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: `<button\n    class=\"combined-button  {{ color }} {{ variant }} {{ size }}\"\n  >\n    <span class=\"icon\" *ngIf=\"icon\">{{ icon }}</span>\n    <span *ngIf=\"label\">{{ label }}</span>\n  </button>`,\n  styles: [],\n})\nexport class CombinedButtonComponent extends CommonButtonComponent {\n  @Input() label?: string;\n  @Input() icon?: Icon;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonButtonComponent"
        },
        {
            "name": "CommonButtonComponent",
            "id": "component-CommonButtonComponent-4a8904ac2292fd8fa7989e637f297cd96b536dfa9225ffad17186240021372360a0395bfeea6494e27474501ac0e88055874eb9fe4cdde831945a7e2c0ae606c",
            "file": "libs/material/src/button/common-button/common-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-common-button",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ButtonSize",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Position",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ButttonVariant",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ButtonSize, ButttonVariant, Color, Position } from '../../api';\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-common-button',\n  standalone: true,\n  imports: [MicroModule],\n  template: ``,\n})\nexport class CommonButtonComponent {\n  @Input() tooltip?: string = '';\n  @Input() tooltipPosition?: Position;\n  @Input() color: Color = 'primary';\n  @Input() variant?: ButttonVariant = 'basic';\n  @Input() size?: ButtonSize = 'regular';\n\n  @Output() clickEvent = new EventEmitter();\n\n  emit() {\n    this.clickEvent.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DateInputComponent",
            "id": "component-DateInputComponent-0c1d784679a5853208fb99de88a6636c1b6292a1ac01c165346b7fd157186127b5cac87a1802f84ee24ffab1dc811d00560e49a030d830c18979835e40e56229",
            "file": "libs/material/src/form/date-input/date-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-date-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./date-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-date-input',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './date-input.component.html',\n  styles: [],\n})\nexport class DateInputComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>date-input works!</p>\n"
        },
        {
            "name": "EnumInputComponent",
            "id": "component-EnumInputComponent-bc267c5325b18bd95f5e256e69fc7fb3306eb353f48fe6da98eda964d17e172cf706f4be55e91ffa11759e8fb225580a8e369ecb339b1ea93ef6ab47585aac70",
            "file": "libs/material/src/form/enum-input/enum-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-enum-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./enum-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-enum-input',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './enum-input.component.html',\n  styles: [],\n})\nexport class EnumInputComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>enum-input works!</p>\n"
        },
        {
            "name": "FontsComponent",
            "id": "component-FontsComponent-b16a2345b36ea2504dc4073f7f4717bd752e3ae060dcda6fcb60804c0c3fdb6c8ab58bdf9ef33904eeae8519754753b39112aa7bc02039b0f1d0ad1061771784",
            "file": "libs/material/src/fonts/fonts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-fonts",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fonts.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-fonts',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './fonts.component.html',\n  styles: [],\n})\nexport class FontsComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<article style=\"font-size: 16px\">\n  <h1 class=\"title-1\" substring=\"Built by Ahmet Emrebas\">\n    Welcome to techbir angular material\n  </h1>\n\n  <div class=\"subtitle-1\">Let's learn how to structure our project.</div>\n\n  <div class=\"content-1\">\n    First is first. Let's install required tools and configure them. First is\n    first. Let's install required tools and configure them. First is first.\n    Let's install required tools and configure them. First is first. Let's\n    install required tools and configure them. First is first. Let's install\n    required tools and configure them.\n  </div>\n\n  <hr />\n  <h1 class=\"title-2\" substring=\"Built by Ahmet Emrebas\">\n    Welcome to techbir angular material\n  </h1>\n\n  <div class=\"subtitle-2\">Let's learn how to structure our project.</div>\n\n  <div class=\"content-2\">\n    First is first. Let's install required tools and configure them. First is\n    first. Let's install required tools and configure them. First is first.\n    Let's install required tools and configure them. First is first. Let's\n    install required tools and configure them. First is first. Let's install\n    required tools and configure them.\n  </div>\n</article>\n"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-01e512ddd176702e720f88388af274063f3eb8b0536d2c5377d8782e6eca897de22a5aeb598d14e22c920129ca5317ce3d9cba1cf2c242945a9c924042586d0e",
            "file": "libs/material/src/form/form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter<Record<string, unknown>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<InputComponent>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "InputComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "componentType",
                    "defaultValue": "InputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "formValue",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | >",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "tbFormActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<FormActionsDirective>",
                    "optional": true,
                    "description": "<p>Form action container marked by FormActionDirective</p>\n",
                    "line": 24,
                    "rawdescription": "\nForm action container marked by FormActionDirective",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "FormActionsDirective"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "childValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "preventDefault",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "InputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { InputComponent } from './input/input.component';\nimport { FormActionsDirective } from './form-actions/form-actions.directive';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MicroModule } from '../micro/micro.module';\n\n@Component({\n  selector: 'tb-form',\n  standalone: true,\n  imports: [MicroModule, FormsModule, ReactiveFormsModule, InputComponent],\n  templateUrl: './form.component.html',\n})\nexport class FormComponent {\n  componentType = InputComponent;\n\n  /** Form action container marked by FormActionDirective  */\n  @ContentChildren(FormActionsDirective)\n  tbFormActions?: QueryList<FormActionsDirective>;\n\n  @ContentChildren(InputComponent) children!: QueryList<InputComponent>;\n\n  @Output() submitEvent = new EventEmitter<Record<string, unknown>>();\n\n  readonly formValue: Record<string, unknown> = {};\n\n  preventDefault(event: Event) {\n    event.preventDefault();\n  }\n\n  childValue(value: any) {\n    return {\n      ...value,\n      formValue: this.formValue,\n    };\n  }\n\n  submit() {\n    this.submitEvent.emit(this.formValue);\n  }\n\n  reset() {\n    Object.keys(this.formValue).forEach((e) => delete this.formValue[e]);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<form\n  #form=\"ngForm\"\n  ngForm\n  class=\"form-container primary\"\n  autocomplete=\"on\"\n  (ngSubmit)=\"submit()\"\n  (submit)=\"preventDefault($event)\"\n  (reset)=\"reset()\"\n  novalidate\n>\n  <ng-container *ngFor=\"let child of children\">\n    <ng-container\n      *ngComponentOutlet=\"componentType; inputs: childValue(child)\"\n    ></ng-container>\n  </ng-container>\n\n  <div class=\"form-actions\">\n    <ng-container\n      *ngTemplateOutlet=\"tbFormActions?.first?.templateRef!\"\n    ></ng-container>\n  </div>\n</form>\n"
        },
        {
            "name": "IconButtonComponent",
            "id": "component-IconButtonComponent-2ad7203bfe1b8b177a4641fa62023dc7bd22a5b3fc32b4b3a7c507f79c1f881bbb124697afc5a7c7ec72e0eea84505dcdc65dcbdee7a30f3679594f7d2fafafb",
            "file": "libs/material/src/button/icon-button/icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-icon-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button    class=\"icon-button  {{ color }} {{ variant }} {{size}}\"\n    (click)=\"emit()\"\n    [tbTooltip]=\"tooltip\"\n    [tbTooltipPosition]=\"tooltipPosition\"\n  >\n    <span class=\"icon\">{{ icon }}</span>\n  </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "tooltipPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Position",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonButtonComponent } from '../common-button';\nimport { Icon } from '../../api';\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-icon-button',\n  standalone: true,\n  imports: [MicroModule],\n  template: `<button\n    class=\"icon-button  {{ color }} {{ variant }} {{size}}\"\n    (click)=\"emit()\"\n    [tbTooltip]=\"tooltip\"\n    [tbTooltipPosition]=\"tooltipPosition\"\n  >\n    <span class=\"icon\">{{ icon }}</span>\n  </button>`,\n})\nexport class IconButtonComponent extends CommonButtonComponent {\n  @Input() icon?: Icon;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonButtonComponent"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-92a259165abfa37426dfd2d7adb5f6f718c852d58350433038f11df6adb8121ea3a8695effaf21ea97d8e48db0832d9064d1e4b67ac8105a7cd8330a6e75af9b",
            "file": "libs/material/src/form/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "'on'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "formValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Record<string | any>",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "InputVariant",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TextInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextInputComponent } from '../text-input/text-input.component';\nimport { Color, Icon, InputVariant } from '../../api';\n\n@Component({\n  selector: 'tb-input',\n  standalone: true,\n  imports: [CommonModule, TextInputComponent],\n  templateUrl: './input.component.html',\n})\nexport class InputComponent {\n  /** @ignore */\n  @Input() __ngContext__: any;\n  @Input() id = '';\n  @Input() name = '';\n  @Input() value = '';\n  @Input() type: HTMLInputElement['type'] = 'text';\n  @Input() autocomplete: HTMLInputElement['autocomplete'] = 'on';\n  @Input() color: Color = 'primary';\n  @Input() label = 'Input Label';\n  @Input() variant: InputVariant = 'basic';\n  @Input() icon: Icon = 'info';\n  @Input() formValue?: Record<string, any>;\n\n  handleInput(event: any) {\n    if (this.formValue) {\n      this.formValue[this.name] = event;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<tb-text-input\n  [autocomplete]=\"autocomplete\"\n  [value]=\"value\"\n  [name]=\"name\"\n  [id]=\"id\"\n  [color]=\"color\"\n  [type]=\"type\"\n  [label]=\"label\"\n  [icon]=\"icon\"\n  [variant]=\"variant\"\n  (inputEvent)=\"handleInput($event)\"\n></tb-text-input>\n"
        },
        {
            "name": "ListComponent",
            "id": "component-ListComponent-7ba9273f994579f9cc77cea2886382473ec99dd48846af0ffa8292043480f54bea5c195c6a1331cd141733172bc2d2efcbe62d4848a4f8a9f2a7e54a59a38637",
            "file": "libs/material/src/list/list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Icon",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ListItemComponent>",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ListItemComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "componentType",
                    "defaultValue": "ListItemComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ListItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChildren, Input, QueryList } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListItemComponent } from './list-item/list-item.component';\nimport { Color, Icon } from '../api';\n\n@Component({\n  selector: 'tb-list',\n  standalone: true,\n  imports: [CommonModule, ListItemComponent],\n  templateUrl: './list.component.html',\n  styles: [],\n})\nexport class ListComponent {\n  componentType = ListItemComponent;\n  @ContentChildren(ListItemComponent) children?: QueryList<ListItemComponent>;\n\n  @Input() color: Color = 'primary';\n  @Input() icon: Icon = 'info';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"list\">\n  <ng-container\n    [ngComponentOutlet]=\"componentType\"\n    [ngComponentOutletInputs]=\"{\n      label: child.label,\n      icon: child.icon || icon,\n      color: child.color || color\n    }\"\n    *ngFor=\"let child of children\"\n  ></ng-container>\n</div>\n"
        },
        {
            "name": "ListItemComponent",
            "id": "component-ListItemComponent-b0b74eb07256ccc22121a3bb698f97b4c0752959dc9f97b7cbdc82aedb2733ba766c583c941bf8e78dd29160d3c7683058446b692312359933ada329dba66c33",
            "file": "libs/material/src/list/list-item/list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Color, Icon } from '../../api';\n\n@Component({\n  selector: 'tb-list-item',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './list-item.component.html',\n  styles: [],\n})\nexport class ListItemComponent {\n  @Input() label = '';\n  @Input() color: Color = 'primary';\n  @Input() icon?: Icon  = 'info';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"list-item {{ color }}\">\n  <span class=\"icon\">{{ icon }}</span>\n  <span>{{ label }}</span>\n</div>\n"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-575b8e0fed677a06c7e4d33fea9a902769f3cdd9055ab641c9e6296f650b146ca65ab6c83217050bc22c4cd2b1131dde2edc79478dd2c57615f644281e0a1723",
            "file": "libs/material/src/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "containerView",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"row\" | \"column\"",
                    "decorators": []
                },
                {
                    "name": "openDirection",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Position",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "tooltipPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Position",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, any>[]",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "MenuComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChildren, Input } from '@angular/core';\nimport { ButtonComponent } from '../button';\nimport { Position } from '../api';\nimport { MicroModule } from '../micro/micro.module';\n\n@Component({\n  selector: 'tb-menu',\n  standalone: true,\n  imports: [MicroModule, ButtonComponent],\n  templateUrl: './menu.component.html',\n})\nexport class MenuComponent extends ButtonComponent {\n  /** @ignore */\n  readonly __componentType = MenuComponent;\n  @ContentChildren(MenuComponent) children?: Record<string, any>[];\n\n  @Input() openDirection: Position = 'bottom';\n  @Input() containerView: 'row' | 'column' = 'column';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "ButtonComponent",
            "templateData": "<div class=\"dropdown {{ openDirection }} {{ color }}\">\n  <tb-button\n    [color]=\"color\"\n    [label]=\"label\"\n    [type]=\"type\"\n    [variant]=\"variant\"\n    (clickEvent)=\"emitClickEvent()\"\n    [icon]=\"icon\"\n    [size]=\"size\"\n  ></tb-button>\n\n  <div\n    class=\"dropdown-items {{ containerView }}\"\n    *ngIf=\"children && children.length > 0\"\n  >\n    <ng-container *ngFor=\"let child of children\">\n      <ng-container\n        [ngComponentOutletInputs]=\"child\"\n        [ngComponentOutlet]=\"__componentType\"\n      ></ng-container>\n    </ng-container>\n  </div>\n</div>\n"
        },
        {
            "name": "NavListComponent",
            "id": "component-NavListComponent-5082431e894a995f20aee2afe8a3d54b0c0bd75efaa86afad16c98bba2aa37465f68018b86ba64ef475fcf9de633744b871cffd0d90213eef4b93cde79b29ccf",
            "file": "libs/material/src/nav-list/nav-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-nav-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./nav-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Icon",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<Record<string, >>",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "NavListItemComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "componentType",
                    "defaultValue": "NavListItemComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ContentChildren,\n  Input,\n  NgModule,\n  QueryList,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavListItemComponent } from './nav-list-item/nav-list-item.component';\nimport { Color, Icon } from '../api';\n\n@Component({\n  selector: 'tb-nav-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './nav-list.component.html',\n})\nexport class NavListComponent {\n  componentType = NavListItemComponent;\n\n  @ContentChildren(NavListItemComponent) children?: QueryList<\n    Record<string, unknown>\n  >;\n  @Input() color: Color = 'primary';\n  @Input() icon: Icon = 'info';\n}\n\n@NgModule({\n  imports: [NavListComponent, NavListItemComponent],\n  exports: [NavListComponent, NavListItemComponent],\n})\nexport class NavListModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nav-list\">\n  <ng-container\n    [ngComponentOutlet]=\"componentType\"\n    [ngComponentOutletInputs]=\"child\"\n    *ngFor=\"let child of children\"\n  ></ng-container>\n</div>\n"
        },
        {
            "name": "NavListItemComponent",
            "id": "component-NavListItemComponent-d39fb557edfaaaa7e3ade9f710aa9a76ee4cf430babfcf18888167f33576de37a0bd5eabdc2e72dfb693c51fc5c51ecbc0d85ed17c8f4cffab31115a9cae3743",
            "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-nav-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./nav-list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MicroModule } from '../../micro/micro.module';\n\n@Component({\n  selector: 'tb-nav-list-item',\n  standalone: true,\n  imports: [MicroModule],\n  templateUrl: './nav-list-item.component.html',\n})\nexport class NavListItemComponent {\n  @Input() label?: string;\n  @Input() icon?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "\n"
        },
        {
            "name": "NotificationComponent",
            "id": "component-NotificationComponent-553379e7005c9d01453242576e3de3e25cb63ab886961cb5d7412b85d2cfbbe15806b93d06342611491bc98fa078134043ecb8350d84e5f607f5fe5cecbce0d6",
            "file": "libs/material/src/notification/notification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-notification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notification.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-notification',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './notification.component.html',\n  styles: [],\n})\nexport class NotificationComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>notification works!</p>\n"
        },
        {
            "name": "NumberInputComponent",
            "id": "component-NumberInputComponent-af318eea5dabde061c60f93d66068a9a972fcb3934f73d2050c81df1e8bf7f056f077fc437577a70d554d77db2db6f501621453ea384935f3192164414773596",
            "file": "libs/material/src/form/number-input/number-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-number-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./number-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-number-input',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './number-input.component.html',\n  styles: [],\n})\nexport class NumberInputComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>number-input works!</p>\n"
        },
        {
            "name": "SampleButtonsComponent",
            "id": "component-SampleButtonsComponent-bca19b3408164e28646e5aa05ce71dd71ed32e18d5ec64dc2bd819452d7fcee7c2e95932551a2491928a394246809ee98a7a1e7f0f2e647a7551dc798511cd72",
            "file": "libs/material/src/button/sample-buttons/sample-buttons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-sample-buttons",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex column gap-2 p-2\">\n </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from '../button.module';\n\n@Component({\n  selector: 'tb-sample-buttons',\n  standalone: true,\n  imports: [ButtonModule],\n  template: ` <div class=\"flex column gap-2 p-2\">\n    \n  </div> `,\n})\nexport class SampleButtonsComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-81ee66b5ca55a1812ac403263adc9250453b313090a453cc03bd136ba53ea6d925156d1682daed49dcfc3bedc5a638ade395c804c62dbed1feb0b3f675a778c0",
            "file": "libs/material/src/stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-stepper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-stepper',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './stepper.component.html',\n  styles: [],\n})\nexport class StepperComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>stepper works!</p>\n"
        },
        {
            "name": "StickyNotesComponent",
            "id": "component-StickyNotesComponent-dd7e585cdec6aea21f73df42a581fb4140bbbc3c09630a3df457cc8f22332679a73226356efd70e42610c2e3f3d286de0ffd18cc11164988b9efa10a81553536",
            "file": "libs/material/src/sticky-notes/sticky-notes.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-sticky-notes",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sticky-notes.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'tb-sticky-notes',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sticky-notes.component.html',\n  styles: [],\n})\nexport class StickyNotesComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>sticky-notes works!</p>\n"
        },
        {
            "name": "TabButtonComponent",
            "id": "component-TabButtonComponent-691c9fd728cb8ec35539235609bd0153a1dd398a853e28e59f43ab49b13f5ca4fd1e97f40f10800b52fa537919bae9e54c65f96c6eef5414605486ab037ffe18",
            "file": "libs/material/src/button/tab-button/tab-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-tab-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button class=\"tab-button {{ color }} {{ variant }} {{ size }}\">    <span class=\"icon\">{{ icon }}</span>\n    <span *ngIf=\"label\">{{ label }}</span>\n  </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Color",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ButtonSize",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "tooltipPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Position",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ButttonVariant",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonButtonComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CommonButtonComponent } from '../common-button';\nimport { Icon } from '../../api';\n\n@Component({\n  selector: 'tb-tab-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: `<button class=\"tab-button {{ color }} {{ variant }} {{ size }}\">\n    <span class=\"icon\">{{ icon }}</span>\n    <span *ngIf=\"label\">{{ label }}</span>\n  </button>`,\n  styles: [],\n})\nexport class TabButtonComponent extends CommonButtonComponent {\n  @Input() label?: string;\n  @Input() icon?: Icon;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "CommonButtonComponent"
        },
        {
            "name": "TabContainerComponent",
            "id": "component-TabContainerComponent-2879cbf6393991c458274a9a1a369a551785be61e3897e5e3a8787b71d734c14be70ca5eb141e609445eed03e87d9a518d685fa58a6e999817c10a4b46037894",
            "file": "libs/material/src/tab/tab-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-tab-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tab-container.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'tab'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "TabContainerType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeChild$",
                    "defaultValue": "new BehaviorSubject<TabDirective | undefined>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<TabDirective>",
                    "optional": true,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "TabDirective"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "container",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLDivElement>",
                    "optional": true,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "delayedChild$",
                    "defaultValue": "this.activeChild$.pipe(debounceTime(200))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "activateChild",
                    "args": [
                        {
                            "name": "child",
                            "type": "TabDirective",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "child",
                            "type": "TabDirective",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "scroll",
                    "args": [
                        {
                            "name": "event",
                            "type": "WheelEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "WheelEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MicroModule",
                    "type": "module"
                },
                {
                    "name": "NavListModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, debounceTime } from 'rxjs';\nimport { TabDirective } from './tab.directive';\nimport { fadeInOnEnterAnimation } from 'angular-animations';\nimport { NavListModule } from './../nav-list/nav-list.component';\nimport { MicroModule } from './../micro/micro.module';\nimport { ButtonComponent } from './../button';\n\nexport type TabContainerType = 'sidenav' | 'tab';\n@Component({\n  selector: 'tb-tab-container',\n  standalone: true,\n  imports: [MicroModule, NavListModule, ButtonComponent],\n  templateUrl: './tab-container.component.html',\n  animations: [fadeInOnEnterAnimation({ anchor: 'enter', duration: 1000 })],\n})\nexport class TabContainerComponent implements AfterViewInit {\n  @ViewChild('container') container?: ElementRef<HTMLDivElement>;\n  @ContentChildren(TabDirective) children?: QueryList<TabDirective>;\n\n  @Input() type: TabContainerType = 'tab';\n\n  activeChild$ = new BehaviorSubject<TabDirective | undefined>(undefined);\n  delayedChild$ = this.activeChild$.pipe(debounceTime(200));\n\n  activateChild(child: TabDirective) {\n    this.activeChild$.next(undefined);\n    setTimeout(() => {\n      this.activeChild$.next(child);\n    }, 200);\n  }\n\n  scroll(event: WheelEvent) {\n    event.preventDefault();\n    this.container?.nativeElement.scrollBy({ left: event.deltaY });\n  }\n\n  ngAfterViewInit(): void {\n    if (this.children?.first) {\n      this.activateChild(this.children.first);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<ng-container *ngIf=\"type === 'tab'\">\n  <div\n    #container\n    class=\"flex row gap-2 w-100 ox-auto oy-hidden pb-3 p-1 relative\"\n    tbScrollX\n  >\n    <ng-container *ngFor=\"let child of children\">\n        <!-- triger button  -->\n    </ng-container>\n  </div>\n\n  <div *ngIf=\"delayedChild$ | async as delayedChild\" [@enter]>\n    <ng-container *ngTemplateOutlet=\"delayedChild.templateRef\">\n      <ng-content></ng-content>\n    </ng-container>\n  </div>\n</ng-container>\n\n<!-- Sidenav -->\n<ng-container *ngIf=\"type === 'sidenav'\">\n  <div class=\"flex row gap-2 w-100\">\n    <tb-nav-list>\n      <tb-nav-list-item\n        (clickEvent)=\"activateChild(child)\"\n        *ngFor=\"let child of children\"\n      ></tb-nav-list-item>\n    </tb-nav-list>\n\n    <div *ngIf=\"delayedChild$ | async as delayedChild\" [@enter]>\n      <ng-container *ngTemplateOutlet=\"delayedChild.templateRef\">\n        <ng-content></ng-content>\n      </ng-container>\n    </div>\n  </div>\n</ng-container>\n"
        },
        {
            "name": "TextInputComponent",
            "id": "component-TextInputComponent-86e56873e7ff3ddaf4bc0e0fe49a2d32fc88360765fe314fcdd9528ae5b37176ab389c7bae37522c662d0a2238f226b66ea456d5caef922ec3cd22e6d8c88a72",
            "file": "libs/material/src/form/text-input/text-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-text-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./text-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Icon",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Input Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "InputVariant",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "inputEvent",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emitEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "HasValueDirective",
                    "type": "directive"
                },
                {
                    "name": "FocusDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HasValueDirective } from '../has-value/has-value.directive';\nimport { FocusDirective } from '../../micro/focus/focus.directive';\nimport { Color, Icon, InputVariant } from '../../api';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@Component({\n  selector: 'tb-text-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HasValueDirective,\n    FocusDirective,\n  ],\n  templateUrl: './text-input.component.html',\n})\nexport class TextInputComponent {\n  @Output() inputEvent = new EventEmitter<string>();\n  @Input() value = '';\n  @Input() id = '';\n  @Input() name = '';\n  @Input() type: HTMLInputElement['type'] = 'text';\n  @Input() autocomplete: HTMLInputElement['autocomplete'] = 'off';\n  @Input() color: Color = 'primary';\n  @Input() label = 'Input Label';\n  @Input() variant: InputVariant = 'basic';\n  @Input() icon: Icon = 'info';\n\n  emitEvent() {\n    this.inputEvent.emit(this.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"input-container {{ color }} {{ variant }}\">\n  <span class=\"icon\"> {{ icon }}</span>\n  <label [for]=\"label\">{{ label }} </label>\n  <input\n    [(ngModel)]=\"value\"\n    [id]=\"label\"\n    [type]=\"type\"\n    [name]=\"name\"\n    [autocomplete]=\"autocomplete\"\n    (input)=\"emitEvent()\"\n    tbHasValue\n  />\n</div>\n"
        },
        {
            "name": "ToolbarComponent",
            "id": "component-ToolbarComponent-30a7e7eed8f074505ca76d37729a88ffac64f8143b7fd84d1ea30a89d369d3419f087962f1692da2eb79fcbba495850c8cfa261c963ad8e1f6fe46eeccdacb78",
            "file": "libs/material/src/toolbar/toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tb-toolbar",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"toolbar {{ color }}\">\n  <ng-content></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Color",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Color } from '../api';\n\n@Component({\n  selector: 'tb-toolbar',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"toolbar {{ color }}\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class ToolbarComponent {\n  @Input() color: Color = 'primary';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "ButtonModule",
            "id": "module-ButtonModule-03d37ff45ec4aa7ff90130d381fbbd93cfe2a46de704cbb39c7b54ddb02a7ec1919f8f61e9f0bc629b559539e87359e5c18d21265a64a3de00a4a8725fe8e65c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ButtonComponent } from './button';\r\nimport { CombinedButtonComponent } from './combined-button';\r\nimport { IconButtonComponent } from './icon-button';\r\nimport { TabButtonComponent } from './tab-button';\r\n\r\n@NgModule({\r\n  imports: [\r\n    ButtonComponent,\r\n    CombinedButtonComponent,\r\n    IconButtonComponent,\r\n    TabButtonComponent,\r\n  ],\r\n  exports: [\r\n    ButtonComponent,\r\n    CombinedButtonComponent,\r\n    IconButtonComponent,\r\n    TabButtonComponent,\r\n  ],\r\n})\r\nexport class ButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CombinedButtonComponent"
                        },
                        {
                            "name": "IconButtonComponent"
                        },
                        {
                            "name": "TabButtonComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CombinedButtonComponent"
                        },
                        {
                            "name": "IconButtonComponent"
                        },
                        {
                            "name": "TabButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FormModule",
            "id": "module-FormModule-4e778a54c28f8b673c6db4a55ff3d9327a9588543df727d9f13788b06f883543e23526ffd6700b775fe01df7e8221c0859cdaf12905f723b158bf9420fe9a70a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/form/form.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { FormComponent } from './form.component';\r\nimport { InputComponent } from './input/input.component';\r\nimport { FormActionsDirective } from './form-actions/form-actions.directive';\r\n\r\n@NgModule({\r\n  imports: [FormComponent, InputComponent, FormActionsDirective],\r\n  exports: [FormComponent, InputComponent, FormActionsDirective],\r\n})\r\nexport class FormModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FormActionsDirective"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FormActionsDirective"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MicroModule",
            "id": "module-MicroModule-f4ef9f146f20625fc72e288716c67414fb4543867aeda36f62ed8f94b89f80f8151eab8b05ebcf333476ce48ff9322099e8e2d893d985e588f477c6bf07d46f5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/micro/micro.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BadgeDirective } from './badge/badge.directive';\nimport { FocusDirective } from './focus/focus.directive';\nimport { ScrollDirectionDirective } from './scroll-direction/scroll-direction.directive';\nimport { SetAttributeDirective } from './set-attribute/set-attribute.directive';\nimport { TooltipDirective } from './tooltip/tooltip.directive';\nimport { SetComponentAttributeDirective } from './set-component-attribute/set-component-attribute.directive';\nimport { ClassListDirective } from './class-list/class-list.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BadgeDirective,\n    FocusDirective,\n    ScrollDirectionDirective,\n    SetAttributeDirective,\n    TooltipDirective,\n    SetComponentAttributeDirective,\n    ClassListDirective,\n  ],\n  exports: [\n    CommonModule,\n    BadgeDirective,\n    FocusDirective,\n    ScrollDirectionDirective,\n    SetAttributeDirective,\n    SetComponentAttributeDirective,\n    TooltipDirective,\n    ClassListDirective\n  ],\n})\nexport class MicroModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BadgeDirective"
                        },
                        {
                            "name": "ClassListDirective"
                        },
                        {
                            "name": "FocusDirective"
                        },
                        {
                            "name": "ScrollDirectionDirective"
                        },
                        {
                            "name": "SetAttributeDirective"
                        },
                        {
                            "name": "TooltipDirective"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BadgeDirective"
                        },
                        {
                            "name": "ClassListDirective"
                        },
                        {
                            "name": "FocusDirective"
                        },
                        {
                            "name": "ScrollDirectionDirective"
                        },
                        {
                            "name": "SetAttributeDirective"
                        },
                        {
                            "name": "SetComponentAttributeDirective"
                        },
                        {
                            "name": "TooltipDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NavListModule",
            "id": "module-NavListModule-5082431e894a995f20aee2afe8a3d54b0c0bd75efaa86afad16c98bba2aa37465f68018b86ba64ef475fcf9de633744b871cffd0d90213eef4b93cde79b29ccf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/nav-list/nav-list.component.ts",
            "methods": [],
            "sourceCode": "import {\n  Component,\n  ContentChildren,\n  Input,\n  NgModule,\n  QueryList,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavListItemComponent } from './nav-list-item/nav-list-item.component';\nimport { Color, Icon } from '../api';\n\n@Component({\n  selector: 'tb-nav-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './nav-list.component.html',\n})\nexport class NavListComponent {\n  componentType = NavListItemComponent;\n\n  @ContentChildren(NavListItemComponent) children?: QueryList<\n    Record<string, unknown>\n  >;\n  @Input() color: Color = 'primary';\n  @Input() icon: Icon = 'info';\n}\n\n@NgModule({\n  imports: [NavListComponent, NavListItemComponent],\n  exports: [NavListComponent, NavListItemComponent],\n})\nexport class NavListModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "NavListComponent"
                        },
                        {
                            "name": "NavListItemComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NavListComponent"
                        },
                        {
                            "name": "NavListItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabModule",
            "id": "module-TabModule-9dee7ebf27e96733407d4e5d905bc5522a1764a6ee10787f4b77391aed2ce716f73113fd5c3654f897a10ca40192aa893fcd66d15b1b695425571b7607accc48",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/tab/tab.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { TabDirective } from './tab.directive';\r\nimport { TabContainerComponent } from './tab-container.component';\r\n\r\n@NgModule({\r\n  declarations: [TabDirective],\r\n  imports: [TabContainerComponent],\r\n  exports: [TabContainerComponent, TabDirective],\r\n})\r\nexport class TabModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TabContainerComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabContainerComponent"
                        },
                        {
                            "name": "TabDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'red',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/alert works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app-auth works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app-inventory works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n    variant: 'raised',\n    color: 'primary',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const buttonElement = canvas.getByText(/Button/gi);\n    expect(buttonElement).toBeTruthy();\n    userEvent.hover(buttonElement);\n    userEvent.click(buttonElement);\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/colors works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/fonts works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/list works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { label: 'Triger 1' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Triger 1/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'primary',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/nav-list works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/notification works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/stepper works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sticky-notes works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab-container works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/toolbar works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/button works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/combined-button works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/common-button/common-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    tooltip: '',\n    color: 'primary',\n    variant: 'basic',\n    size: 'regular',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/common-button works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/icon-button works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sample-buttons works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab-button works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/array-input/array-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/array-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/boolean-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/enum-input/enum-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/enum-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    id: '',\n    name: '',\n    value: '',\n    type: 'text',\n    autocomplete: 'on',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/number-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: '',\n    id: '',\n    name: '',\n    type: 'text',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/text-input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    color: 'primary',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/list-item works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/nav-list-item works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "LoginForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    children: [\n      {\n        type: 'text',\n        name: 'username',\n        color: 'primary',\n        autocomplete: 'email',\n        label: 'Username',\n        icon: 'email',\n      },\n      {\n        type: 'password',\n        name: 'password',\n        color: 'primary',\n        autocomplete: 'current-password',\n        label: 'Password',\n        icon: 'email',\n      },\n    ] as InputComponent[],\n  } as any,\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AlertComponent>",
                "defaultValue": "{\n  component: AlertComponent,\n  title: 'AlertComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppAuthComponent>",
                "defaultValue": "{\n  component: AppAuthComponent,\n  title: 'AppAuthComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppInventoryComponent>",
                "defaultValue": "{\n  component: AppInventoryComponent,\n  title: 'AppInventoryComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  component: ButtonComponent,\n  title: 'ButtonComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorsComponent>",
                "defaultValue": "{\n  component: ColorsComponent,\n  title: 'ColorsComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FontsComponent>",
                "defaultValue": "{\n  component: FontsComponent,\n  title: 'FontsComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormComponent>",
                "defaultValue": "{\n  component: FormComponent,\n  title: 'FormComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ListComponent>",
                "defaultValue": "{\n  component: ListComponent,\n  title: 'ListComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MenuComponent>",
                "defaultValue": "{\n  component: MenuComponent,\n  title: 'MenuComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavListComponent>",
                "defaultValue": "{\n  component: NavListComponent,\n  title: 'NavListComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NotificationComponent>",
                "defaultValue": "{\n  component: NotificationComponent,\n  title: 'NotificationComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StepperComponent>",
                "defaultValue": "{\n  component: StepperComponent,\n  title: 'StepperComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StickyNotesComponent>",
                "defaultValue": "{\n  component: StickyNotesComponent,\n  title: 'StickyNotesComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabContainerComponent>",
                "defaultValue": "{\n  component: TabContainerComponent,\n  title: 'TabContainerComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToolbarComponent>",
                "defaultValue": "{\n  component: ToolbarComponent,\n  title: 'ToolbarComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  component: ButtonComponent,\n  title: 'ButtonComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CombinedButtonComponent>",
                "defaultValue": "{\n  component: CombinedButtonComponent,\n  title: 'CombinedButtonComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/common-button/common-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CommonButtonComponent>",
                "defaultValue": "{\n  component: CommonButtonComponent,\n  title: 'CommonButtonComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<IconButtonComponent>",
                "defaultValue": "{\n  component: IconButtonComponent,\n  title: 'IconButtonComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SampleButtonsComponent>",
                "defaultValue": "{\n  component: SampleButtonsComponent,\n  title: 'SampleButtonsComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabButtonComponent>",
                "defaultValue": "{\n  component: TabButtonComponent,\n  title: 'TabButtonComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/array-input/array-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ArrayInputComponent>",
                "defaultValue": "{\n  component: ArrayInputComponent,\n  title: 'ArrayInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BooleanInputComponent>",
                "defaultValue": "{\n  component: BooleanInputComponent,\n  title: 'BooleanInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateInputComponent>",
                "defaultValue": "{\n  component: DateInputComponent,\n  title: 'DateInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/enum-input/enum-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<EnumInputComponent>",
                "defaultValue": "{\n  component: EnumInputComponent,\n  title: 'EnumInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\n  component: InputComponent,\n  title: 'InputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NumberInputComponent>",
                "defaultValue": "{\n  component: NumberInputComponent,\n  title: 'NumberInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextInputComponent>",
                "defaultValue": "{\n  component: TextInputComponent,\n  title: 'TextInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ListItemComponent>",
                "defaultValue": "{\n  component: ListItemComponent,\n  title: 'ListItemComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavListItemComponent>",
                "defaultValue": "{\n  component: NavListItemComponent,\n  title: 'NavListItemComponent',\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'primary',\n    icon: 'home',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'home',\n    variant: 'basic',\n    color: 'primary',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    children: [\n      {\n        type: 'text',\n        name: 'firstName',\n        color: 'primary',\n        autocomplete: 'given-name',\n        label: 'First Name',\n        icon: 'person',\n      },\n    ] as InputComponent[],\n  } as any,\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'warn',\n    icon: 'home',\n    children: [\n      { label: 'List 1', icon: 'apps', color: 'primary' },\n      { label: 'List 2' },\n      { label: 'List 3', color: 'primary' },\n      { label: 'List 4' },\n    ] as any,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Triger 1',\n    color: 'primary',\n    openDirection: 'bottom',\n    children: [],\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'primary',\n    icon: 'info',\n    children: [\n      { label: 'Home', icon: 'home' },\n      { label: 'Apps', icon: 'apps' },\n      { label: 'Store', icon: 'store' },\n      { label: 'Inventory', icon: 'inventory' },\n      { label: 'Profile', icon: 'person' },\n    ] as any,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/common-button/common-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    tooltip: '',\n    color: 'primary',\n    variant: 'basic',\n    size: 'regular',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/button/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/array-input/array-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/enum-input/enum-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    id: '',\n    name: '',\n    value: '',\n    type: 'text',\n    autocomplete: 'on',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: '',\n    id: '',\n    name: '',\n    type: 'text',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    color: 'primary',\n    icon: 'info',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    icon: 'info',\n  },\n}"
            }
        ],
        "functions": [
            {
                "name": "slideFromRightOnEnter",
                "file": "libs/material/src/api/animations.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "ButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"regular\" | \"big\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButtonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"button\" | \"icon-button\" | \"combined-button\" | \"tab-button\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButttonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"stroked\" | \"inbox\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Color",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"accent\" | \"warn\" | \"red\" | \"green\" | \"black\" | \"white\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"signature\" | \"10k\" | \"10mp\" | \"11mp\" | \"123\" | \"12mp\" | \"13mp\" | \"14mp\" | \"15mp\" | \"16mp\" | \"17mp\" | \"18_up_rating\" | \"18mp\" | \"19mp\" | \"1k_plus\" | \"1k\" | \"1x_mobiledata\" | \"20mp\" | \"21mp\" | \"22mp\" | \"23mp\" | \"24mp\" | \"2k_plus\" | \"2k\" | \"2mp\" | \"30fps_select\" | \"30fps\" | \"360\" | \"3d_rotation\" | \"3g_mobiledata\" | \"3k_plus\" | \"3k\" | \"3mp\" | \"3p\" | \"4g_mobiledata\" | \"4g_plus_mobiledata\" | \"4k_plus\" | \"4k\" | \"4mp\" | \"5g\" | \"5k_plus\" | \"5k\" | \"5mp\" | \"6_ft_apart\" | \"60fps_select\" | \"60fps\" | \"6k_plus\" | \"6k\" | \"6mp\" | \"7k_plus\" | \"7k\" | \"7mp\" | \"8k_plus\" | \"8k\" | \"8mp\" | \"9k_plus\" | \"9k\" | \"9mp\" | \"abc\" | \"ac_unit\" | \"access_alarm\" | \"access_alarms\" | \"access_time_filled\" | \"access_time\" | \"accessibility_new\" | \"accessibility\" | \"accessible_forward\" | \"accessible\" | \"account_balance_wallet\" | \"account_balance\" | \"account_box\" | \"account_circle\" | \"account_tree\" | \"ad_units\" | \"adb\" | \"add_a_photo\" | \"add_alarm\" | \"add_alert\" | \"add_box\" | \"add_business\" | \"add_card\" | \"add_chart\" | \"add_circle_outline\" | \"add_circle\" | \"add_comment\" | \"add_home_work\" | \"add_home\" | \"add_ic_call\" | \"add_link\" | \"add_location_alt\" | \"add_location\" | \"add_moderator\" | \"add_photo_alternate\" | \"add_reaction\" | \"add_road\" | \"add_shopping_cart\" | \"add_task\" | \"add_to_drive\" | \"add_to_home_screen\" | \"add_to_photos\" | \"add_to_queue\" | \"add\" | \"addchart\" | \"adf_scanner\" | \"adjust\" | \"admin_panel_settings\" | \"ads_click\" | \"agriculture\" | \"air\" | \"airline_seat_flat_angled\" | \"airline_seat_flat\" | \"airline_seat_individual_suite\" | \"airline_seat_legroom_extra\" | \"airline_seat_legroom_normal\" | \"airline_seat_legroom_reduced\" | \"airline_seat_recline_extra\" | \"airline_seat_recline_normal\" | \"airline_stops\" | \"airlines\" | \"airplane_ticket\" | \"airplanemode_active\" | \"airplanemode_inactive\" | \"airplay\" | \"airport_shuttle\" | \"alarm_add\" | \"alarm_off\" | \"alarm_on\" | \"alarm\" | \"album\" | \"align_horizontal_center\" | \"align_horizontal_left\" | \"align_horizontal_right\" | \"align_vertical_bottom\" | \"align_vertical_center\" | \"align_vertical_top\" | \"all_inbox\" | \"all_inclusive\" | \"all_out\" | \"alt_route\" | \"alternate_email\" | \"analytics\" | \"anchor\" | \"android\" | \"animation\" | \"announcement\" | \"aod\" | \"apartment\" | \"api\" | \"app_blocking\" | \"app_registration\" | \"app_settings_alt\" | \"app_shortcut\" | \"approval\" | \"apps_outage\" | \"apps\" | \"architecture\" | \"archive\" | \"area_chart\" | \"arrow_back_ios_new\" | \"arrow_back_ios\" | \"arrow_back\" | \"arrow_circle_down\" | \"arrow_circle_left\" | \"arrow_circle_right\" | \"arrow_circle_up\" | \"arrow_downward\" | \"arrow_drop_down_circle\" | \"arrow_drop_down\" | \"arrow_drop_up\" | \"arrow_forward_ios\" | \"arrow_forward\" | \"arrow_left\" | \"arrow_outward\" | \"arrow_right_alt\" | \"arrow_right\" | \"arrow_upward\" | \"art_track\" | \"article\" | \"aspect_ratio\" | \"assessment\" | \"assignment_ind\" | \"assignment_late\" | \"assignment_return\" | \"assignment_returned\" | \"assignment_turned_in\" | \"assignment\" | \"assist_walker\" | \"assistant_direction\" | \"assistant_photo\" | \"assistant\" | \"assured_workload\" | \"atm\" | \"attach_email\" | \"attach_file\" | \"attach_money\" | \"attachment\" | \"attractions\" | \"attribution\" | \"audio_file\" | \"audiotrack\" | \"auto_awesome_mosaic\" | \"auto_awesome_motion\" | \"auto_awesome\" | \"auto_delete\" | \"auto_fix_high\" | \"auto_fix_normal\" | \"auto_fix_off\" | \"auto_graph\" | \"auto_mode\" | \"auto_stories\" | \"autofps_select\" | \"autorenew\" | \"av_timer\" | \"baby_changing_station\" | \"back_hand\" | \"backpack\" | \"backspace\" | \"backup_table\" | \"backup\" | \"badge\" | \"bakery_dining\" | \"balance\" | \"balcony\" | \"ballot\" | \"bar_chart\" | \"batch_prediction\" | \"bathroom\" | \"bathtub\" | \"battery_0_bar\" | \"battery_1_bar\" | \"battery_2_bar\" | \"battery_3_bar\" | \"battery_4_bar\" | \"battery_5_bar\" | \"battery_6_bar\" | \"battery_alert\" | \"battery_charging_full\" | \"battery_full\" | \"battery_saver\" | \"battery_std\" | \"battery_unknown\" | \"beach_access\" | \"bed\" | \"bedroom_baby\" | \"bedroom_child\" | \"bedroom_parent\" | \"bedtime_off\" | \"bedtime\" | \"beenhere\" | \"bento\" | \"bike_scooter\" | \"biotech\" | \"blender\" | \"blind\" | \"blinds_closed\" | \"blinds\" | \"block\" | \"bloodtype\" | \"bluetooth_audio\" | \"bluetooth_connected\" | \"bluetooth_disabled\" | \"bluetooth_drive\" | \"bluetooth_searching\" | \"bluetooth\" | \"blur_circular\" | \"blur_linear\" | \"blur_off\" | \"blur_on\" | \"bolt\" | \"book_online\" | \"book\" | \"bookmark_add\" | \"bookmark_added\" | \"bookmark_border\" | \"bookmark_remove\" | \"bookmark\" | \"bookmarks\" | \"border_all\" | \"border_bottom\" | \"border_clear\" | \"border_color\" | \"border_horizontal\" | \"border_inner\" | \"border_left\" | \"border_outer\" | \"border_right\" | \"border_style\" | \"border_top\" | \"border_vertical\" | \"boy\" | \"branding_watermark\" | \"breakfast_dining\" | \"brightness_1\" | \"brightness_2\" | \"brightness_3\" | \"brightness_4\" | \"brightness_5\" | \"brightness_6\" | \"brightness_7\" | \"brightness_auto\" | \"brightness_high\" | \"brightness_low\" | \"brightness_medium\" | \"broadcast_on_home\" | \"broadcast_on_personal\" | \"broken_image\" | \"browse_gallery\" | \"browser_not_supported\" | \"browser_updated\" | \"brunch_dining\" | \"brush\" | \"bubble_chart\" | \"bug_report\" | \"build_circle\" | \"build\" | \"bungalow\" | \"burst_mode\" | \"bus_alert\" | \"business_center\" | \"business\" | \"cabin\" | \"cable\" | \"cached\" | \"cake\" | \"calculate\" | \"calendar_month\" | \"calendar_today\" | \"calendar_view_day\" | \"calendar_view_month\" | \"calendar_view_week\" | \"call_end\" | \"call_made\" | \"call_merge\" | \"call_missed_outgoing\" | \"call_missed\" | \"call_received\" | \"call_split\" | \"call_to_action\" | \"call\" | \"camera_alt\" | \"camera_enhance\" | \"camera_front\" | \"camera_indoor\" | \"camera_outdoor\" | \"camera_rear\" | \"camera_roll\" | \"camera\" | \"cameraswitch\" | \"campaign\" | \"cancel_presentation\" | \"cancel_schedule_send\" | \"cancel\" | \"candlestick_chart\" | \"car_crash\" | \"car_rental\" | \"car_repair\" | \"card_giftcard\" | \"card_membership\" | \"card_travel\" | \"carpenter\" | \"cases\" | \"casino\" | \"cast_connected\" | \"cast_for_education\" | \"cast\" | \"castle\" | \"catching_pokemon\" | \"category\" | \"celebration\" | \"cell_tower\" | \"cell_wifi\" | \"center_focus_strong\" | \"center_focus_weak\" | \"chair_alt\" | \"chair\" | \"chalet\" | \"change_circle\" | \"change_history\" | \"charging_station\" | \"chat_bubble_outline\" | \"chat_bubble\" | \"chat\" | \"check_box_outline_blank\" | \"check_box\" | \"check_circle_outline\" | \"check_circle\" | \"check\" | \"checklist_rtl\" | \"checklist\" | \"checkroom\" | \"chevron_left\" | \"chevron_right\" | \"child_care\" | \"child_friendly\" | \"chrome_reader_mode\" | \"church\" | \"circle_notifications\" | \"circle\" | \"class\" | \"clean_hands\" | \"cleaning_services\" | \"clear_all\" | \"clear\" | \"close_fullscreen\" | \"close\" | \"closed_caption_disabled\" | \"closed_caption_off\" | \"closed_caption\" | \"cloud_circle\" | \"cloud_done\" | \"cloud_download\" | \"cloud_off\" | \"cloud_queue\" | \"cloud_sync\" | \"cloud_upload\" | \"cloud\" | \"co_present\" | \"co2\" | \"code_off\" | \"code\" | \"coffee_maker\" | \"coffee\" | \"collections_bookmark\" | \"collections\" | \"color_lens\" | \"colorize\" | \"comment_bank\" | \"comment\" | \"comments_disabled\" | \"commit\" | \"commute\" | \"compare_arrows\" | \"compare\" | \"compass_calibration\" | \"compost\" | \"compress\" | \"computer\" | \"confirmation_number\" | \"connect_without_contact\" | \"connected_tv\" | \"connecting_airports\" | \"construction\" | \"contact_emergency\" | \"contact_mail\" | \"contact_page\" | \"contact_phone\" | \"contact_support\" | \"contactless\" | \"contacts\" | \"content_copy\" | \"content_cut\" | \"content_paste_go\" | \"content_paste_off\" | \"content_paste_search\" | \"content_paste\" | \"contrast\" | \"control_camera\" | \"control_point_duplicate\" | \"control_point\" | \"cookie\" | \"copy_all\" | \"copyright\" | \"coronavirus\" | \"corporate_fare\" | \"cottage\" | \"countertops\" | \"create_new_folder\" | \"create\" | \"credit_card_off\" | \"credit_card\" | \"credit_score\" | \"crib\" | \"crisis_alert\" | \"crop_16_9\" | \"crop_3_2\" | \"crop_5_4\" | \"crop_7_5\" | \"crop_din\" | \"crop_free\" | \"crop_landscape\" | \"crop_original\" | \"crop_portrait\" | \"crop_rotate\" | \"crop_square\" | \"crop\" | \"cruelty_free\" | \"css\" | \"currency_bitcoin\" | \"currency_exchange\" | \"currency_franc\" | \"currency_lira\" | \"currency_pound\" | \"currency_ruble\" | \"currency_rupee\" | \"currency_yen\" | \"currency_yuan\" | \"curtains_closed\" | \"curtains\" | \"cyclone\" | \"dangerous\" | \"dark_mode\" | \"dashboard_customize\" | \"dashboard\" | \"data_array\" | \"data_exploration\" | \"data_object\" | \"data_saver_off\" | \"data_saver_on\" | \"data_thresholding\" | \"data_usage\" | \"dataset_linked\" | \"dataset\" | \"date_range\" | \"deblur\" | \"deck\" | \"dehaze\" | \"delete_forever\" | \"delete_outline\" | \"delete_sweep\" | \"delete\" | \"delivery_dining\" | \"density_large\" | \"density_medium\" | \"density_small\" | \"departure_board\" | \"description\" | \"deselect\" | \"design_services\" | \"desk\" | \"desktop_access_disabled\" | \"desktop_mac\" | \"desktop_windows\" | \"details\" | \"developer_board_off\" | \"developer_board\" | \"developer_mode\" | \"device_hub\" | \"device_thermostat\" | \"device_unknown\" | \"devices_fold\" | \"devices_other\" | \"devices\" | \"dialer_sip\" | \"dialpad\" | \"diamond\" | \"difference\" | \"dining\" | \"dinner_dining\" | \"directions_bike\" | \"directions_boat_filled\" | \"directions_boat\" | \"directions_bus_filled\" | \"directions_bus\" | \"directions_car_filled\" | \"directions_car\" | \"directions_off\" | \"directions_railway_filled\" | \"directions_railway\" | \"directions_run\" | \"directions_subway_filled\" | \"directions_subway\" | \"directions_transit_filled\" | \"directions_transit\" | \"directions_walk\" | \"directions\" | \"dirty_lens\" | \"disabled_by_default\" | \"disabled_visible\" | \"disc_full\" | \"discount\" | \"display_settings\" | \"diversity_1\" | \"diversity_2\" | \"diversity_3\" | \"dns\" | \"do_disturb_alt\" | \"do_disturb_off\" | \"do_disturb_on\" | \"do_disturb\" | \"do_not_disturb_alt\" | \"do_not_disturb_off\" | \"do_not_disturb_on_total_silence\" | \"do_not_disturb_on\" | \"do_not_disturb\" | \"do_not_step\" | \"do_not_touch\" | \"dock\" | \"document_scanner\" | \"domain_add\" | \"domain_disabled\" | \"domain_verification\" | \"domain\" | \"done_all\" | \"done_outline\" | \"done\" | \"donut_large\" | \"donut_small\" | \"door_back\" | \"door_front\" | \"door_sliding\" | \"doorbell\" | \"double_arrow\" | \"downhill_skiing\" | \"download_done\" | \"download_for_offline\" | \"download\" | \"downloading\" | \"drafts\" | \"drag_handle\" | \"drag_indicator\" | \"draw\" | \"drive_eta\" | \"drive_file_move_rtl\" | \"drive_file_move\" | \"drive_file_rename_outline\" | \"drive_folder_upload\" | \"dry_cleaning\" | \"dry\" | \"duo\" | \"dvr\" | \"dynamic_feed\" | \"dynamic_form\" | \"e_mobiledata\" | \"earbuds_battery\" | \"earbuds\" | \"east\" | \"edgesensor_high\" | \"edgesensor_low\" | \"edit_attributes\" | \"edit_calendar\" | \"edit_location_alt\" | \"edit_location\" | \"edit_note\" | \"edit_notifications\" | \"edit_off\" | \"edit_road\" | \"edit\" | \"egg_alt\" | \"egg\" | \"eject\" | \"elderly_woman\" | \"elderly\" | \"electric_bike\" | \"electric_bolt\" | \"electric_car\" | \"electric_meter\" | \"electric_moped\" | \"electric_rickshaw\" | \"electric_scooter\" | \"electrical_services\" | \"elevator\" | \"email\" | \"emergency_recording\" | \"emergency_share\" | \"emergency\" | \"emoji_emotions\" | \"emoji_events\" | \"emoji_food_beverage\" | \"emoji_nature\" | \"emoji_objects\" | \"emoji_people\" | \"emoji_symbols\" | \"emoji_transportation\" | \"energy_savings_leaf\" | \"engineering\" | \"enhanced_encryption\" | \"equalizer\" | \"error_outline\" | \"error\" | \"escalator_warning\" | \"escalator\" | \"euro_symbol\" | \"euro\" | \"ev_station\" | \"event_available\" | \"event_busy\" | \"event_note\" | \"event_repeat\" | \"event_seat\" | \"event\" | \"exit_to_app\" | \"expand_circle_down\" | \"expand_less\" | \"expand_more\" | \"expand\" | \"explicit\" | \"explore_off\" | \"explore\" | \"exposure_neg_1\" | \"exposure_neg_2\" | \"exposure_plus_1\" | \"exposure_plus_2\" | \"exposure_zero\" | \"exposure\" | \"extension_off\" | \"extension\" | \"face_2\" | \"face_3\" | \"face_4\" | \"face_5\" | \"face_6\" | \"face_retouching_natural\" | \"face_retouching_off\" | \"face_unlock\" | \"face\" | \"fact_check\" | \"factory\" | \"family_restroom\" | \"fast_forward\" | \"fast_rewind\" | \"fastfood\" | \"favorite_border\" | \"favorite\" | \"fax\" | \"featured_play_list\" | \"featured_video\" | \"feed\" | \"feedback\" | \"female\" | \"fence\" | \"festival\" | \"fiber_dvr\" | \"fiber_manual_record\" | \"fiber_new\" | \"fiber_pin\" | \"fiber_smart_record\" | \"file_copy\" | \"file_download_done\" | \"file_download_off\" | \"file_download\" | \"file_open\" | \"file_present\" | \"file_upload\" | \"filter_1\" | \"filter_2\" | \"filter_3\" | \"filter_4\" | \"filter_5\" | \"filter_6\" | \"filter_7\" | \"filter_8\" | \"filter_9_plus\" | \"filter_9\" | \"filter_alt_off\" | \"filter_alt\" | \"filter_b_and_w\" | \"filter_center_focus\" | \"filter_drama\" | \"filter_frames\" | \"filter_hdr\" | \"filter_list_off\" | \"filter_list\" | \"filter_none\" | \"filter_tilt_shift\" | \"filter_vintage\" | \"filter\" | \"find_in_page\" | \"find_replace\" | \"fingerprint\" | \"fire_extinguisher\" | \"fire_hydrant_alt\" | \"fire_truck\" | \"fireplace\" | \"first_page\" | \"fit_screen\" | \"fitbit\" | \"fitness_center\" | \"flag_circle\" | \"flag\" | \"flaky\" | \"flare\" | \"flash_auto\" | \"flash_off\" | \"flash_on\" | \"flashlight_off\" | \"flashlight_on\" | \"flatware\" | \"flight_class\" | \"flight_land\" | \"flight_takeoff\" | \"flight\" | \"flip_camera_android\" | \"flip_camera_ios\" | \"flip_to_back\" | \"flip_to_front\" | \"flip\" | \"flood\" | \"fluorescent\" | \"flutter_dash\" | \"fmd_bad\" | \"fmd_good\" | \"folder_copy\" | \"folder_delete\" | \"folder_off\" | \"folder_open\" | \"folder_shared\" | \"folder_special\" | \"folder_zip\" | \"folder\" | \"follow_the_signs\" | \"font_download_off\" | \"font_download\" | \"food_bank\" | \"forest\" | \"fork_left\" | \"fork_right\" | \"format_align_center\" | \"format_align_justify\" | \"format_align_left\" | \"format_align_right\" | \"format_bold\" | \"format_clear\" | \"format_color_fill\" | \"format_color_reset\" | \"format_color_text\" | \"format_indent_decrease\" | \"format_indent_increase\" | \"format_italic\" | \"format_line_spacing\" | \"format_list_bulleted\" | \"format_list_numbered_rtl\" | \"format_list_numbered\" | \"format_overline\" | \"format_paint\" | \"format_quote\" | \"format_shapes\" | \"format_size\" | \"format_strikethrough\" | \"format_textdirection_l_to_r\" | \"format_textdirection_r_to_l\" | \"format_underlined\" | \"fort\" | \"forum\" | \"forward_10\" | \"forward_30\" | \"forward_5\" | \"forward_to_inbox\" | \"forward\" | \"foundation\" | \"free_breakfast\" | \"free_cancellation\" | \"front_hand\" | \"fullscreen_exit\" | \"fullscreen\" | \"functions\" | \"g_mobiledata\" | \"g_translate\" | \"gamepad\" | \"games\" | \"garage\" | \"gas_meter\" | \"gavel\" | \"generating_tokens\" | \"gesture\" | \"get_app\" | \"gif_box\" | \"gif\" | \"girl\" | \"gite\" | \"golf_course\" | \"gpp_bad\" | \"gpp_good\" | \"gpp_maybe\" | \"gps_fixed\" | \"gps_not_fixed\" | \"gps_off\" | \"grade\" | \"gradient\" | \"grading\" | \"grain\" | \"graphic_eq\" | \"grass\" | \"grid_3x3\" | \"grid_4x4\" | \"grid_goldenratio\" | \"grid_off\" | \"grid_on\" | \"grid_view\" | \"group_add\" | \"group_off\" | \"group_remove\" | \"group_work\" | \"group\" | \"groups_2\" | \"groups_3\" | \"groups\" | \"h_mobiledata\" | \"h_plus_mobiledata\" | \"hail\" | \"handshake\" | \"handyman\" | \"hardware\" | \"hd\" | \"hdr_auto_select\" | \"hdr_auto\" | \"hdr_enhanced_select\" | \"hdr_off_select\" | \"hdr_off\" | \"hdr_on_select\" | \"hdr_on\" | \"hdr_plus\" | \"hdr_strong\" | \"hdr_weak\" | \"headphones_battery\" | \"headphones\" | \"headset_mic\" | \"headset_off\" | \"headset\" | \"healing\" | \"health_and_safety\" | \"hearing_disabled\" | \"hearing\" | \"heart_broken\" | \"heat_pump\" | \"height\" | \"help_center\" | \"help_outline\" | \"help\" | \"hevc\" | \"hexagon\" | \"hide_image\" | \"hide_source\" | \"high_quality\" | \"highlight_alt\" | \"highlight_off\" | \"highlight\" | \"hiking\" | \"history_edu\" | \"history_toggle_off\" | \"history\" | \"hive\" | \"hls_off\" | \"hls\" | \"holiday_village\" | \"home_max\" | \"home_mini\" | \"home_repair_service\" | \"home_work\" | \"home\" | \"horizontal_distribute\" | \"horizontal_rule\" | \"horizontal_split\" | \"hot_tub\" | \"hotel_class\" | \"hotel\" | \"hourglass_bottom\" | \"hourglass_disabled\" | \"hourglass_empty\" | \"hourglass_full\" | \"hourglass_top\" | \"house_siding\" | \"house\" | \"houseboat\" | \"how_to_reg\" | \"how_to_vote\" | \"html\" | \"http\" | \"https\" | \"hub\" | \"hvac\" | \"ice_skating\" | \"icecream\" | \"image_aspect_ratio\" | \"image_not_supported\" | \"image_search\" | \"image\" | \"imagesearch_roller\" | \"import_contacts\" | \"import_export\" | \"important_devices\" | \"inbox\" | \"incomplete_circle\" | \"indeterminate_check_box\" | \"info_outline\" | \"info\" | \"input\" | \"insert_chart_outlined\" | \"insert_chart\" | \"insert_comment\" | \"insert_drive_file\" | \"insert_emoticon\" | \"insert_invitation\" | \"insert_link\" | \"insert_page_break\" | \"insert_photo\" | \"insights\" | \"install_desktop\" | \"install_mobile\" | \"integration_instructions\" | \"interests\" | \"interpreter_mode\" | \"inventory_2\" | \"inventory\" | \"invert_colors_off\" | \"invert_colors\" | \"ios_share\" | \"iron\" | \"iso\" | \"javascript\" | \"join_full\" | \"join_inner\" | \"join_left\" | \"join_right\" | \"kayaking\" | \"kebab_dining\" | \"key_off\" | \"key\" | \"keyboard_alt\" | \"keyboard_arrow_down\" | \"keyboard_arrow_left\" | \"keyboard_arrow_right\" | \"keyboard_arrow_up\" | \"keyboard_backspace\" | \"keyboard_capslock\" | \"keyboard_command_key\" | \"keyboard_control_key\" | \"keyboard_double_arrow_down\" | \"keyboard_double_arrow_left\" | \"keyboard_double_arrow_right\" | \"keyboard_double_arrow_up\" | \"keyboard_hide\" | \"keyboard_option_key\" | \"keyboard_return\" | \"keyboard_tab\" | \"keyboard_voice\" | \"keyboard\" | \"king_bed\" | \"kitchen\" | \"kitesurfing\" | \"label_important_outline\" | \"label_important\" | \"label_off\" | \"label\" | \"lan\" | \"landscape\" | \"landslide\" | \"language\" | \"laptop_chromebook\" | \"laptop_mac\" | \"laptop_windows\" | \"laptop\" | \"last_page\" | \"launch\" | \"layers_clear\" | \"layers\" | \"leaderboard\" | \"leak_add\" | \"leak_remove\" | \"legend_toggle\" | \"lens_blur\" | \"lens\" | \"library_add_check\" | \"library_add\" | \"library_books\" | \"library_music\" | \"light_mode\" | \"light\" | \"lightbulb_circle\" | \"lightbulb_outline\" | \"lightbulb\" | \"line_axis\" | \"line_style\" | \"line_weight\" | \"linear_scale\" | \"link_off\" | \"link\" | \"linked_camera\" | \"liquor\" | \"list_alt\" | \"list\" | \"live_help\" | \"live_tv\" | \"living\" | \"local_activity\" | \"local_airport\" | \"local_atm\" | \"local_bar\" | \"local_cafe\" | \"local_car_wash\" | \"local_convenience_store\" | \"local_dining\" | \"local_drink\" | \"local_fire_department\" | \"local_florist\" | \"local_gas_station\" | \"local_grocery_store\" | \"local_hospital\" | \"local_hotel\" | \"local_laundry_service\" | \"local_library\" | \"local_mall\" | \"local_movies\" | \"local_offer\" | \"local_parking\" | \"local_pharmacy\" | \"local_phone\" | \"local_pizza\" | \"local_play\" | \"local_police\" | \"local_post_office\" | \"local_printshop\" | \"local_see\" | \"local_shipping\" | \"local_taxi\" | \"location_city\" | \"location_disabled\" | \"location_off\" | \"location_on\" | \"location_searching\" | \"lock_clock\" | \"lock_open\" | \"lock_outline\" | \"lock_person\" | \"lock_reset\" | \"lock\" | \"login\" | \"logo_dev\" | \"logout\" | \"looks_3\" | \"looks_4\" | \"looks_5\" | \"looks_6\" | \"looks_one\" | \"looks_two\" | \"looks\" | \"loop\" | \"loupe\" | \"low_priority\" | \"loyalty\" | \"lte_mobiledata\" | \"lte_plus_mobiledata\" | \"luggage\" | \"lunch_dining\" | \"lyrics\" | \"macro_off\" | \"mail_lock\" | \"mail_outline\" | \"mail\" | \"male\" | \"man_2\" | \"man_3\" | \"man_4\" | \"man\" | \"manage_accounts\" | \"manage_history\" | \"manage_search\" | \"map\" | \"maps_home_work\" | \"maps_ugc\" | \"margin\" | \"mark_as_unread\" | \"mark_chat_read\" | \"mark_chat_unread\" | \"mark_email_read\" | \"mark_email_unread\" | \"mark_unread_chat_alt\" | \"markunread_mailbox\" | \"markunread\" | \"masks\" | \"maximize\" | \"media_bluetooth_off\" | \"media_bluetooth_on\" | \"mediation\" | \"medical_information\" | \"medical_services\" | \"medication_liquid\" | \"medication\" | \"meeting_room\" | \"memory\" | \"menu_book\" | \"menu_open\" | \"menu\" | \"merge_type\" | \"merge\" | \"message\" | \"mic_external_off\" | \"mic_external_on\" | \"mic_none\" | \"mic_off\" | \"mic\" | \"microwave\" | \"military_tech\" | \"minimize\" | \"minor_crash\" | \"miscellaneous_services\" | \"missed_video_call\" | \"mms\" | \"mobile_friendly\" | \"mobile_off\" | \"mobile_screen_share\" | \"mobiledata_off\" | \"mode_comment\" | \"mode_edit_outline\" | \"mode_edit\" | \"mode_fan_off\" | \"mode_night\" | \"mode_of_travel\" | \"mode_standby\" | \"mode\" | \"model_training\" | \"monetization_on\" | \"money_off_csred\" | \"money_off\" | \"money\" | \"monitor_heart\" | \"monitor_weight\" | \"monitor\" | \"monochrome_photos\" | \"mood_bad\" | \"mood\" | \"moped\" | \"more_horiz\" | \"more_time\" | \"more_vert\" | \"more\" | \"mosque\" | \"motion_photos_auto\" | \"motion_photos_off\" | \"motion_photos_on\" | \"motion_photos_pause\" | \"motion_photos_paused\" | \"mouse\" | \"move_down\" | \"move_to_inbox\" | \"move_up\" | \"movie_creation\" | \"movie_filter\" | \"movie\" | \"moving\" | \"mp\" | \"multiline_chart\" | \"multiple_stop\" | \"museum\" | \"music_note\" | \"music_off\" | \"music_video\" | \"my_location\" | \"nat\" | \"nature_people\" | \"nature\" | \"navigate_before\" | \"navigate_next\" | \"navigation\" | \"near_me_disabled\" | \"near_me\" | \"nearby_error\" | \"nearby_off\" | \"nest_cam_wired_stand\" | \"network_cell\" | \"network_check\" | \"network_locked\" | \"network_ping\" | \"network_wifi_1_bar\" | \"network_wifi_2_bar\" | \"network_wifi_3_bar\" | \"network_wifi\" | \"new_label\" | \"new_releases\" | \"newspaper\" | \"next_plan\" | \"next_week\" | \"nfc\" | \"night_shelter\" | \"nightlife\" | \"nightlight_round\" | \"nightlight\" | \"nights_stay\" | \"no_accounts\" | \"no_adult_content\" | \"no_backpack\" | \"no_cell\" | \"no_crash\" | \"no_drinks\" | \"no_encryption_gmailerrorred\" | \"no_encryption\" | \"no_flash\" | \"no_food\" | \"no_luggage\" | \"no_meals\" | \"no_meeting_room\" | \"no_photography\" | \"no_sim\" | \"no_stroller\" | \"no_transfer\" | \"noise_aware\" | \"noise_control_off\" | \"nordic_walking\" | \"north_east\" | \"north_west\" | \"north\" | \"not_accessible\" | \"not_interested\" | \"not_listed_location\" | \"not_started\" | \"note_add\" | \"note_alt\" | \"note\" | \"notes\" | \"notification_add\" | \"notification_important\" | \"notifications_active\" | \"notifications_none\" | \"notifications_off\" | \"notifications_paused\" | \"notifications\" | \"numbers\" | \"offline_bolt\" | \"offline_pin\" | \"offline_share\" | \"oil_barrel\" | \"on_device_training\" | \"ondemand_video\" | \"online_prediction\" | \"opacity\" | \"open_in_browser\" | \"open_in_full\" | \"open_in_new_off\" | \"open_in_new\" | \"open_with\" | \"other_houses\" | \"outbound\" | \"outbox\" | \"outdoor_grill\" | \"outlet\" | \"outlined_flag\" | \"output\" | \"padding\" | \"pages\" | \"pageview\" | \"paid\" | \"palette\" | \"pan_tool_alt\" | \"pan_tool\" | \"panorama_fish_eye\" | \"panorama_horizontal_select\" | \"panorama_horizontal\" | \"panorama_photosphere_select\" | \"panorama_photosphere\" | \"panorama_vertical_select\" | \"panorama_vertical\" | \"panorama_wide_angle_select\" | \"panorama_wide_angle\" | \"panorama\" | \"paragliding\" | \"park\" | \"party_mode\" | \"password\" | \"pattern\" | \"pause_circle_filled\" | \"pause_circle_outline\" | \"pause_circle\" | \"pause_presentation\" | \"pause\" | \"payment\" | \"payments\" | \"pedal_bike\" | \"pending_actions\" | \"pending\" | \"pentagon\" | \"people_alt\" | \"people_outline\" | \"people\" | \"percent\" | \"perm_camera_mic\" | \"perm_contact_calendar\" | \"perm_data_setting\" | \"perm_device_information\" | \"perm_identity\" | \"perm_media\" | \"perm_phone_msg\" | \"perm_scan_wifi\" | \"person_2\" | \"person_3\" | \"person_4\" | \"person_add_alt_1\" | \"person_add_alt\" | \"person_add_disabled\" | \"person_add\" | \"person_off\" | \"person_outline\" | \"person_pin_circle\" | \"person_pin\" | \"person_remove_alt_1\" | \"person_remove\" | \"person_search\" | \"person\" | \"personal_injury\" | \"personal_video\" | \"pest_control_rodent\" | \"pest_control\" | \"pets\" | \"phishing\" | \"phone_android\" | \"phone_bluetooth_speaker\" | \"phone_callback\" | \"phone_disabled\" | \"phone_enabled\" | \"phone_forwarded\" | \"phone_iphone\" | \"phone_locked\" | \"phone_missed\" | \"phone_paused\" | \"phone\" | \"phonelink_erase\" | \"phonelink_lock\" | \"phonelink_off\" | \"phonelink_ring\" | \"phonelink_setup\" | \"phonelink\" | \"photo_album\" | \"photo_camera_back\" | \"photo_camera_front\" | \"photo_camera\" | \"photo_filter\" | \"photo_library\" | \"photo_size_select_actual\" | \"photo_size_select_large\" | \"photo_size_select_small\" | \"photo\" | \"php\" | \"piano_off\" | \"piano\" | \"picture_as_pdf\" | \"picture_in_picture_alt\" | \"picture_in_picture\" | \"pie_chart_outline\" | \"pie_chart\" | \"pin_drop\" | \"pin_end\" | \"pin_invoke\" | \"pin\" | \"pinch\" | \"pivot_table_chart\" | \"pix\" | \"place\" | \"plagiarism\" | \"play_arrow\" | \"play_circle_filled\" | \"play_circle_outline\" | \"play_circle\" | \"play_disabled\" | \"play_for_work\" | \"play_lesson\" | \"playlist_add_check_circle\" | \"playlist_add_check\" | \"playlist_add_circle\" | \"playlist_add\" | \"playlist_play\" | \"playlist_remove\" | \"plumbing\" | \"plus_one\" | \"podcasts\" | \"point_of_sale\" | \"policy\" | \"poll\" | \"polyline\" | \"polymer\" | \"pool\" | \"portable_wifi_off\" | \"portrait\" | \"post_add\" | \"power_input\" | \"power_off\" | \"power_settings_new\" | \"power\" | \"precision_manufacturing\" | \"pregnant_woman\" | \"present_to_all\" | \"preview\" | \"price_change\" | \"price_check\" | \"print_disabled\" | \"print\" | \"priority_high\" | \"privacy_tip\" | \"private_connectivity\" | \"production_quantity_limits\" | \"propane_tank\" | \"propane\" | \"psychology_alt\" | \"psychology\" | \"public_off\" | \"public\" | \"publish\" | \"published_with_changes\" | \"punch_clock\" | \"push_pin\" | \"qr_code_2\" | \"qr_code_scanner\" | \"qr_code\" | \"query_builder\" | \"query_stats\" | \"question_answer\" | \"question_mark\" | \"queue_music\" | \"queue_play_next\" | \"queue\" | \"quickreply\" | \"quiz\" | \"r_mobiledata\" | \"radar\" | \"radio_button_checked\" | \"radio_button_unchecked\" | \"radio\" | \"railway_alert\" | \"ramen_dining\" | \"ramp_left\" | \"ramp_right\" | \"rate_review\" | \"raw_off\" | \"raw_on\" | \"read_more\" | \"real_estate_agent\" | \"receipt_long\" | \"receipt\" | \"recent_actors\" | \"recommend\" | \"record_voice_over\" | \"rectangle\" | \"recycling\" | \"redeem\" | \"redo\" | \"reduce_capacity\" | \"refresh\" | \"remember_me\" | \"remove_circle_outline\" | \"remove_circle\" | \"remove_done\" | \"remove_from_queue\" | \"remove_moderator\" | \"remove_red_eye\" | \"remove_road\" | \"remove_shopping_cart\" | \"remove\" | \"reorder\" | \"repartition\" | \"repeat_on\" | \"repeat_one_on\" | \"repeat_one\" | \"repeat\" | \"replay_10\" | \"replay_30\" | \"replay_5\" | \"replay_circle_filled\" | \"replay\" | \"reply_all\" | \"reply\" | \"report_gmailerrorred\" | \"report_off\" | \"report_problem\" | \"report\" | \"request_page\" | \"request_quote\" | \"reset_tv\" | \"restart_alt\" | \"restaurant_menu\" | \"restaurant\" | \"restore_from_trash\" | \"restore_page\" | \"restore\" | \"reviews\" | \"rice_bowl\" | \"ring_volume\" | \"rocket_launch\" | \"rocket\" | \"roller_shades_closed\" | \"roller_shades\" | \"roller_skating\" | \"roofing\" | \"room_preferences\" | \"room_service\" | \"room\" | \"rotate_90_degrees_ccw\" | \"rotate_90_degrees_cw\" | \"rotate_left\" | \"rotate_right\" | \"roundabout_left\" | \"roundabout_right\" | \"rounded_corner\" | \"route\" | \"router\" | \"rowing\" | \"rss_feed\" | \"rsvp\" | \"rtt\" | \"rule_folder\" | \"rule\" | \"run_circle\" | \"running_with_errors\" | \"rv_hookup\" | \"safety_check\" | \"safety_divider\" | \"sailing\" | \"sanitizer\" | \"satellite_alt\" | \"satellite\" | \"save_alt\" | \"save_as\" | \"save\" | \"saved_search\" | \"savings\" | \"scale\" | \"scanner\" | \"scatter_plot\" | \"schedule_send\" | \"schedule\" | \"schema\" | \"school\" | \"science\" | \"score\" | \"scoreboard\" | \"screen_lock_landscape\" | \"screen_lock_portrait\" | \"screen_lock_rotation\" | \"screen_rotation_alt\" | \"screen_rotation\" | \"screen_search_desktop\" | \"screen_share\" | \"screenshot_monitor\" | \"screenshot\" | \"scuba_diving\" | \"sd_card_alert\" | \"sd_card\" | \"sd_storage\" | \"sd\" | \"search_off\" | \"search\" | \"security_update_good\" | \"security_update_warning\" | \"security_update\" | \"security\" | \"segment\" | \"select_all\" | \"self_improvement\" | \"sell\" | \"send_and_archive\" | \"send_time_extension\" | \"send_to_mobile\" | \"send\" | \"sensor_door\" | \"sensor_occupied\" | \"sensor_window\" | \"sensors_off\" | \"sensors\" | \"sentiment_dissatisfied\" | \"sentiment_neutral\" | \"sentiment_satisfied_alt\" | \"sentiment_satisfied\" | \"sentiment_very_dissatisfied\" | \"sentiment_very_satisfied\" | \"set_meal\" | \"settings_accessibility\" | \"settings_applications\" | \"settings_backup_restore\" | \"settings_bluetooth\" | \"settings_brightness\" | \"settings_cell\" | \"settings_ethernet\" | \"settings_input_antenna\" | \"settings_input_component\" | \"settings_input_composite\" | \"settings_input_hdmi\" | \"settings_input_svideo\" | \"settings_overscan\" | \"settings_phone\" | \"settings_power\" | \"settings_remote\" | \"settings_suggest\" | \"settings_system_daydream\" | \"settings_voice\" | \"settings\" | \"severe_cold\" | \"shape_line\" | \"share_location\" | \"share\" | \"shield_moon\" | \"shield\" | \"shop_2\" | \"shop_two\" | \"shop\" | \"shopping_bag\" | \"shopping_basket\" | \"shopping_cart_checkout\" | \"shopping_cart\" | \"short_text\" | \"shortcut\" | \"show_chart\" | \"shower\" | \"shuffle_on\" | \"shuffle\" | \"shutter_speed\" | \"sick\" | \"sign_language\" | \"signal_cellular_0_bar\" | \"signal_cellular_4_bar\" | \"signal_cellular_alt_1_bar\" | \"signal_cellular_alt_2_bar\" | \"signal_cellular_alt\" | \"signal_cellular_connected_no_internet_0_bar\" | \"signal_cellular_connected_no_internet_4_bar\" | \"signal_cellular_no_sim\" | \"signal_cellular_nodata\" | \"signal_cellular_null\" | \"signal_cellular_off\" | \"signal_wifi_0_bar\" | \"signal_wifi_4_bar_lock\" | \"signal_wifi_4_bar\" | \"signal_wifi_bad\" | \"signal_wifi_connected_no_internet_4\" | \"signal_wifi_off\" | \"signal_wifi_statusbar_4_bar\" | \"signal_wifi_statusbar_connected_no_internet_4\" | \"signal_wifi_statusbar_null\" | \"signpost\" | \"sim_card_alert\" | \"sim_card_download\" | \"sim_card\" | \"single_bed\" | \"sip\" | \"skateboarding\" | \"skip_next\" | \"skip_previous\" | \"sledding\" | \"slideshow\" | \"slow_motion_video\" | \"smart_button\" | \"smart_display\" | \"smart_screen\" | \"smart_toy\" | \"smartphone\" | \"smoke_free\" | \"smoking_rooms\" | \"sms_failed\" | \"sms\" | \"snippet_folder\" | \"snooze\" | \"snowboarding\" | \"snowmobile\" | \"snowshoeing\" | \"soap\" | \"social_distance\" | \"solar_power\" | \"sort_by_alpha\" | \"sort\" | \"sos\" | \"soup_kitchen\" | \"source\" | \"south_america\" | \"south_east\" | \"south_west\" | \"south\" | \"spa\" | \"space_bar\" | \"space_dashboard\" | \"spatial_audio_off\" | \"spatial_audio\" | \"spatial_tracking\" | \"speaker_group\" | \"speaker_notes_off\" | \"speaker_notes\" | \"speaker_phone\" | \"speaker\" | \"speed\" | \"spellcheck\" | \"splitscreen\" | \"spoke\" | \"sports_bar\" | \"sports_baseball\" | \"sports_basketball\" | \"sports_cricket\" | \"sports_esports\" | \"sports_football\" | \"sports_golf\" | \"sports_gymnastics\" | \"sports_handball\" | \"sports_hockey\" | \"sports_kabaddi\" | \"sports_martial_arts\" | \"sports_mma\" | \"sports_motorsports\" | \"sports_rugby\" | \"sports_score\" | \"sports_soccer\" | \"sports_tennis\" | \"sports_volleyball\" | \"sports\" | \"square_foot\" | \"square\" | \"ssid_chart\" | \"stacked_bar_chart\" | \"stacked_line_chart\" | \"stadium\" | \"stairs\" | \"star_border_purple500\" | \"star_border\" | \"star_half\" | \"star_outline\" | \"star_purple500\" | \"star_rate\" | \"star\" | \"stars\" | \"start\" | \"stay_current_landscape\" | \"stay_current_portrait\" | \"stay_primary_landscape\" | \"stay_primary_portrait\" | \"sticky_note_2\" | \"stop_circle\" | \"stop_screen_share\" | \"stop\" | \"storage\" | \"store_mall_directory\" | \"store\" | \"storefront\" | \"storm\" | \"straight\" | \"straighten\" | \"stream\" | \"streetview\" | \"strikethrough_s\" | \"stroller\" | \"style\" | \"subdirectory_arrow_left\" | \"subdirectory_arrow_right\" | \"subject\" | \"subscript\" | \"subscriptions\" | \"subtitles_off\" | \"subtitles\" | \"subway\" | \"summarize\" | \"superscript\" | \"supervised_user_circle\" | \"supervisor_account\" | \"support_agent\" | \"support\" | \"surfing\" | \"surround_sound\" | \"swap_calls\" | \"swap_horiz\" | \"swap_horizontal_circle\" | \"swap_vert\" | \"swap_vertical_circle\" | \"swipe_down_alt\" | \"swipe_down\" | \"swipe_left_alt\" | \"swipe_left\" | \"swipe_right_alt\" | \"swipe_right\" | \"swipe_up_alt\" | \"swipe_up\" | \"swipe_vertical\" | \"swipe\" | \"switch_access_shortcut_add\" | \"switch_access_shortcut\" | \"switch_account\" | \"switch_camera\" | \"switch_left\" | \"switch_right\" | \"switch_video\" | \"synagogue\" | \"sync_alt\" | \"sync_disabled\" | \"sync_lock\" | \"sync_problem\" | \"sync\" | \"system_security_update_good\" | \"system_security_update_warning\" | \"system_security_update\" | \"system_update_alt\" | \"system_update\" | \"tab_unselected\" | \"tab\" | \"table_bar\" | \"table_chart\" | \"table_restaurant\" | \"table_rows\" | \"table_view\" | \"tablet_android\" | \"tablet_mac\" | \"tablet\" | \"tag_faces\" | \"tag\" | \"takeout_dining\" | \"tap_and_play\" | \"tapas\" | \"task_alt\" | \"task\" | \"taxi_alert\" | \"temple_buddhist\" | \"temple_hindu\" | \"terminal\" | \"terrain\" | \"text_decrease\" | \"text_fields\" | \"text_format\" | \"text_increase\" | \"text_rotate_up\" | \"text_rotate_vertical\" | \"text_rotation_angledown\" | \"text_rotation_angleup\" | \"text_rotation_down\" | \"text_rotation_none\" | \"text_snippet\" | \"textsms\" | \"texture\" | \"theater_comedy\" | \"theaters\" | \"thermostat_auto\" | \"thermostat\" | \"thumb_down_alt\" | \"thumb_down_off_alt\" | \"thumb_down\" | \"thumb_up_alt\" | \"thumb_up_off_alt\" | \"thumb_up\" | \"thumbs_up_down\" | \"thunderstorm\" | \"time_to_leave\" | \"timelapse\" | \"timeline\" | \"timer_10_select\" | \"timer_10\" | \"timer_3_select\" | \"timer_3\" | \"timer_off\" | \"timer\" | \"tips_and_updates\" | \"tire_repair\" | \"title\" | \"toc\" | \"today\" | \"toggle_off\" | \"toggle_on\" | \"token\" | \"toll\" | \"tonality\" | \"topic\" | \"tornado\" | \"touch_app\" | \"tour\" | \"toys\" | \"track_changes\" | \"traffic\" | \"train\" | \"tram\" | \"transcribe\" | \"transfer_within_a_station\" | \"transform\" | \"transgender\" | \"transit_enterexit\" | \"translate\" | \"travel_explore\" | \"trending_down\" | \"trending_flat\" | \"trending_up\" | \"trip_origin\" | \"troubleshoot\" | \"try\" | \"tsunami\" | \"tty\" | \"tune\" | \"tungsten\" | \"turn_left\" | \"turn_right\" | \"turn_sharp_left\" | \"turn_sharp_right\" | \"turn_slight_left\" | \"turn_slight_right\" | \"turned_in_not\" | \"turned_in\" | \"tv_off\" | \"tv\" | \"two_wheeler\" | \"type_specimen\" | \"u_turn_left\" | \"u_turn_right\" | \"umbrella\" | \"unarchive\" | \"undo\" | \"unfold_less_double\" | \"unfold_less\" | \"unfold_more_double\" | \"unfold_more\" | \"unpublished\" | \"unsubscribe\" | \"upcoming\" | \"update_disabled\" | \"update\" | \"upgrade\" | \"upload_file\" | \"upload\" | \"usb_off\" | \"usb\" | \"vaccines\" | \"vape_free\" | \"vaping_rooms\" | \"verified_user\" | \"verified\" | \"vertical_align_bottom\" | \"vertical_align_center\" | \"vertical_align_top\" | \"vertical_distribute\" | \"vertical_shades_closed\" | \"vertical_shades\" | \"vertical_split\" | \"vibration\" | \"video_call\" | \"video_camera_back\" | \"video_camera_front\" | \"video_chat\" | \"video_file\" | \"video_label\" | \"video_library\" | \"video_settings\" | \"video_stable\" | \"videocam_off\" | \"videocam\" | \"videogame_asset_off\" | \"videogame_asset\" | \"view_agenda\" | \"view_array\" | \"view_carousel\" | \"view_column\" | \"view_comfy_alt\" | \"view_comfy\" | \"view_compact_alt\" | \"view_compact\" | \"view_cozy\" | \"view_day\" | \"view_headline\" | \"view_in_ar\" | \"view_kanban\" | \"view_list\" | \"view_module\" | \"view_quilt\" | \"view_sidebar\" | \"view_stream\" | \"view_timeline\" | \"view_week\" | \"vignette\" | \"villa\" | \"visibility_off\" | \"visibility\" | \"voice_chat\" | \"voice_over_off\" | \"voicemail\" | \"volcano\" | \"volume_down\" | \"volume_mute\" | \"volume_off\" | \"volume_up\" | \"volunteer_activism\" | \"vpn_key_off\" | \"vpn_key\" | \"vpn_lock\" | \"vrpano\" | \"wallet\" | \"wallpaper\" | \"warehouse\" | \"warning_amber\" | \"warning\" | \"wash\" | \"watch_later\" | \"watch_off\" | \"watch\" | \"water_damage\" | \"water_drop\" | \"water\" | \"waterfall_chart\" | \"waves\" | \"waving_hand\" | \"wb_auto\" | \"wb_cloudy\" | \"wb_incandescent\" | \"wb_iridescent\" | \"wb_shade\" | \"wb_sunny\" | \"wb_twilight\" | \"wc\" | \"web_asset_off\" | \"web_asset\" | \"web_stories\" | \"web\" | \"webhook\" | \"weekend\" | \"west\" | \"whatshot\" | \"wheelchair_pickup\" | \"where_to_vote\" | \"widgets\" | \"width_full\" | \"width_normal\" | \"width_wide\" | \"wifi_1_bar\" | \"wifi_2_bar\" | \"wifi_calling_3\" | \"wifi_calling\" | \"wifi_channel\" | \"wifi_find\" | \"wifi_lock\" | \"wifi_off\" | \"wifi_password\" | \"wifi_protected_setup\" | \"wifi_tethering_error\" | \"wifi_tethering_off\" | \"wifi_tethering\" | \"wifi\" | \"wind_power\" | \"window\" | \"wine_bar\" | \"woman_2\" | \"woman\" | \"work_history\" | \"work_off\" | \"work_outline\" | \"work\" | \"workspace_premium\" | \"workspaces\" | \"wrap_text\" | \"wrong_location\" | \"wysiwyg\" | \"yard\" | \"youtube_searched_for\" | \"zoom_in_map\" | \"zoom_in\" | \"zoom_out_map\" | \"zoom_out\"",
                "file": "libs/material/src/api/icon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "InputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"number\" | \"boolean\" | \"date\" | \"array\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "InputVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ButttonVariant",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Position",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top\" | \"right\" | \"bottom\" | \"left\"",
                "file": "libs/material/src/api/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AlertComponent>",
                "file": "libs/material/src/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AppAuthComponent>",
                "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AppInventoryComponent>",
                "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "libs/material/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorsComponent>",
                "file": "libs/material/src/colors/colors.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FontsComponent>",
                "file": "libs/material/src/fonts/fonts.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormComponent>",
                "file": "libs/material/src/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ListComponent>",
                "file": "libs/material/src/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MenuComponent>",
                "file": "libs/material/src/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavListComponent>",
                "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NotificationComponent>",
                "file": "libs/material/src/notification/notification.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StepperComponent>",
                "file": "libs/material/src/stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StickyNotesComponent>",
                "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabContainerComponent>",
                "file": "libs/material/src/tab/tab-container.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToolbarComponent>",
                "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "libs/material/src/button/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CombinedButtonComponent>",
                "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CommonButtonComponent>",
                "file": "libs/material/src/button/common-button/common-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<IconButtonComponent>",
                "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SampleButtonsComponent>",
                "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabButtonComponent>",
                "file": "libs/material/src/button/tab-button/tab-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ArrayInputComponent>",
                "file": "libs/material/src/form/array-input/array-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BooleanInputComponent>",
                "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateInputComponent>",
                "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<EnumInputComponent>",
                "file": "libs/material/src/form/enum-input/enum-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "libs/material/src/form/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NumberInputComponent>",
                "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextInputComponent>",
                "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ListItemComponent>",
                "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavListItemComponent>",
                "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "TabContainerType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sidenav\" | \"tab\"",
                "file": "libs/material/src/tab/tab-container.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/material/src/alert/alert.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'red',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/alert works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AlertComponent>",
                    "defaultValue": "{\n  component: AlertComponent,\n  title: 'AlertComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'primary',\n    icon: 'home',\n  },\n}"
                }
            ],
            "libs/material/src/app-auth/app-auth.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app-auth works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppAuthComponent>",
                    "defaultValue": "{\n  component: AppAuthComponent,\n  title: 'AppAuthComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/app-inventory/app-inventory.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app-inventory works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppInventoryComponent>",
                    "defaultValue": "{\n  component: AppInventoryComponent,\n  title: 'AppInventoryComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [BrowserAnimationsModule],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/button/button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n    variant: 'raised',\n    color: 'primary',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const buttonElement = canvas.getByText(/Button/gi);\n    expect(buttonElement).toBeTruthy();\n    userEvent.hover(buttonElement);\n    userEvent.click(buttonElement);\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  component: ButtonComponent,\n  title: 'ButtonComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'home',\n    variant: 'basic',\n    color: 'primary',\n  },\n}"
                }
            ],
            "libs/material/src/colors/colors.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/colors works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorsComponent>",
                    "defaultValue": "{\n  component: ColorsComponent,\n  title: 'ColorsComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/fonts/fonts.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/fonts works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FontsComponent>",
                    "defaultValue": "{\n  component: FontsComponent,\n  title: 'FontsComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/form/form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "LoginForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    children: [\n      {\n        type: 'text',\n        name: 'username',\n        color: 'primary',\n        autocomplete: 'email',\n        label: 'Username',\n        icon: 'email',\n      },\n      {\n        type: 'password',\n        name: 'password',\n        color: 'primary',\n        autocomplete: 'current-password',\n        label: 'Password',\n        icon: 'email',\n      },\n    ] as InputComponent[],\n  } as any,\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormComponent>",
                    "defaultValue": "{\n  component: FormComponent,\n  title: 'FormComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    children: [\n      {\n        type: 'text',\n        name: 'firstName',\n        color: 'primary',\n        autocomplete: 'given-name',\n        label: 'First Name',\n        icon: 'person',\n      },\n    ] as InputComponent[],\n  } as any,\n}"
                }
            ],
            "libs/material/src/list/list.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/list works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ListComponent>",
                    "defaultValue": "{\n  component: ListComponent,\n  title: 'ListComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'warn',\n    icon: 'home',\n    children: [\n      { label: 'List 1', icon: 'apps', color: 'primary' },\n      { label: 'List 2' },\n      { label: 'List 3', color: 'primary' },\n      { label: 'List 4' },\n    ] as any,\n  },\n}"
                }
            ],
            "libs/material/src/menu/menu.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { label: 'Triger 1' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Triger 1/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MenuComponent>",
                    "defaultValue": "{\n  component: MenuComponent,\n  title: 'MenuComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Triger 1',\n    color: 'primary',\n    openDirection: 'bottom',\n    children: [],\n  },\n}"
                }
            ],
            "libs/material/src/nav-list/nav-list.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'primary',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/nav-list works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavListComponent>",
                    "defaultValue": "{\n  component: NavListComponent,\n  title: 'NavListComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'primary',\n    icon: 'info',\n    children: [\n      { label: 'Home', icon: 'home' },\n      { label: 'Apps', icon: 'apps' },\n      { label: 'Store', icon: 'store' },\n      { label: 'Inventory', icon: 'inventory' },\n      { label: 'Profile', icon: 'person' },\n    ] as any,\n  },\n}"
                }
            ],
            "libs/material/src/notification/notification.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/notification works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NotificationComponent>",
                    "defaultValue": "{\n  component: NotificationComponent,\n  title: 'NotificationComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/stepper/stepper.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/stepper works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StepperComponent>",
                    "defaultValue": "{\n  component: StepperComponent,\n  title: 'StepperComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/sticky-notes/sticky-notes.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sticky-notes works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StickyNotesComponent>",
                    "defaultValue": "{\n  component: StickyNotesComponent,\n  title: 'StickyNotesComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/tab/tab-container.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab-container works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabContainerComponent>",
                    "defaultValue": "{\n  component: TabContainerComponent,\n  title: 'TabContainerComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/toolbar/toolbar.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/toolbar works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToolbarComponent>",
                    "defaultValue": "{\n  component: ToolbarComponent,\n  title: 'ToolbarComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/button/button/button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/button works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  component: ButtonComponent,\n  title: 'ButtonComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n  },\n}"
                }
            ],
            "libs/material/src/button/combined-button/combined-button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/combined-button works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CombinedButtonComponent>",
                    "defaultValue": "{\n  component: CombinedButtonComponent,\n  title: 'CombinedButtonComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n  },\n}"
                }
            ],
            "libs/material/src/button/common-button/common-button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/common-button/common-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    tooltip: '',\n    color: 'primary',\n    variant: 'basic',\n    size: 'regular',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/common-button works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/common-button/common-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CommonButtonComponent>",
                    "defaultValue": "{\n  component: CommonButtonComponent,\n  title: 'CommonButtonComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/common-button/common-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    tooltip: '',\n    color: 'primary',\n    variant: 'basic',\n    size: 'regular',\n  },\n}"
                }
            ],
            "libs/material/src/button/icon-button/icon-button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/icon-button works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<IconButtonComponent>",
                    "defaultValue": "{\n  component: IconButtonComponent,\n  title: 'IconButtonComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/sample-buttons works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SampleButtonsComponent>",
                    "defaultValue": "{\n  component: SampleButtonsComponent,\n  title: 'SampleButtonsComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/button/tab-button/tab-button.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab-button works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabButtonComponent>",
                    "defaultValue": "{\n  component: TabButtonComponent,\n  title: 'TabButtonComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/button/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n  },\n}"
                }
            ],
            "libs/material/src/form/array-input/array-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/array-input/array-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/array-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/array-input/array-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ArrayInputComponent>",
                    "defaultValue": "{\n  component: ArrayInputComponent,\n  title: 'ArrayInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/array-input/array-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/form/boolean-input/boolean-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/boolean-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BooleanInputComponent>",
                    "defaultValue": "{\n  component: BooleanInputComponent,\n  title: 'BooleanInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/form/date-input/date-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateInputComponent>",
                    "defaultValue": "{\n  component: DateInputComponent,\n  title: 'DateInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/form/enum-input/enum-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/enum-input/enum-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/enum-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/enum-input/enum-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<EnumInputComponent>",
                    "defaultValue": "{\n  component: EnumInputComponent,\n  title: 'EnumInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/enum-input/enum-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/form/input/input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    id: '',\n    name: '',\n    value: '',\n    type: 'text',\n    autocomplete: 'on',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\n  component: InputComponent,\n  title: 'InputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    id: '',\n    name: '',\n    value: '',\n    type: 'text',\n    autocomplete: 'on',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n}"
                }
            ],
            "libs/material/src/form/number-input/number-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/number-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NumberInputComponent>",
                    "defaultValue": "{\n  component: NumberInputComponent,\n  title: 'NumberInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/form/text-input/text-input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: '',\n    id: '',\n    name: '',\n    type: 'text',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/text-input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextInputComponent>",
                    "defaultValue": "{\n  component: TextInputComponent,\n  title: 'TextInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: '',\n    id: '',\n    name: '',\n    type: 'text',\n    autocomplete: 'off',\n    color: 'primary',\n    label: 'Input Label',\n    variant: 'basic',\n    icon: 'info',\n  },\n}"
                }
            ],
            "libs/material/src/list/list-item/list-item.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    color: 'primary',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/list-item works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ListItemComponent>",
                    "defaultValue": "{\n  component: ListItemComponent,\n  title: 'ListItemComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    color: 'primary',\n    icon: 'info',\n  },\n}"
                }
            ],
            "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    icon: 'info',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/nav-list-item works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavListItemComponent>",
                    "defaultValue": "{\n  component: NavListItemComponent,\n  title: 'NavListItemComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    icon: 'info',\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {
            "libs/material/src/api/animations.ts": [
                {
                    "name": "slideFromRightOnEnter",
                    "file": "libs/material/src/api/animations.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/material/src/api/types.ts": [
                {
                    "name": "ButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"regular\" | \"big\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ButtonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"button\" | \"icon-button\" | \"combined-button\" | \"tab-button\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ButttonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"basic\" | \"raised\" | \"flat\" | \"stroked\" | \"inbox\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "Color",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"accent\" | \"warn\" | \"red\" | \"green\" | \"black\" | \"white\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "InputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"number\" | \"boolean\" | \"date\" | \"array\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "InputVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ButttonVariant",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "Position",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top\" | \"right\" | \"bottom\" | \"left\"",
                    "file": "libs/material/src/api/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "libs/material/src/api/icon.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"signature\" | \"10k\" | \"10mp\" | \"11mp\" | \"123\" | \"12mp\" | \"13mp\" | \"14mp\" | \"15mp\" | \"16mp\" | \"17mp\" | \"18_up_rating\" | \"18mp\" | \"19mp\" | \"1k_plus\" | \"1k\" | \"1x_mobiledata\" | \"20mp\" | \"21mp\" | \"22mp\" | \"23mp\" | \"24mp\" | \"2k_plus\" | \"2k\" | \"2mp\" | \"30fps_select\" | \"30fps\" | \"360\" | \"3d_rotation\" | \"3g_mobiledata\" | \"3k_plus\" | \"3k\" | \"3mp\" | \"3p\" | \"4g_mobiledata\" | \"4g_plus_mobiledata\" | \"4k_plus\" | \"4k\" | \"4mp\" | \"5g\" | \"5k_plus\" | \"5k\" | \"5mp\" | \"6_ft_apart\" | \"60fps_select\" | \"60fps\" | \"6k_plus\" | \"6k\" | \"6mp\" | \"7k_plus\" | \"7k\" | \"7mp\" | \"8k_plus\" | \"8k\" | \"8mp\" | \"9k_plus\" | \"9k\" | \"9mp\" | \"abc\" | \"ac_unit\" | \"access_alarm\" | \"access_alarms\" | \"access_time_filled\" | \"access_time\" | \"accessibility_new\" | \"accessibility\" | \"accessible_forward\" | \"accessible\" | \"account_balance_wallet\" | \"account_balance\" | \"account_box\" | \"account_circle\" | \"account_tree\" | \"ad_units\" | \"adb\" | \"add_a_photo\" | \"add_alarm\" | \"add_alert\" | \"add_box\" | \"add_business\" | \"add_card\" | \"add_chart\" | \"add_circle_outline\" | \"add_circle\" | \"add_comment\" | \"add_home_work\" | \"add_home\" | \"add_ic_call\" | \"add_link\" | \"add_location_alt\" | \"add_location\" | \"add_moderator\" | \"add_photo_alternate\" | \"add_reaction\" | \"add_road\" | \"add_shopping_cart\" | \"add_task\" | \"add_to_drive\" | \"add_to_home_screen\" | \"add_to_photos\" | \"add_to_queue\" | \"add\" | \"addchart\" | \"adf_scanner\" | \"adjust\" | \"admin_panel_settings\" | \"ads_click\" | \"agriculture\" | \"air\" | \"airline_seat_flat_angled\" | \"airline_seat_flat\" | \"airline_seat_individual_suite\" | \"airline_seat_legroom_extra\" | \"airline_seat_legroom_normal\" | \"airline_seat_legroom_reduced\" | \"airline_seat_recline_extra\" | \"airline_seat_recline_normal\" | \"airline_stops\" | \"airlines\" | \"airplane_ticket\" | \"airplanemode_active\" | \"airplanemode_inactive\" | \"airplay\" | \"airport_shuttle\" | \"alarm_add\" | \"alarm_off\" | \"alarm_on\" | \"alarm\" | \"album\" | \"align_horizontal_center\" | \"align_horizontal_left\" | \"align_horizontal_right\" | \"align_vertical_bottom\" | \"align_vertical_center\" | \"align_vertical_top\" | \"all_inbox\" | \"all_inclusive\" | \"all_out\" | \"alt_route\" | \"alternate_email\" | \"analytics\" | \"anchor\" | \"android\" | \"animation\" | \"announcement\" | \"aod\" | \"apartment\" | \"api\" | \"app_blocking\" | \"app_registration\" | \"app_settings_alt\" | \"app_shortcut\" | \"approval\" | \"apps_outage\" | \"apps\" | \"architecture\" | \"archive\" | \"area_chart\" | \"arrow_back_ios_new\" | \"arrow_back_ios\" | \"arrow_back\" | \"arrow_circle_down\" | \"arrow_circle_left\" | \"arrow_circle_right\" | \"arrow_circle_up\" | \"arrow_downward\" | \"arrow_drop_down_circle\" | \"arrow_drop_down\" | \"arrow_drop_up\" | \"arrow_forward_ios\" | \"arrow_forward\" | \"arrow_left\" | \"arrow_outward\" | \"arrow_right_alt\" | \"arrow_right\" | \"arrow_upward\" | \"art_track\" | \"article\" | \"aspect_ratio\" | \"assessment\" | \"assignment_ind\" | \"assignment_late\" | \"assignment_return\" | \"assignment_returned\" | \"assignment_turned_in\" | \"assignment\" | \"assist_walker\" | \"assistant_direction\" | \"assistant_photo\" | \"assistant\" | \"assured_workload\" | \"atm\" | \"attach_email\" | \"attach_file\" | \"attach_money\" | \"attachment\" | \"attractions\" | \"attribution\" | \"audio_file\" | \"audiotrack\" | \"auto_awesome_mosaic\" | \"auto_awesome_motion\" | \"auto_awesome\" | \"auto_delete\" | \"auto_fix_high\" | \"auto_fix_normal\" | \"auto_fix_off\" | \"auto_graph\" | \"auto_mode\" | \"auto_stories\" | \"autofps_select\" | \"autorenew\" | \"av_timer\" | \"baby_changing_station\" | \"back_hand\" | \"backpack\" | \"backspace\" | \"backup_table\" | \"backup\" | \"badge\" | \"bakery_dining\" | \"balance\" | \"balcony\" | \"ballot\" | \"bar_chart\" | \"batch_prediction\" | \"bathroom\" | \"bathtub\" | \"battery_0_bar\" | \"battery_1_bar\" | \"battery_2_bar\" | \"battery_3_bar\" | \"battery_4_bar\" | \"battery_5_bar\" | \"battery_6_bar\" | \"battery_alert\" | \"battery_charging_full\" | \"battery_full\" | \"battery_saver\" | \"battery_std\" | \"battery_unknown\" | \"beach_access\" | \"bed\" | \"bedroom_baby\" | \"bedroom_child\" | \"bedroom_parent\" | \"bedtime_off\" | \"bedtime\" | \"beenhere\" | \"bento\" | \"bike_scooter\" | \"biotech\" | \"blender\" | \"blind\" | \"blinds_closed\" | \"blinds\" | \"block\" | \"bloodtype\" | \"bluetooth_audio\" | \"bluetooth_connected\" | \"bluetooth_disabled\" | \"bluetooth_drive\" | \"bluetooth_searching\" | \"bluetooth\" | \"blur_circular\" | \"blur_linear\" | \"blur_off\" | \"blur_on\" | \"bolt\" | \"book_online\" | \"book\" | \"bookmark_add\" | \"bookmark_added\" | \"bookmark_border\" | \"bookmark_remove\" | \"bookmark\" | \"bookmarks\" | \"border_all\" | \"border_bottom\" | \"border_clear\" | \"border_color\" | \"border_horizontal\" | \"border_inner\" | \"border_left\" | \"border_outer\" | \"border_right\" | \"border_style\" | \"border_top\" | \"border_vertical\" | \"boy\" | \"branding_watermark\" | \"breakfast_dining\" | \"brightness_1\" | \"brightness_2\" | \"brightness_3\" | \"brightness_4\" | \"brightness_5\" | \"brightness_6\" | \"brightness_7\" | \"brightness_auto\" | \"brightness_high\" | \"brightness_low\" | \"brightness_medium\" | \"broadcast_on_home\" | \"broadcast_on_personal\" | \"broken_image\" | \"browse_gallery\" | \"browser_not_supported\" | \"browser_updated\" | \"brunch_dining\" | \"brush\" | \"bubble_chart\" | \"bug_report\" | \"build_circle\" | \"build\" | \"bungalow\" | \"burst_mode\" | \"bus_alert\" | \"business_center\" | \"business\" | \"cabin\" | \"cable\" | \"cached\" | \"cake\" | \"calculate\" | \"calendar_month\" | \"calendar_today\" | \"calendar_view_day\" | \"calendar_view_month\" | \"calendar_view_week\" | \"call_end\" | \"call_made\" | \"call_merge\" | \"call_missed_outgoing\" | \"call_missed\" | \"call_received\" | \"call_split\" | \"call_to_action\" | \"call\" | \"camera_alt\" | \"camera_enhance\" | \"camera_front\" | \"camera_indoor\" | \"camera_outdoor\" | \"camera_rear\" | \"camera_roll\" | \"camera\" | \"cameraswitch\" | \"campaign\" | \"cancel_presentation\" | \"cancel_schedule_send\" | \"cancel\" | \"candlestick_chart\" | \"car_crash\" | \"car_rental\" | \"car_repair\" | \"card_giftcard\" | \"card_membership\" | \"card_travel\" | \"carpenter\" | \"cases\" | \"casino\" | \"cast_connected\" | \"cast_for_education\" | \"cast\" | \"castle\" | \"catching_pokemon\" | \"category\" | \"celebration\" | \"cell_tower\" | \"cell_wifi\" | \"center_focus_strong\" | \"center_focus_weak\" | \"chair_alt\" | \"chair\" | \"chalet\" | \"change_circle\" | \"change_history\" | \"charging_station\" | \"chat_bubble_outline\" | \"chat_bubble\" | \"chat\" | \"check_box_outline_blank\" | \"check_box\" | \"check_circle_outline\" | \"check_circle\" | \"check\" | \"checklist_rtl\" | \"checklist\" | \"checkroom\" | \"chevron_left\" | \"chevron_right\" | \"child_care\" | \"child_friendly\" | \"chrome_reader_mode\" | \"church\" | \"circle_notifications\" | \"circle\" | \"class\" | \"clean_hands\" | \"cleaning_services\" | \"clear_all\" | \"clear\" | \"close_fullscreen\" | \"close\" | \"closed_caption_disabled\" | \"closed_caption_off\" | \"closed_caption\" | \"cloud_circle\" | \"cloud_done\" | \"cloud_download\" | \"cloud_off\" | \"cloud_queue\" | \"cloud_sync\" | \"cloud_upload\" | \"cloud\" | \"co_present\" | \"co2\" | \"code_off\" | \"code\" | \"coffee_maker\" | \"coffee\" | \"collections_bookmark\" | \"collections\" | \"color_lens\" | \"colorize\" | \"comment_bank\" | \"comment\" | \"comments_disabled\" | \"commit\" | \"commute\" | \"compare_arrows\" | \"compare\" | \"compass_calibration\" | \"compost\" | \"compress\" | \"computer\" | \"confirmation_number\" | \"connect_without_contact\" | \"connected_tv\" | \"connecting_airports\" | \"construction\" | \"contact_emergency\" | \"contact_mail\" | \"contact_page\" | \"contact_phone\" | \"contact_support\" | \"contactless\" | \"contacts\" | \"content_copy\" | \"content_cut\" | \"content_paste_go\" | \"content_paste_off\" | \"content_paste_search\" | \"content_paste\" | \"contrast\" | \"control_camera\" | \"control_point_duplicate\" | \"control_point\" | \"cookie\" | \"copy_all\" | \"copyright\" | \"coronavirus\" | \"corporate_fare\" | \"cottage\" | \"countertops\" | \"create_new_folder\" | \"create\" | \"credit_card_off\" | \"credit_card\" | \"credit_score\" | \"crib\" | \"crisis_alert\" | \"crop_16_9\" | \"crop_3_2\" | \"crop_5_4\" | \"crop_7_5\" | \"crop_din\" | \"crop_free\" | \"crop_landscape\" | \"crop_original\" | \"crop_portrait\" | \"crop_rotate\" | \"crop_square\" | \"crop\" | \"cruelty_free\" | \"css\" | \"currency_bitcoin\" | \"currency_exchange\" | \"currency_franc\" | \"currency_lira\" | \"currency_pound\" | \"currency_ruble\" | \"currency_rupee\" | \"currency_yen\" | \"currency_yuan\" | \"curtains_closed\" | \"curtains\" | \"cyclone\" | \"dangerous\" | \"dark_mode\" | \"dashboard_customize\" | \"dashboard\" | \"data_array\" | \"data_exploration\" | \"data_object\" | \"data_saver_off\" | \"data_saver_on\" | \"data_thresholding\" | \"data_usage\" | \"dataset_linked\" | \"dataset\" | \"date_range\" | \"deblur\" | \"deck\" | \"dehaze\" | \"delete_forever\" | \"delete_outline\" | \"delete_sweep\" | \"delete\" | \"delivery_dining\" | \"density_large\" | \"density_medium\" | \"density_small\" | \"departure_board\" | \"description\" | \"deselect\" | \"design_services\" | \"desk\" | \"desktop_access_disabled\" | \"desktop_mac\" | \"desktop_windows\" | \"details\" | \"developer_board_off\" | \"developer_board\" | \"developer_mode\" | \"device_hub\" | \"device_thermostat\" | \"device_unknown\" | \"devices_fold\" | \"devices_other\" | \"devices\" | \"dialer_sip\" | \"dialpad\" | \"diamond\" | \"difference\" | \"dining\" | \"dinner_dining\" | \"directions_bike\" | \"directions_boat_filled\" | \"directions_boat\" | \"directions_bus_filled\" | \"directions_bus\" | \"directions_car_filled\" | \"directions_car\" | \"directions_off\" | \"directions_railway_filled\" | \"directions_railway\" | \"directions_run\" | \"directions_subway_filled\" | \"directions_subway\" | \"directions_transit_filled\" | \"directions_transit\" | \"directions_walk\" | \"directions\" | \"dirty_lens\" | \"disabled_by_default\" | \"disabled_visible\" | \"disc_full\" | \"discount\" | \"display_settings\" | \"diversity_1\" | \"diversity_2\" | \"diversity_3\" | \"dns\" | \"do_disturb_alt\" | \"do_disturb_off\" | \"do_disturb_on\" | \"do_disturb\" | \"do_not_disturb_alt\" | \"do_not_disturb_off\" | \"do_not_disturb_on_total_silence\" | \"do_not_disturb_on\" | \"do_not_disturb\" | \"do_not_step\" | \"do_not_touch\" | \"dock\" | \"document_scanner\" | \"domain_add\" | \"domain_disabled\" | \"domain_verification\" | \"domain\" | \"done_all\" | \"done_outline\" | \"done\" | \"donut_large\" | \"donut_small\" | \"door_back\" | \"door_front\" | \"door_sliding\" | \"doorbell\" | \"double_arrow\" | \"downhill_skiing\" | \"download_done\" | \"download_for_offline\" | \"download\" | \"downloading\" | \"drafts\" | \"drag_handle\" | \"drag_indicator\" | \"draw\" | \"drive_eta\" | \"drive_file_move_rtl\" | \"drive_file_move\" | \"drive_file_rename_outline\" | \"drive_folder_upload\" | \"dry_cleaning\" | \"dry\" | \"duo\" | \"dvr\" | \"dynamic_feed\" | \"dynamic_form\" | \"e_mobiledata\" | \"earbuds_battery\" | \"earbuds\" | \"east\" | \"edgesensor_high\" | \"edgesensor_low\" | \"edit_attributes\" | \"edit_calendar\" | \"edit_location_alt\" | \"edit_location\" | \"edit_note\" | \"edit_notifications\" | \"edit_off\" | \"edit_road\" | \"edit\" | \"egg_alt\" | \"egg\" | \"eject\" | \"elderly_woman\" | \"elderly\" | \"electric_bike\" | \"electric_bolt\" | \"electric_car\" | \"electric_meter\" | \"electric_moped\" | \"electric_rickshaw\" | \"electric_scooter\" | \"electrical_services\" | \"elevator\" | \"email\" | \"emergency_recording\" | \"emergency_share\" | \"emergency\" | \"emoji_emotions\" | \"emoji_events\" | \"emoji_food_beverage\" | \"emoji_nature\" | \"emoji_objects\" | \"emoji_people\" | \"emoji_symbols\" | \"emoji_transportation\" | \"energy_savings_leaf\" | \"engineering\" | \"enhanced_encryption\" | \"equalizer\" | \"error_outline\" | \"error\" | \"escalator_warning\" | \"escalator\" | \"euro_symbol\" | \"euro\" | \"ev_station\" | \"event_available\" | \"event_busy\" | \"event_note\" | \"event_repeat\" | \"event_seat\" | \"event\" | \"exit_to_app\" | \"expand_circle_down\" | \"expand_less\" | \"expand_more\" | \"expand\" | \"explicit\" | \"explore_off\" | \"explore\" | \"exposure_neg_1\" | \"exposure_neg_2\" | \"exposure_plus_1\" | \"exposure_plus_2\" | \"exposure_zero\" | \"exposure\" | \"extension_off\" | \"extension\" | \"face_2\" | \"face_3\" | \"face_4\" | \"face_5\" | \"face_6\" | \"face_retouching_natural\" | \"face_retouching_off\" | \"face_unlock\" | \"face\" | \"fact_check\" | \"factory\" | \"family_restroom\" | \"fast_forward\" | \"fast_rewind\" | \"fastfood\" | \"favorite_border\" | \"favorite\" | \"fax\" | \"featured_play_list\" | \"featured_video\" | \"feed\" | \"feedback\" | \"female\" | \"fence\" | \"festival\" | \"fiber_dvr\" | \"fiber_manual_record\" | \"fiber_new\" | \"fiber_pin\" | \"fiber_smart_record\" | \"file_copy\" | \"file_download_done\" | \"file_download_off\" | \"file_download\" | \"file_open\" | \"file_present\" | \"file_upload\" | \"filter_1\" | \"filter_2\" | \"filter_3\" | \"filter_4\" | \"filter_5\" | \"filter_6\" | \"filter_7\" | \"filter_8\" | \"filter_9_plus\" | \"filter_9\" | \"filter_alt_off\" | \"filter_alt\" | \"filter_b_and_w\" | \"filter_center_focus\" | \"filter_drama\" | \"filter_frames\" | \"filter_hdr\" | \"filter_list_off\" | \"filter_list\" | \"filter_none\" | \"filter_tilt_shift\" | \"filter_vintage\" | \"filter\" | \"find_in_page\" | \"find_replace\" | \"fingerprint\" | \"fire_extinguisher\" | \"fire_hydrant_alt\" | \"fire_truck\" | \"fireplace\" | \"first_page\" | \"fit_screen\" | \"fitbit\" | \"fitness_center\" | \"flag_circle\" | \"flag\" | \"flaky\" | \"flare\" | \"flash_auto\" | \"flash_off\" | \"flash_on\" | \"flashlight_off\" | \"flashlight_on\" | \"flatware\" | \"flight_class\" | \"flight_land\" | \"flight_takeoff\" | \"flight\" | \"flip_camera_android\" | \"flip_camera_ios\" | \"flip_to_back\" | \"flip_to_front\" | \"flip\" | \"flood\" | \"fluorescent\" | \"flutter_dash\" | \"fmd_bad\" | \"fmd_good\" | \"folder_copy\" | \"folder_delete\" | \"folder_off\" | \"folder_open\" | \"folder_shared\" | \"folder_special\" | \"folder_zip\" | \"folder\" | \"follow_the_signs\" | \"font_download_off\" | \"font_download\" | \"food_bank\" | \"forest\" | \"fork_left\" | \"fork_right\" | \"format_align_center\" | \"format_align_justify\" | \"format_align_left\" | \"format_align_right\" | \"format_bold\" | \"format_clear\" | \"format_color_fill\" | \"format_color_reset\" | \"format_color_text\" | \"format_indent_decrease\" | \"format_indent_increase\" | \"format_italic\" | \"format_line_spacing\" | \"format_list_bulleted\" | \"format_list_numbered_rtl\" | \"format_list_numbered\" | \"format_overline\" | \"format_paint\" | \"format_quote\" | \"format_shapes\" | \"format_size\" | \"format_strikethrough\" | \"format_textdirection_l_to_r\" | \"format_textdirection_r_to_l\" | \"format_underlined\" | \"fort\" | \"forum\" | \"forward_10\" | \"forward_30\" | \"forward_5\" | \"forward_to_inbox\" | \"forward\" | \"foundation\" | \"free_breakfast\" | \"free_cancellation\" | \"front_hand\" | \"fullscreen_exit\" | \"fullscreen\" | \"functions\" | \"g_mobiledata\" | \"g_translate\" | \"gamepad\" | \"games\" | \"garage\" | \"gas_meter\" | \"gavel\" | \"generating_tokens\" | \"gesture\" | \"get_app\" | \"gif_box\" | \"gif\" | \"girl\" | \"gite\" | \"golf_course\" | \"gpp_bad\" | \"gpp_good\" | \"gpp_maybe\" | \"gps_fixed\" | \"gps_not_fixed\" | \"gps_off\" | \"grade\" | \"gradient\" | \"grading\" | \"grain\" | \"graphic_eq\" | \"grass\" | \"grid_3x3\" | \"grid_4x4\" | \"grid_goldenratio\" | \"grid_off\" | \"grid_on\" | \"grid_view\" | \"group_add\" | \"group_off\" | \"group_remove\" | \"group_work\" | \"group\" | \"groups_2\" | \"groups_3\" | \"groups\" | \"h_mobiledata\" | \"h_plus_mobiledata\" | \"hail\" | \"handshake\" | \"handyman\" | \"hardware\" | \"hd\" | \"hdr_auto_select\" | \"hdr_auto\" | \"hdr_enhanced_select\" | \"hdr_off_select\" | \"hdr_off\" | \"hdr_on_select\" | \"hdr_on\" | \"hdr_plus\" | \"hdr_strong\" | \"hdr_weak\" | \"headphones_battery\" | \"headphones\" | \"headset_mic\" | \"headset_off\" | \"headset\" | \"healing\" | \"health_and_safety\" | \"hearing_disabled\" | \"hearing\" | \"heart_broken\" | \"heat_pump\" | \"height\" | \"help_center\" | \"help_outline\" | \"help\" | \"hevc\" | \"hexagon\" | \"hide_image\" | \"hide_source\" | \"high_quality\" | \"highlight_alt\" | \"highlight_off\" | \"highlight\" | \"hiking\" | \"history_edu\" | \"history_toggle_off\" | \"history\" | \"hive\" | \"hls_off\" | \"hls\" | \"holiday_village\" | \"home_max\" | \"home_mini\" | \"home_repair_service\" | \"home_work\" | \"home\" | \"horizontal_distribute\" | \"horizontal_rule\" | \"horizontal_split\" | \"hot_tub\" | \"hotel_class\" | \"hotel\" | \"hourglass_bottom\" | \"hourglass_disabled\" | \"hourglass_empty\" | \"hourglass_full\" | \"hourglass_top\" | \"house_siding\" | \"house\" | \"houseboat\" | \"how_to_reg\" | \"how_to_vote\" | \"html\" | \"http\" | \"https\" | \"hub\" | \"hvac\" | \"ice_skating\" | \"icecream\" | \"image_aspect_ratio\" | \"image_not_supported\" | \"image_search\" | \"image\" | \"imagesearch_roller\" | \"import_contacts\" | \"import_export\" | \"important_devices\" | \"inbox\" | \"incomplete_circle\" | \"indeterminate_check_box\" | \"info_outline\" | \"info\" | \"input\" | \"insert_chart_outlined\" | \"insert_chart\" | \"insert_comment\" | \"insert_drive_file\" | \"insert_emoticon\" | \"insert_invitation\" | \"insert_link\" | \"insert_page_break\" | \"insert_photo\" | \"insights\" | \"install_desktop\" | \"install_mobile\" | \"integration_instructions\" | \"interests\" | \"interpreter_mode\" | \"inventory_2\" | \"inventory\" | \"invert_colors_off\" | \"invert_colors\" | \"ios_share\" | \"iron\" | \"iso\" | \"javascript\" | \"join_full\" | \"join_inner\" | \"join_left\" | \"join_right\" | \"kayaking\" | \"kebab_dining\" | \"key_off\" | \"key\" | \"keyboard_alt\" | \"keyboard_arrow_down\" | \"keyboard_arrow_left\" | \"keyboard_arrow_right\" | \"keyboard_arrow_up\" | \"keyboard_backspace\" | \"keyboard_capslock\" | \"keyboard_command_key\" | \"keyboard_control_key\" | \"keyboard_double_arrow_down\" | \"keyboard_double_arrow_left\" | \"keyboard_double_arrow_right\" | \"keyboard_double_arrow_up\" | \"keyboard_hide\" | \"keyboard_option_key\" | \"keyboard_return\" | \"keyboard_tab\" | \"keyboard_voice\" | \"keyboard\" | \"king_bed\" | \"kitchen\" | \"kitesurfing\" | \"label_important_outline\" | \"label_important\" | \"label_off\" | \"label\" | \"lan\" | \"landscape\" | \"landslide\" | \"language\" | \"laptop_chromebook\" | \"laptop_mac\" | \"laptop_windows\" | \"laptop\" | \"last_page\" | \"launch\" | \"layers_clear\" | \"layers\" | \"leaderboard\" | \"leak_add\" | \"leak_remove\" | \"legend_toggle\" | \"lens_blur\" | \"lens\" | \"library_add_check\" | \"library_add\" | \"library_books\" | \"library_music\" | \"light_mode\" | \"light\" | \"lightbulb_circle\" | \"lightbulb_outline\" | \"lightbulb\" | \"line_axis\" | \"line_style\" | \"line_weight\" | \"linear_scale\" | \"link_off\" | \"link\" | \"linked_camera\" | \"liquor\" | \"list_alt\" | \"list\" | \"live_help\" | \"live_tv\" | \"living\" | \"local_activity\" | \"local_airport\" | \"local_atm\" | \"local_bar\" | \"local_cafe\" | \"local_car_wash\" | \"local_convenience_store\" | \"local_dining\" | \"local_drink\" | \"local_fire_department\" | \"local_florist\" | \"local_gas_station\" | \"local_grocery_store\" | \"local_hospital\" | \"local_hotel\" | \"local_laundry_service\" | \"local_library\" | \"local_mall\" | \"local_movies\" | \"local_offer\" | \"local_parking\" | \"local_pharmacy\" | \"local_phone\" | \"local_pizza\" | \"local_play\" | \"local_police\" | \"local_post_office\" | \"local_printshop\" | \"local_see\" | \"local_shipping\" | \"local_taxi\" | \"location_city\" | \"location_disabled\" | \"location_off\" | \"location_on\" | \"location_searching\" | \"lock_clock\" | \"lock_open\" | \"lock_outline\" | \"lock_person\" | \"lock_reset\" | \"lock\" | \"login\" | \"logo_dev\" | \"logout\" | \"looks_3\" | \"looks_4\" | \"looks_5\" | \"looks_6\" | \"looks_one\" | \"looks_two\" | \"looks\" | \"loop\" | \"loupe\" | \"low_priority\" | \"loyalty\" | \"lte_mobiledata\" | \"lte_plus_mobiledata\" | \"luggage\" | \"lunch_dining\" | \"lyrics\" | \"macro_off\" | \"mail_lock\" | \"mail_outline\" | \"mail\" | \"male\" | \"man_2\" | \"man_3\" | \"man_4\" | \"man\" | \"manage_accounts\" | \"manage_history\" | \"manage_search\" | \"map\" | \"maps_home_work\" | \"maps_ugc\" | \"margin\" | \"mark_as_unread\" | \"mark_chat_read\" | \"mark_chat_unread\" | \"mark_email_read\" | \"mark_email_unread\" | \"mark_unread_chat_alt\" | \"markunread_mailbox\" | \"markunread\" | \"masks\" | \"maximize\" | \"media_bluetooth_off\" | \"media_bluetooth_on\" | \"mediation\" | \"medical_information\" | \"medical_services\" | \"medication_liquid\" | \"medication\" | \"meeting_room\" | \"memory\" | \"menu_book\" | \"menu_open\" | \"menu\" | \"merge_type\" | \"merge\" | \"message\" | \"mic_external_off\" | \"mic_external_on\" | \"mic_none\" | \"mic_off\" | \"mic\" | \"microwave\" | \"military_tech\" | \"minimize\" | \"minor_crash\" | \"miscellaneous_services\" | \"missed_video_call\" | \"mms\" | \"mobile_friendly\" | \"mobile_off\" | \"mobile_screen_share\" | \"mobiledata_off\" | \"mode_comment\" | \"mode_edit_outline\" | \"mode_edit\" | \"mode_fan_off\" | \"mode_night\" | \"mode_of_travel\" | \"mode_standby\" | \"mode\" | \"model_training\" | \"monetization_on\" | \"money_off_csred\" | \"money_off\" | \"money\" | \"monitor_heart\" | \"monitor_weight\" | \"monitor\" | \"monochrome_photos\" | \"mood_bad\" | \"mood\" | \"moped\" | \"more_horiz\" | \"more_time\" | \"more_vert\" | \"more\" | \"mosque\" | \"motion_photos_auto\" | \"motion_photos_off\" | \"motion_photos_on\" | \"motion_photos_pause\" | \"motion_photos_paused\" | \"mouse\" | \"move_down\" | \"move_to_inbox\" | \"move_up\" | \"movie_creation\" | \"movie_filter\" | \"movie\" | \"moving\" | \"mp\" | \"multiline_chart\" | \"multiple_stop\" | \"museum\" | \"music_note\" | \"music_off\" | \"music_video\" | \"my_location\" | \"nat\" | \"nature_people\" | \"nature\" | \"navigate_before\" | \"navigate_next\" | \"navigation\" | \"near_me_disabled\" | \"near_me\" | \"nearby_error\" | \"nearby_off\" | \"nest_cam_wired_stand\" | \"network_cell\" | \"network_check\" | \"network_locked\" | \"network_ping\" | \"network_wifi_1_bar\" | \"network_wifi_2_bar\" | \"network_wifi_3_bar\" | \"network_wifi\" | \"new_label\" | \"new_releases\" | \"newspaper\" | \"next_plan\" | \"next_week\" | \"nfc\" | \"night_shelter\" | \"nightlife\" | \"nightlight_round\" | \"nightlight\" | \"nights_stay\" | \"no_accounts\" | \"no_adult_content\" | \"no_backpack\" | \"no_cell\" | \"no_crash\" | \"no_drinks\" | \"no_encryption_gmailerrorred\" | \"no_encryption\" | \"no_flash\" | \"no_food\" | \"no_luggage\" | \"no_meals\" | \"no_meeting_room\" | \"no_photography\" | \"no_sim\" | \"no_stroller\" | \"no_transfer\" | \"noise_aware\" | \"noise_control_off\" | \"nordic_walking\" | \"north_east\" | \"north_west\" | \"north\" | \"not_accessible\" | \"not_interested\" | \"not_listed_location\" | \"not_started\" | \"note_add\" | \"note_alt\" | \"note\" | \"notes\" | \"notification_add\" | \"notification_important\" | \"notifications_active\" | \"notifications_none\" | \"notifications_off\" | \"notifications_paused\" | \"notifications\" | \"numbers\" | \"offline_bolt\" | \"offline_pin\" | \"offline_share\" | \"oil_barrel\" | \"on_device_training\" | \"ondemand_video\" | \"online_prediction\" | \"opacity\" | \"open_in_browser\" | \"open_in_full\" | \"open_in_new_off\" | \"open_in_new\" | \"open_with\" | \"other_houses\" | \"outbound\" | \"outbox\" | \"outdoor_grill\" | \"outlet\" | \"outlined_flag\" | \"output\" | \"padding\" | \"pages\" | \"pageview\" | \"paid\" | \"palette\" | \"pan_tool_alt\" | \"pan_tool\" | \"panorama_fish_eye\" | \"panorama_horizontal_select\" | \"panorama_horizontal\" | \"panorama_photosphere_select\" | \"panorama_photosphere\" | \"panorama_vertical_select\" | \"panorama_vertical\" | \"panorama_wide_angle_select\" | \"panorama_wide_angle\" | \"panorama\" | \"paragliding\" | \"park\" | \"party_mode\" | \"password\" | \"pattern\" | \"pause_circle_filled\" | \"pause_circle_outline\" | \"pause_circle\" | \"pause_presentation\" | \"pause\" | \"payment\" | \"payments\" | \"pedal_bike\" | \"pending_actions\" | \"pending\" | \"pentagon\" | \"people_alt\" | \"people_outline\" | \"people\" | \"percent\" | \"perm_camera_mic\" | \"perm_contact_calendar\" | \"perm_data_setting\" | \"perm_device_information\" | \"perm_identity\" | \"perm_media\" | \"perm_phone_msg\" | \"perm_scan_wifi\" | \"person_2\" | \"person_3\" | \"person_4\" | \"person_add_alt_1\" | \"person_add_alt\" | \"person_add_disabled\" | \"person_add\" | \"person_off\" | \"person_outline\" | \"person_pin_circle\" | \"person_pin\" | \"person_remove_alt_1\" | \"person_remove\" | \"person_search\" | \"person\" | \"personal_injury\" | \"personal_video\" | \"pest_control_rodent\" | \"pest_control\" | \"pets\" | \"phishing\" | \"phone_android\" | \"phone_bluetooth_speaker\" | \"phone_callback\" | \"phone_disabled\" | \"phone_enabled\" | \"phone_forwarded\" | \"phone_iphone\" | \"phone_locked\" | \"phone_missed\" | \"phone_paused\" | \"phone\" | \"phonelink_erase\" | \"phonelink_lock\" | \"phonelink_off\" | \"phonelink_ring\" | \"phonelink_setup\" | \"phonelink\" | \"photo_album\" | \"photo_camera_back\" | \"photo_camera_front\" | \"photo_camera\" | \"photo_filter\" | \"photo_library\" | \"photo_size_select_actual\" | \"photo_size_select_large\" | \"photo_size_select_small\" | \"photo\" | \"php\" | \"piano_off\" | \"piano\" | \"picture_as_pdf\" | \"picture_in_picture_alt\" | \"picture_in_picture\" | \"pie_chart_outline\" | \"pie_chart\" | \"pin_drop\" | \"pin_end\" | \"pin_invoke\" | \"pin\" | \"pinch\" | \"pivot_table_chart\" | \"pix\" | \"place\" | \"plagiarism\" | \"play_arrow\" | \"play_circle_filled\" | \"play_circle_outline\" | \"play_circle\" | \"play_disabled\" | \"play_for_work\" | \"play_lesson\" | \"playlist_add_check_circle\" | \"playlist_add_check\" | \"playlist_add_circle\" | \"playlist_add\" | \"playlist_play\" | \"playlist_remove\" | \"plumbing\" | \"plus_one\" | \"podcasts\" | \"point_of_sale\" | \"policy\" | \"poll\" | \"polyline\" | \"polymer\" | \"pool\" | \"portable_wifi_off\" | \"portrait\" | \"post_add\" | \"power_input\" | \"power_off\" | \"power_settings_new\" | \"power\" | \"precision_manufacturing\" | \"pregnant_woman\" | \"present_to_all\" | \"preview\" | \"price_change\" | \"price_check\" | \"print_disabled\" | \"print\" | \"priority_high\" | \"privacy_tip\" | \"private_connectivity\" | \"production_quantity_limits\" | \"propane_tank\" | \"propane\" | \"psychology_alt\" | \"psychology\" | \"public_off\" | \"public\" | \"publish\" | \"published_with_changes\" | \"punch_clock\" | \"push_pin\" | \"qr_code_2\" | \"qr_code_scanner\" | \"qr_code\" | \"query_builder\" | \"query_stats\" | \"question_answer\" | \"question_mark\" | \"queue_music\" | \"queue_play_next\" | \"queue\" | \"quickreply\" | \"quiz\" | \"r_mobiledata\" | \"radar\" | \"radio_button_checked\" | \"radio_button_unchecked\" | \"radio\" | \"railway_alert\" | \"ramen_dining\" | \"ramp_left\" | \"ramp_right\" | \"rate_review\" | \"raw_off\" | \"raw_on\" | \"read_more\" | \"real_estate_agent\" | \"receipt_long\" | \"receipt\" | \"recent_actors\" | \"recommend\" | \"record_voice_over\" | \"rectangle\" | \"recycling\" | \"redeem\" | \"redo\" | \"reduce_capacity\" | \"refresh\" | \"remember_me\" | \"remove_circle_outline\" | \"remove_circle\" | \"remove_done\" | \"remove_from_queue\" | \"remove_moderator\" | \"remove_red_eye\" | \"remove_road\" | \"remove_shopping_cart\" | \"remove\" | \"reorder\" | \"repartition\" | \"repeat_on\" | \"repeat_one_on\" | \"repeat_one\" | \"repeat\" | \"replay_10\" | \"replay_30\" | \"replay_5\" | \"replay_circle_filled\" | \"replay\" | \"reply_all\" | \"reply\" | \"report_gmailerrorred\" | \"report_off\" | \"report_problem\" | \"report\" | \"request_page\" | \"request_quote\" | \"reset_tv\" | \"restart_alt\" | \"restaurant_menu\" | \"restaurant\" | \"restore_from_trash\" | \"restore_page\" | \"restore\" | \"reviews\" | \"rice_bowl\" | \"ring_volume\" | \"rocket_launch\" | \"rocket\" | \"roller_shades_closed\" | \"roller_shades\" | \"roller_skating\" | \"roofing\" | \"room_preferences\" | \"room_service\" | \"room\" | \"rotate_90_degrees_ccw\" | \"rotate_90_degrees_cw\" | \"rotate_left\" | \"rotate_right\" | \"roundabout_left\" | \"roundabout_right\" | \"rounded_corner\" | \"route\" | \"router\" | \"rowing\" | \"rss_feed\" | \"rsvp\" | \"rtt\" | \"rule_folder\" | \"rule\" | \"run_circle\" | \"running_with_errors\" | \"rv_hookup\" | \"safety_check\" | \"safety_divider\" | \"sailing\" | \"sanitizer\" | \"satellite_alt\" | \"satellite\" | \"save_alt\" | \"save_as\" | \"save\" | \"saved_search\" | \"savings\" | \"scale\" | \"scanner\" | \"scatter_plot\" | \"schedule_send\" | \"schedule\" | \"schema\" | \"school\" | \"science\" | \"score\" | \"scoreboard\" | \"screen_lock_landscape\" | \"screen_lock_portrait\" | \"screen_lock_rotation\" | \"screen_rotation_alt\" | \"screen_rotation\" | \"screen_search_desktop\" | \"screen_share\" | \"screenshot_monitor\" | \"screenshot\" | \"scuba_diving\" | \"sd_card_alert\" | \"sd_card\" | \"sd_storage\" | \"sd\" | \"search_off\" | \"search\" | \"security_update_good\" | \"security_update_warning\" | \"security_update\" | \"security\" | \"segment\" | \"select_all\" | \"self_improvement\" | \"sell\" | \"send_and_archive\" | \"send_time_extension\" | \"send_to_mobile\" | \"send\" | \"sensor_door\" | \"sensor_occupied\" | \"sensor_window\" | \"sensors_off\" | \"sensors\" | \"sentiment_dissatisfied\" | \"sentiment_neutral\" | \"sentiment_satisfied_alt\" | \"sentiment_satisfied\" | \"sentiment_very_dissatisfied\" | \"sentiment_very_satisfied\" | \"set_meal\" | \"settings_accessibility\" | \"settings_applications\" | \"settings_backup_restore\" | \"settings_bluetooth\" | \"settings_brightness\" | \"settings_cell\" | \"settings_ethernet\" | \"settings_input_antenna\" | \"settings_input_component\" | \"settings_input_composite\" | \"settings_input_hdmi\" | \"settings_input_svideo\" | \"settings_overscan\" | \"settings_phone\" | \"settings_power\" | \"settings_remote\" | \"settings_suggest\" | \"settings_system_daydream\" | \"settings_voice\" | \"settings\" | \"severe_cold\" | \"shape_line\" | \"share_location\" | \"share\" | \"shield_moon\" | \"shield\" | \"shop_2\" | \"shop_two\" | \"shop\" | \"shopping_bag\" | \"shopping_basket\" | \"shopping_cart_checkout\" | \"shopping_cart\" | \"short_text\" | \"shortcut\" | \"show_chart\" | \"shower\" | \"shuffle_on\" | \"shuffle\" | \"shutter_speed\" | \"sick\" | \"sign_language\" | \"signal_cellular_0_bar\" | \"signal_cellular_4_bar\" | \"signal_cellular_alt_1_bar\" | \"signal_cellular_alt_2_bar\" | \"signal_cellular_alt\" | \"signal_cellular_connected_no_internet_0_bar\" | \"signal_cellular_connected_no_internet_4_bar\" | \"signal_cellular_no_sim\" | \"signal_cellular_nodata\" | \"signal_cellular_null\" | \"signal_cellular_off\" | \"signal_wifi_0_bar\" | \"signal_wifi_4_bar_lock\" | \"signal_wifi_4_bar\" | \"signal_wifi_bad\" | \"signal_wifi_connected_no_internet_4\" | \"signal_wifi_off\" | \"signal_wifi_statusbar_4_bar\" | \"signal_wifi_statusbar_connected_no_internet_4\" | \"signal_wifi_statusbar_null\" | \"signpost\" | \"sim_card_alert\" | \"sim_card_download\" | \"sim_card\" | \"single_bed\" | \"sip\" | \"skateboarding\" | \"skip_next\" | \"skip_previous\" | \"sledding\" | \"slideshow\" | \"slow_motion_video\" | \"smart_button\" | \"smart_display\" | \"smart_screen\" | \"smart_toy\" | \"smartphone\" | \"smoke_free\" | \"smoking_rooms\" | \"sms_failed\" | \"sms\" | \"snippet_folder\" | \"snooze\" | \"snowboarding\" | \"snowmobile\" | \"snowshoeing\" | \"soap\" | \"social_distance\" | \"solar_power\" | \"sort_by_alpha\" | \"sort\" | \"sos\" | \"soup_kitchen\" | \"source\" | \"south_america\" | \"south_east\" | \"south_west\" | \"south\" | \"spa\" | \"space_bar\" | \"space_dashboard\" | \"spatial_audio_off\" | \"spatial_audio\" | \"spatial_tracking\" | \"speaker_group\" | \"speaker_notes_off\" | \"speaker_notes\" | \"speaker_phone\" | \"speaker\" | \"speed\" | \"spellcheck\" | \"splitscreen\" | \"spoke\" | \"sports_bar\" | \"sports_baseball\" | \"sports_basketball\" | \"sports_cricket\" | \"sports_esports\" | \"sports_football\" | \"sports_golf\" | \"sports_gymnastics\" | \"sports_handball\" | \"sports_hockey\" | \"sports_kabaddi\" | \"sports_martial_arts\" | \"sports_mma\" | \"sports_motorsports\" | \"sports_rugby\" | \"sports_score\" | \"sports_soccer\" | \"sports_tennis\" | \"sports_volleyball\" | \"sports\" | \"square_foot\" | \"square\" | \"ssid_chart\" | \"stacked_bar_chart\" | \"stacked_line_chart\" | \"stadium\" | \"stairs\" | \"star_border_purple500\" | \"star_border\" | \"star_half\" | \"star_outline\" | \"star_purple500\" | \"star_rate\" | \"star\" | \"stars\" | \"start\" | \"stay_current_landscape\" | \"stay_current_portrait\" | \"stay_primary_landscape\" | \"stay_primary_portrait\" | \"sticky_note_2\" | \"stop_circle\" | \"stop_screen_share\" | \"stop\" | \"storage\" | \"store_mall_directory\" | \"store\" | \"storefront\" | \"storm\" | \"straight\" | \"straighten\" | \"stream\" | \"streetview\" | \"strikethrough_s\" | \"stroller\" | \"style\" | \"subdirectory_arrow_left\" | \"subdirectory_arrow_right\" | \"subject\" | \"subscript\" | \"subscriptions\" | \"subtitles_off\" | \"subtitles\" | \"subway\" | \"summarize\" | \"superscript\" | \"supervised_user_circle\" | \"supervisor_account\" | \"support_agent\" | \"support\" | \"surfing\" | \"surround_sound\" | \"swap_calls\" | \"swap_horiz\" | \"swap_horizontal_circle\" | \"swap_vert\" | \"swap_vertical_circle\" | \"swipe_down_alt\" | \"swipe_down\" | \"swipe_left_alt\" | \"swipe_left\" | \"swipe_right_alt\" | \"swipe_right\" | \"swipe_up_alt\" | \"swipe_up\" | \"swipe_vertical\" | \"swipe\" | \"switch_access_shortcut_add\" | \"switch_access_shortcut\" | \"switch_account\" | \"switch_camera\" | \"switch_left\" | \"switch_right\" | \"switch_video\" | \"synagogue\" | \"sync_alt\" | \"sync_disabled\" | \"sync_lock\" | \"sync_problem\" | \"sync\" | \"system_security_update_good\" | \"system_security_update_warning\" | \"system_security_update\" | \"system_update_alt\" | \"system_update\" | \"tab_unselected\" | \"tab\" | \"table_bar\" | \"table_chart\" | \"table_restaurant\" | \"table_rows\" | \"table_view\" | \"tablet_android\" | \"tablet_mac\" | \"tablet\" | \"tag_faces\" | \"tag\" | \"takeout_dining\" | \"tap_and_play\" | \"tapas\" | \"task_alt\" | \"task\" | \"taxi_alert\" | \"temple_buddhist\" | \"temple_hindu\" | \"terminal\" | \"terrain\" | \"text_decrease\" | \"text_fields\" | \"text_format\" | \"text_increase\" | \"text_rotate_up\" | \"text_rotate_vertical\" | \"text_rotation_angledown\" | \"text_rotation_angleup\" | \"text_rotation_down\" | \"text_rotation_none\" | \"text_snippet\" | \"textsms\" | \"texture\" | \"theater_comedy\" | \"theaters\" | \"thermostat_auto\" | \"thermostat\" | \"thumb_down_alt\" | \"thumb_down_off_alt\" | \"thumb_down\" | \"thumb_up_alt\" | \"thumb_up_off_alt\" | \"thumb_up\" | \"thumbs_up_down\" | \"thunderstorm\" | \"time_to_leave\" | \"timelapse\" | \"timeline\" | \"timer_10_select\" | \"timer_10\" | \"timer_3_select\" | \"timer_3\" | \"timer_off\" | \"timer\" | \"tips_and_updates\" | \"tire_repair\" | \"title\" | \"toc\" | \"today\" | \"toggle_off\" | \"toggle_on\" | \"token\" | \"toll\" | \"tonality\" | \"topic\" | \"tornado\" | \"touch_app\" | \"tour\" | \"toys\" | \"track_changes\" | \"traffic\" | \"train\" | \"tram\" | \"transcribe\" | \"transfer_within_a_station\" | \"transform\" | \"transgender\" | \"transit_enterexit\" | \"translate\" | \"travel_explore\" | \"trending_down\" | \"trending_flat\" | \"trending_up\" | \"trip_origin\" | \"troubleshoot\" | \"try\" | \"tsunami\" | \"tty\" | \"tune\" | \"tungsten\" | \"turn_left\" | \"turn_right\" | \"turn_sharp_left\" | \"turn_sharp_right\" | \"turn_slight_left\" | \"turn_slight_right\" | \"turned_in_not\" | \"turned_in\" | \"tv_off\" | \"tv\" | \"two_wheeler\" | \"type_specimen\" | \"u_turn_left\" | \"u_turn_right\" | \"umbrella\" | \"unarchive\" | \"undo\" | \"unfold_less_double\" | \"unfold_less\" | \"unfold_more_double\" | \"unfold_more\" | \"unpublished\" | \"unsubscribe\" | \"upcoming\" | \"update_disabled\" | \"update\" | \"upgrade\" | \"upload_file\" | \"upload\" | \"usb_off\" | \"usb\" | \"vaccines\" | \"vape_free\" | \"vaping_rooms\" | \"verified_user\" | \"verified\" | \"vertical_align_bottom\" | \"vertical_align_center\" | \"vertical_align_top\" | \"vertical_distribute\" | \"vertical_shades_closed\" | \"vertical_shades\" | \"vertical_split\" | \"vibration\" | \"video_call\" | \"video_camera_back\" | \"video_camera_front\" | \"video_chat\" | \"video_file\" | \"video_label\" | \"video_library\" | \"video_settings\" | \"video_stable\" | \"videocam_off\" | \"videocam\" | \"videogame_asset_off\" | \"videogame_asset\" | \"view_agenda\" | \"view_array\" | \"view_carousel\" | \"view_column\" | \"view_comfy_alt\" | \"view_comfy\" | \"view_compact_alt\" | \"view_compact\" | \"view_cozy\" | \"view_day\" | \"view_headline\" | \"view_in_ar\" | \"view_kanban\" | \"view_list\" | \"view_module\" | \"view_quilt\" | \"view_sidebar\" | \"view_stream\" | \"view_timeline\" | \"view_week\" | \"vignette\" | \"villa\" | \"visibility_off\" | \"visibility\" | \"voice_chat\" | \"voice_over_off\" | \"voicemail\" | \"volcano\" | \"volume_down\" | \"volume_mute\" | \"volume_off\" | \"volume_up\" | \"volunteer_activism\" | \"vpn_key_off\" | \"vpn_key\" | \"vpn_lock\" | \"vrpano\" | \"wallet\" | \"wallpaper\" | \"warehouse\" | \"warning_amber\" | \"warning\" | \"wash\" | \"watch_later\" | \"watch_off\" | \"watch\" | \"water_damage\" | \"water_drop\" | \"water\" | \"waterfall_chart\" | \"waves\" | \"waving_hand\" | \"wb_auto\" | \"wb_cloudy\" | \"wb_incandescent\" | \"wb_iridescent\" | \"wb_shade\" | \"wb_sunny\" | \"wb_twilight\" | \"wc\" | \"web_asset_off\" | \"web_asset\" | \"web_stories\" | \"web\" | \"webhook\" | \"weekend\" | \"west\" | \"whatshot\" | \"wheelchair_pickup\" | \"where_to_vote\" | \"widgets\" | \"width_full\" | \"width_normal\" | \"width_wide\" | \"wifi_1_bar\" | \"wifi_2_bar\" | \"wifi_calling_3\" | \"wifi_calling\" | \"wifi_channel\" | \"wifi_find\" | \"wifi_lock\" | \"wifi_off\" | \"wifi_password\" | \"wifi_protected_setup\" | \"wifi_tethering_error\" | \"wifi_tethering_off\" | \"wifi_tethering\" | \"wifi\" | \"wind_power\" | \"window\" | \"wine_bar\" | \"woman_2\" | \"woman\" | \"work_history\" | \"work_off\" | \"work_outline\" | \"work\" | \"workspace_premium\" | \"workspaces\" | \"wrap_text\" | \"wrong_location\" | \"wysiwyg\" | \"yard\" | \"youtube_searched_for\" | \"zoom_in_map\" | \"zoom_in\" | \"zoom_out_map\" | \"zoom_out\"",
                    "file": "libs/material/src/api/icon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "libs/material/src/alert/alert.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AlertComponent>",
                    "file": "libs/material/src/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/app-auth/app-auth.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AppAuthComponent>",
                    "file": "libs/material/src/app-auth/app-auth.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/app-inventory/app-inventory.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AppInventoryComponent>",
                    "file": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "libs/material/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/colors/colors.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorsComponent>",
                    "file": "libs/material/src/colors/colors.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/fonts/fonts.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FontsComponent>",
                    "file": "libs/material/src/fonts/fonts.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormComponent>",
                    "file": "libs/material/src/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/list/list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ListComponent>",
                    "file": "libs/material/src/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/menu/menu.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MenuComponent>",
                    "file": "libs/material/src/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/nav-list/nav-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavListComponent>",
                    "file": "libs/material/src/nav-list/nav-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/notification/notification.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NotificationComponent>",
                    "file": "libs/material/src/notification/notification.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/stepper/stepper.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StepperComponent>",
                    "file": "libs/material/src/stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/sticky-notes/sticky-notes.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StickyNotesComponent>",
                    "file": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/tab/tab-container.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabContainerComponent>",
                    "file": "libs/material/src/tab/tab-container.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/toolbar/toolbar.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToolbarComponent>",
                    "file": "libs/material/src/toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/button/button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "libs/material/src/button/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/combined-button/combined-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CombinedButtonComponent>",
                    "file": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/common-button/common-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CommonButtonComponent>",
                    "file": "libs/material/src/button/common-button/common-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/icon-button/icon-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<IconButtonComponent>",
                    "file": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SampleButtonsComponent>",
                    "file": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/button/tab-button/tab-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabButtonComponent>",
                    "file": "libs/material/src/button/tab-button/tab-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/array-input/array-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ArrayInputComponent>",
                    "file": "libs/material/src/form/array-input/array-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/boolean-input/boolean-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BooleanInputComponent>",
                    "file": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/date-input/date-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateInputComponent>",
                    "file": "libs/material/src/form/date-input/date-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/enum-input/enum-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<EnumInputComponent>",
                    "file": "libs/material/src/form/enum-input/enum-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/input/input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "libs/material/src/form/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/number-input/number-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NumberInputComponent>",
                    "file": "libs/material/src/form/number-input/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/form/text-input/text-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextInputComponent>",
                    "file": "libs/material/src/form/text-input/text-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/list/list-item/list-item.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ListItemComponent>",
                    "file": "libs/material/src/list/list-item/list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavListItemComponent>",
                    "file": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/material/src/tab/tab-container.component.ts": [
                {
                    "name": "TabContainerType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sidenav\" | \"tab\"",
                    "file": "libs/material/src/tab/tab-container.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "libs/material/src/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/api/animations.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "slideFromRightOnEnter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-auth/app-auth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppAuthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-inventory/app-inventory.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/app-inventory/app-inventory.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppInventoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/combined-button/combined-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CombinedButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/common-button/common-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/common-button/common-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/common-button/common-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/common-button/common-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommonButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/icon-button/icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/sample-buttons/sample-buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SampleButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/tab-button/tab-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/tab-button/tab-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/tab-button/tab-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/button/tab-button/tab-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/fonts/fonts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FontsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/array-input/array-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/array-input/array-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/array-input/array-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/array-input/array-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArrayInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/boolean-input/boolean-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BooleanInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/date-input/date-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/enum-input/enum-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/enum-input/enum-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/enum-input/enum-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/enum-input/enum-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EnumInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form-actions/form-actions.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FormActionsDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/has-value/has-value.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "HasValueDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/number-input/number-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/form/text-input/text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list-item/list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/list/list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/badge/badge.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BadgeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/class-list/class-list.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ClassListDirective",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/focus/focus.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FocusDirective",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/micro/scroll-direction/scroll-direction.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ScrollDirectionDirective",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/set-attribute/set-attribute.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SetAttributeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/set-component-attribute/set-component-attribute.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SetComponentAttributeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/micro/tooltip/tooltip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TooltipDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list-item/nav-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/nav-list/nav-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/notification/notification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/sticky-notes/sticky-notes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StickyNotesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/tab/tab.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TabDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/toolbar/toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}