import { PubSub } from 'graphql-subscriptions';
import { <%- className %>Object } from './entity';

export const <%- className %>PubSub = new PubSub();

export const <%- constantName %>_SAVE = '<%- fileName %>SaveEvent';
export const <%- constantName %>_DELETE = '<%- fileName %>DeleteEvent';
export const <%- constantName %>_UPDATE = '<%- fileName %>UpdateEvent';

export function publish<%- className %>Save(value: <%- className %>Object) {
  <%- className %>PubSub.publish(<%- constantName %>_SAVE, { [<%- constantName %>_SAVE]: value });
}

export function publish<%- className %>Update(value: <%- className %>Object) {
  <%- className %>PubSub.publish(<%- constantName %>_UPDATE, { [<%- constantName %>_UPDATE]: value });
}

export function publish<%- className %>Delete(value: <%- className %>Object) {
  <%- className %>PubSub.publish(<%- constantName %>_DELETE, { [<%- constantName %>_DELETE]: value });
}

export function subscribe<%- className %>Save() {
  return <%- className %>PubSub.asyncIterator(<%- constantName %>_SAVE);
}

export function subscribe<%- className %>Delete() {
  return <%- className %>PubSub.asyncIterator(<%- constantName %>_DELETE);
}

export function subscribe<%- className %>Update() {
  return <%- className %>PubSub.asyncIterator(<%- constantName %>_UPDATE);
}
